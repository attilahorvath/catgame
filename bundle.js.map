{"version":3,"file":"bundle.js","sources":["src/Matrix3.js","src/Shader.js","src/Renderer.js","src/Input.js","src/Sprite.js","src/SpriteBatch.js","shaders/sprite.vert","shaders/sprite.frag","src/TextSegment.js","src/Text.js","src/Particles.js","src/Grid.js","src/states/Minigame.js","src/minigames/Meowsweeper.js","src/minigames/PawPawToe.js","src/minigames/Sudocat.js","src/minigames/Meowmory.js","src/minigames/Meowjong.js","src/minigames/Meowsterpiece.js","src/states/Select.js","src/index.js","src/Game.js"],"sourcesContent":["export default class Matrix3 extends Float32Array {\n  static identity() {\n    return new Matrix3([\n      1.0, 0.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 0.0, 1.0,\n    ]);\n  }\n\n  static ortho(left, right, bottom, top) {\n    return new Matrix3([\n      2.0 / (right - left), 0.0, 0.0,\n      0.0, 2.0 / (top - bottom), 0.0,\n      -(right + left) / (right - left), -(top + bottom) / (top - bottom), 1.0,\n    ]);\n  }\n}\n","export default class {\n  #program;\n  #viewUniformLocation;\n  #projectionUniformLocation;\n  #texUniformLocation;\n  #imageSizeUniformLocation;\n\n  constructor(gl, vertexShaderSource, fragmentShaderSource) {\n    const vertexShader = this.#compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource)\n    const fragmentShader = this.#compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n    const program = gl.createProgram();\n\n    const attachShader = gl.attachShader.bind(gl);\n    const bindAttribLocation = gl.bindAttribLocation.bind(gl);\n    const getUniformLocation = gl.getUniformLocation.bind(gl);\n\n    attachShader(program, vertexShader);\n    attachShader(program, fragmentShader);\n\n    bindAttribLocation(program, POSITION_ATTRIBUTE_LOCATION, 'vertexPosition');\n    bindAttribLocation(program, COLOR_ATTRIBUTE_LOCATION, 'vertexColor');\n    bindAttribLocation(program, TEX_COORD_ATTRIBUTE_LOCATION, 'vertexTexCoord');\n\n    bindAttribLocation(program, SPRITE_POSITION_ATTRIBUTE_LOCATION, 'spritePosition');\n    bindAttribLocation(program, SPRITE_SIZE_ATTRIBUTE_LOCATION, 'spriteSize');\n    bindAttribLocation(program, SPRITE_TYPE_ATTRIBUTE_LOCATION, 'spriteType');\n    bindAttribLocation(program, SPRITE_COLOR_ATTRIBUTE_LOCATION, 'spriteColor');\n\n    gl.linkProgram(program);\n\n    this.#viewUniformLocation = getUniformLocation(program, 'view');\n    this.#projectionUniformLocation = getUniformLocation(program, 'projection');\n    this.#texUniformLocation = getUniformLocation(program, 'tex');\n    this.#imageSizeUniformLocation = getUniformLocation(program, 'imageSize');\n\n    this.#program = program;\n  }\n\n  use(gl, view, projection) {\n    gl.useProgram(this.#program);\n\n    this.setup(gl, view, projection);\n  }\n\n  setup(gl, view, projection) {\n    if (this.#viewUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#viewUniformLocation, false, view);\n    }\n\n    if (this.#projectionUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#projectionUniformLocation, false, projection);\n    }\n\n    if (this.#texUniformLocation != null) {\n      gl.uniform1i(this.#texUniformLocation, 0);\n    }\n\n    if (this.#imageSizeUniformLocation != null) {\n      gl.uniform1f(this.#imageSizeUniformLocation, IMAGE_SIZE);\n    }\n  }\n\n  #compileShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    return shader;\n  }\n}\n","import Matrix3 from './Matrix3';\n\nimport Shader from './Shader';\n\nexport default class {\n  #onresize;\n  #gl;\n  #shaders;\n  #textures;\n  #images;\n  #currentShader;\n  #currentVao;\n  #currentTexture;\n\n  constructor(onresize) {\n    this.#onresize = onresize;\n\n    document.body.style.margin = '0';\n    document.body.style.padding = '0';\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.style.display = 'block';\n    this.canvas.style.width = '100dvw';\n    this.canvas.style.height = '100dvh';\n    this.canvas.style.cursor = 'none';\n    this.canvas.style.touchAction = 'none';\n\n    new ResizeObserver(() => {\n      this.w = this.canvas.clientWidth;\n      this.h = this.canvas.clientHeight;\n\n      this.canvas.width = this.w;\n      this.canvas.height = this.h;\n\n      this.horizontal = this.w > this.h;\n\n      this.#gl.viewport(0, 0, this.w, this.h);\n      this.projection = Matrix3.ortho(0, this.w, this.h, 0);\n\n      this.#onresize();\n    }).observe(this.canvas, { box: 'content-box' });\n\n    document.body.appendChild(this.canvas);\n\n    this.#gl = this.canvas.getContext('webgl2');\n\n    this.#gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    this.#gl.clearColor(0.68, 0.68, 0.94, 1.0);\n\n    this.#gl.pixelStorei(this.#gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n    this.#gl.enable(this.#gl.BLEND);\n    this.#gl.blendFunc(this.#gl.ONE, this.#gl.ONE_MINUS_SRC_ALPHA);\n\n    this.quadBuffer = this.#createQuadBuffer();\n\n    this.#shaders = new Map();\n    this.#textures = new Map();\n    this.#images = [];\n\n    this.view = Matrix3.identity();\n    this.projection = Matrix3.ortho(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  createShader(name, vertexShaderSource, fragmentShaderSource) {\n    const cachedShader = this.#shaders.get(name);\n\n    if (cachedShader) {\n      return cachedShader;\n    }\n\n    const shader = new Shader(this.#gl, vertexShaderSource, fragmentShaderSource);\n    this.#shaders.set(name, shader);\n\n    return shader;\n  }\n\n  createVao() {\n    const vao = this.#gl.createVertexArray();\n\n    this.#gl.bindVertexArray(vao);\n\n    return vao;\n  }\n\n  createBuffer(data, dynamic) {\n    const buffer = this.#gl.createBuffer();\n\n    this.updateBuffer(buffer, data, dynamic);\n\n    return buffer;\n  }\n\n  updateBuffer(buffer, data, dynamic) {\n    this.useBuffer(buffer);\n\n    this.#gl.bufferData(this.#gl.ARRAY_BUFFER, data, dynamic ? this.#gl.DYNAMIC_DRAW : this.#gl.STATIC_DRAW);\n  }\n\n  useBuffer(buffer) {\n    this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, buffer);\n  }\n\n  setAttribute(location, size, stride, offset, divisor) {\n    this.#gl.vertexAttribPointer(location, size, this.#gl.FLOAT, false, stride, offset);\n    this.#gl.enableVertexAttribArray(location);\n\n    if (divisor != null) {\n      this.#gl.vertexAttribDivisor(location, divisor);\n    }\n  }\n\n  fetchTexture(filename, smooth) {\n    const path = filename ? `textures/${filename}.png` : 'blank';\n    const cachedTexture = this.#textures.get(`${path}_${smooth}`);\n\n    if (cachedTexture) {\n      return cachedTexture;\n    }\n\n    const texture = this.#gl.createTexture();\n    this.#prepareTexture(texture, null, smooth);\n\n    if (filename) {\n      const imageIndex = this.#images.length;\n      const image = new Image();\n\n      image.src = path;\n      image.onload = () => this.#prepareTexture(texture, imageIndex, smooth);\n\n      this.#images[imageIndex] = image;\n    }\n\n    this.#textures.set(`${path}_${smooth}`, texture);\n\n    return texture;\n  }\n\n  clear() {\n    this.#gl.clear(this.#gl.COLOR_BUFFER_BIT);\n  }\n\n  draw(shader, vao, texture, vertexCount, instanceCount) {\n    if (shader !== this.#currentShader) {\n      shader.use(this.#gl, this.view, this.projection);\n      this.#currentShader = shader;\n    } else {\n      this.#currentShader.setup(this.#gl, this.view, this.projection);\n    }\n\n    if (vao !== this.#currentVao) {\n      this.#gl.bindVertexArray(vao);\n      this.#currentVao = vao;\n    }\n\n    if (texture !== this.#currentTexture) {\n      this.#gl.activeTexture(this.#gl.TEXTURE0);\n      this.#gl.bindTexture(this.#gl.TEXTURE_2D, texture);\n      this.#currentTexture = texture;\n    }\n\n    if (instanceCount != null) {\n      this.#gl.drawArraysInstanced(this.#gl.TRIANGLES, 0, vertexCount, instanceCount);\n    } else {\n      this.#gl.drawArrays(this.#gl.TRIANGLES, 0, vertexCount);\n    }\n  }\n\n  #createQuadBuffer() {\n    return this.createBuffer(new Float32Array([\n      0.0, 0.0, 0.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 0.0, 1.0, 0.0,\n\n      1.0, 0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 1.0, 1.0, 1.0,\n    ]), false);\n  }\n\n  #prepareTexture(texture, imageIndex, smooth) {\n    const gl = this.#gl;\n    const texture0 = gl.TEXTURE0;\n    const texture2d = gl.TEXTURE_2D;\n    const texImage2D = gl.texImage2D.bind(gl);\n    const texParameteri = gl.texParameteri.bind(gl);\n    const rgba = gl.RGBA;\n    const unsignedByte = gl.UNSIGNED_BYTE;\n    const filter = smooth ? gl.LINEAR : gl.NEAREST;\n\n    gl.activeTexture(texture0);\n    gl.bindTexture(texture2d, texture);\n\n    if (imageIndex != null) {\n      texImage2D(texture2d, 0, rgba, rgba, unsignedByte, this.#images[imageIndex]);\n    } else {\n      texImage2D(texture2d, 0, rgba, 1, 1, 0, rgba, unsignedByte, new Uint8Array([255, 255, 255, 255,]));\n    }\n\n    texParameteri(texture2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    texParameteri(texture2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    texParameteri(texture2d, gl.TEXTURE_MIN_FILTER, filter);\n    texParameteri(texture2d, gl.TEXTURE_MAG_FILTER, filter);\n  }\n}\n","export default class {\n  #newKeyPresses;\n  #newKeyReleases;\n  #newPress;\n  #newRelease;\n  #lastX;\n  #lastY;\n\n  constructor(game) {\n    this.#newKeyPresses = {};\n    this.#newKeyReleases = {};\n\n    game.renderer.canvas.addEventListener('pointermove', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n    });\n\n    game.renderer.canvas.addEventListener('pointerdown', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newPress = true;\n    });\n\n    game.renderer.canvas.addEventListener('pointerup', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newRelease = true;\n    });\n\n    addEventListener('keydown', event => {\n      this.#newKeyPresses[event.code] = true;\n    });\n\n    addEventListener('keyup', event => {\n      this.#newKeyReleases[event.code] = true;\n    });\n  }\n\n  update() {\n    if (this.x !== this.#lastX || this.y !== this.#lastY) {\n      this.#lastX = this.x;\n      this.#lastY = this.y;\n      this.moved = true;\n    }\n\n    this.press = false;\n\n    if (this.#newPress) {\n      this.press = true;\n      this.#newPress = false;\n    }\n\n    this.release = false;\n\n    if (this.#newRelease) {\n      this.release = true;\n      this.#newRelease = false;\n    }\n\n    this.keyPresses = {};\n\n    for (const [newKeyPress, newKeyPressValue] of Object.entries(this.#newKeyPresses)) {\n      if (newKeyPressValue) {\n        this.keyPresses[newKeyPress] = true;\n        this.#newKeyPresses[newKeyPress] = false;\n      }\n    }\n\n    this.keyReleases = {};\n\n    for (const [newKeyRelease, newKeyReleaseValue] of Object.entries(this.#newKeyReleases)) {\n      if (newKeyReleaseValue) {\n        this.keyReleases[newKeyRelease] = true;\n        this.#newKeyReleases[newKeyRelease] = false;\n      }\n    }\n\n    this.clickRead = false;\n  }\n\n  click() {\n    return !this.clickRead && ((this.mouse && this.release) || (!this.mouse && this.press));\n  }\n}\n","export default class {\n  constructor(x, y, s, type, color) {\n    this.x = x;\n    this.y = y;\n    this.s = s;\n    this.type = type;\n    this.enabled = true;\n    this.hidden = false;\n    this.a = 1.0;\n\n    this.setColor(color);\n  }\n\n  attributes() {\n    return [this.x, this.y, this.s, this.type, this.r, this.g, this.b, this.hidden ? 0 : this.a];\n  }\n\n  setBaseColor(color) {\n    this.baseColor = color;\n    this.setColor(color);\n  }\n\n  setColor(index) {\n    let color = [0xd9dcff, 0xadadf0, 0xc28c94, 0xa66670, 0x575775,\n                 0x545454, 0xb36e14, 0xe6e6e6, 0xa38f61, 0x999999,\n                 0x90a8c3, 0x469d89, 0xb5c99a, 0x00a6fb, 0x4cc9f0,\n                 0xf4cae0, 0xe500a4, 0xf20089, 0xffffff, 0xffccf0,\n                 0x000000][index];\n    if (color == null) {\n      color = 0xffffff;\n    }\n    this.r = ((color & 0xff0000) >> 16) / 255.0;\n    this.g = ((color & 0x00ff00) >> 8) / 255.0;\n    this.b = (color & 0x0000ff) / 255.0;\n  }\n\n  activate(active) {\n    this.inactive = !active;\n    this.setColor(active ? (this.baseColor || PRIMARY_COLOR) : INACTIVE_COLOR);\n  }\n\n  write(text, content, s, color = ACTIVE_COLOR, animations = null, delay = null) {\n    (this.content || {}).enabled = false;\n    this.content = text.write(content.toString(), this.x + (this.s - s) / 2, this.y + (this.s - s) / 2, s, color, animations, delay);\n  }\n\n  draw(spriteBatch, s, type, color) {\n    (this.content || {}).enabled = false;\n    this.content = spriteBatch.add(this.x + (this.s - s) / 2, this.y + (this.s - s) / 2, s, type, color);\n  }\n}\n","import vertexShaderSource from '../shaders/sprite.vert';\nimport fragmentShaderSource from '../shaders/sprite.frag';\n\nimport Sprite from './Sprite';\n\nexport default class {\n  #game;\n  #shader;\n  #vao;\n  #instanceBuffer;\n  #texture;\n  #spritesChanged;\n\n  constructor(game, smooth = false, textureFilename = 'sprites') {\n    this.#game = game;\n    const renderer = game.renderer;\n\n    this.#shader = renderer.createShader('sprite', vertexShaderSource, fragmentShaderSource);\n\n    this.#vao = renderer.createVao();\n\n    renderer.useBuffer(renderer.quadBuffer);\n\n    renderer.setAttribute(POSITION_ATTRIBUTE_LOCATION, 2, 16, 0);\n    renderer.setAttribute(TEX_COORD_ATTRIBUTE_LOCATION, 2, 16, 8);\n\n    this.#instanceBuffer = renderer.createBuffer(new Float32Array(), true);\n\n    renderer.setAttribute(SPRITE_POSITION_ATTRIBUTE_LOCATION, 2, 32, 0, 1);\n    renderer.setAttribute(SPRITE_SIZE_ATTRIBUTE_LOCATION, 1, 32, 8, 1);\n    renderer.setAttribute(SPRITE_TYPE_ATTRIBUTE_LOCATION, 1, 32, 12, 1);\n    renderer.setAttribute(SPRITE_COLOR_ATTRIBUTE_LOCATION, 4, 32, 16, 1);\n\n    this.#texture = renderer.fetchTexture(textureFilename, smooth);\n\n    this.sprites = [];\n    this.changed();\n  }\n\n  add(x, y, s, type, color) {\n    if (x === CENTER) {\n      x = this.#game.renderer.w / 2 - s / 2;\n    }\n\n    if (y === CENTER) {\n      y = this.#game.renderer.h / 2 - s / 2;\n    }\n\n    const sprite = new Sprite(x, y, s, type, color);\n\n    this.sprites.push(sprite);\n    this.changed();\n\n    return sprite;\n  }\n\n  changed() {\n    this.#spritesChanged = true;\n  }\n\n  update() {\n    if (this.#spritesChanged) {\n      this.sprites = this.sprites.filter(sprite => sprite.enabled);\n\n      this.#game.renderer.updateBuffer(this.#instanceBuffer, new Float32Array(\n        this.sprites\n            .map(sprite => sprite.attributes())\n            .flat()\n      ), true);\n\n      this.#spritesChanged = false;\n    }\n  }\n\n  draw() {\n    this.#game.renderer.draw(this.#shader, this.#vao, this.#texture, 6, this.sprites.length);\n  }\n}\n","#version 300 es\n\nuniform mat3 view;\nuniform mat3 projection;\nuniform float imageSize;\n\nuniform sampler2D tex;\n\nin vec2 vertexPosition;\nin vec2 vertexTexCoord;\n\nin vec2 spritePosition;\nin float spriteSize;\nin float spriteType;\nin vec4 spriteColor;\n\nout vec2 texCoord;\nout vec4 tint;\n\nvoid main() {\n  vec2 texOffset = vec2(imageSize / float(textureSize(tex, 0)),\n                        imageSize / float(textureSize(tex, 0).y));\n\n  texCoord = vec2(texOffset.x, 0.0) * spriteType + vertexTexCoord * texOffset;\n  tint = spriteColor;\n  tint.rgb *= tint.a;\n\n  gl_Position = vec4(projection * view * vec3(vertexPosition * spriteSize + spritePosition, 1.0), 1.0);\n}\n","#version 300 es\n\nprecision highp float;\n\nuniform sampler2D tex;\n\nin vec2 texCoord;\nin vec4 tint;\n\nout vec4 fragmentColor;\n\nvoid main() {\n  fragmentColor = texture(tex, texCoord) * tint;\n}\n","export default class {\n  constructor(text, x, y, s, color, animations, delay) {\n    this.text = text;\n    this.x = x;\n    this.y = y;\n    this.s = s;\n    this.color = color;\n    this.animations = animations ?? [];\n    this.delay = delay ?? 0;\n\n    this.sprites = [];\n    this.enabled = true;\n\n    this.time = 0;\n    this.begin = null;\n  }\n\n  setColor(color) {\n    for (const sprite of this.sprites) {\n      sprite.setColor(color);\n    }\n  }\n\n  update(timestamp) {\n    let updated = false;\n\n    for (const animation of this.animations) {\n      switch (animation) {\n      case SINE_ANIMATION:\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.y = sprite.baseY + Math.sin(i + timestamp / 200) * 10;\n        }\n        updated = true;\n        break;\n      case SHAKE_ANIMATION:\n        this.time++;\n\n        if (this.time === 7) {\n          this.time = 0;\n          for (let i = 0; i < this.sprites.length; i++) {\n            const sprite = this.sprites[i];\n            sprite.x = sprite.baseX + Math.random() * 5;\n            sprite.y = sprite.baseY + Math.random() * 5;\n          }\n        }\n        updated = true;\n        break;\n      case TYPING_ANIMATION:\n        if (!this.begin) {\n          this.begin = timestamp;\n        }\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.hidden = (timestamp - this.begin - this.delay) / 150 < i;\n        }\n        updated = true;\n        break;\n      }\n    }\n\n    return updated;\n  }\n}\n","import SpriteBatch from './SpriteBatch';\nimport TextSegment from './TextSegment';\n\nexport default class extends SpriteBatch {\n  #game;\n  #segments;\n\n  constructor(game) {\n    super(game, false, 'font');\n\n    this.#game = game;\n    this.#segments = [];\n  }\n\n  write(text, x, y, s, color = ACTIVE_COLOR, animations = null, delay = null) {\n    if (x === CENTER) {\n      x = Math.floor(this.#game.renderer.w / 2 - (Math.max(...text.split('\\n').map(s => s.length)) * s) / 2);\n    }\n\n    if (y === CENTER) {\n      y = Math.floor(this.#game.renderer.h / 2 - (text.split('\\n').length * s) / 2);\n    }\n\n    const segment = new TextSegment(text, x, y, s, color, animations, delay);\n\n    let currX = x;\n    let currY = y;\n\n    for (const c of text) {\n      let type;\n\n      if (c === '\\n') {\n        currY += s;\n        currX = x;\n\n        continue;\n      }\n\n      if (c >= 'A' && c <= 'Z') {\n        type = c.charCodeAt(0) - 'A'.charCodeAt(0);\n      } else if (c >= '0' && c <= '9') {\n        type = 26 + c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if (c === '?') {\n        type = 36;\n      } else if (c === '!') {\n        type = 37;\n      } else if (c === ',') {\n        type = 38;\n      } else if (c === '.') {\n        type = 39;\n      } else if (c === \"'\") {\n        type = 40;\n      }\n\n      if (type != null) {\n        const sprite = this.add(currX, currY, s, type, color);\n        sprite.baseX = currX;\n        sprite.baseY = currY;\n        segment.sprites.push(sprite);\n      }\n\n      currX += s;\n    }\n\n    this.#segments.push(segment);\n    this.changed();\n\n    return segment;\n  }\n\n  clear() {\n    for (const segment of this.#segments) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = [];\n    this.changed();\n  }\n\n  update(timestamp) {\n    for (const segment of this.#segments.filter(segment => !segment.enabled)) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = this.#segments.filter(segment => segment.enabled);\n\n    for (const segment of this.#segments) {\n      if (segment.update(timestamp)) {\n        this.changed();\n      }\n    }\n\n    super.update();\n  }\n}\n","import SpriteBatch from './SpriteBatch';\n\nexport default class extends SpriteBatch {\n  #game;\n\n  constructor(game) {\n    super(game, false, null);\n\n    this.#game = game;\n  }\n\n  emit(x, y, colorful = false, count = 128, t = 1000) {\n    for (let i = 0; i < count; i++) {\n      const particle = this.add(x, y, 5);\n\n      if (colorful) {\n        particle.r = Math.random();\n        particle.g = Math.random();\n        particle.b = Math.random();\n      } else {\n        const color = 0.5 + Math.random() * 0.5;\n        particle.r = color;\n        particle.g = color;\n        particle.b = color;\n      }\n\n      const angle = Math.random() * Math.PI * 2;\n      particle.dx = Math.cos(angle) * Math.random() * 5;\n      particle.dy = Math.sin(angle) * Math.random() * 5;\n      particle.t = t;\n    }\n\n    this.changed();\n  }\n\n  clear() {\n    for (const particle of this.sprites) {\n      particle.enabled = false;\n    }\n\n    this.changed();\n  }\n\n  update(timestamp) {\n    for (const particle of this.sprites) {\n      particle.x += particle.dx;\n      particle.y += particle.dy;\n\n      if (!particle.begin) {\n        particle.begin = timestamp;\n      }\n\n      if (particle.begin + particle.t <= timestamp) {\n        particle.enabled = false;\n      } else {\n        particle.a = 1.0 - (timestamp - particle.begin) / particle.t;\n      }\n    }\n\n    this.changed();\n\n    super.update();\n  }\n}\n","import SpriteBatch from './SpriteBatch';\n\nexport default class extends SpriteBatch {\n  #game;\n  #spacingX;\n  #spacingY;\n  #onclick;\n  #active;\n  #pressed;\n\n  constructor(game, x, y, w, h, s, spacingX, spacingY, onclick, color = PRIMARY_COLOR, type = 0) {\n    super(game, false, 'cells');\n\n    this.#game = game;\n\n    if (x === CENTER) {\n      x = game.renderer.w / 2 - w * (s + (spacingX ?? 0) * (w - 1) / w) / 2;\n    }\n\n    if (y === CENTER) {\n      y = game.renderer.h / 2 - h * (s + (spacingY ?? 0) * (h - 1) / h) / 2;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h\n    this.s = s;\n    this.#spacingX = spacingX ?? 0;\n    this.#spacingY = spacingY ?? 0;\n    this.#onclick = onclick;\n    this.color = color;\n\n    for (let gridY = 0; gridY < h; gridY++) {\n      for (let gridX = 0; gridX < w; gridX++) {\n        const cell = this.add(x + gridX * this.#fullW, y + gridY * this.#fullH, s, type, color);\n        cell.setColor(color);\n        cell.grid = this;\n        cell.gridX = gridX;\n        cell.gridY = gridY;\n      }\n    }\n  }\n\n  update(pressHandled = false) {\n    if (!this.disabled) {\n      if (this.#game.input.moved) {\n        let newActive = this.#cellAtPosition(this.#game.input.x, this.#game.input.y);\n        if (newActive?.inactive) {\n          newActive = null;\n        }\n\n        if (newActive !== this.#active && !this.#pressed) {\n          if (this.#onclick) {\n            if (this.#game.input.mouse) {\n              if (!this.#active?.inactive) {\n                this.#active?.setColor(this.#active?.baseColor || this.color);\n              }\n\n              newActive?.setColor(HIGHLIGHT_COLOR);\n              this.changed();\n            }\n          }\n        }\n\n        this.#active = newActive;\n      }\n\n      if (this.#game.input.press && !pressHandled) {\n        this.#pressed = this.#active;\n\n        if (this.#onclick) {\n          if (this.#game.input.mouse) {\n            this.#pressed?.setColor(ACTIVE_COLOR);\n            this.changed();\n          }\n        }\n      }\n\n      if (this.#game.input.click() && !pressHandled) {\n        if (this.#onclick) {\n          this.#pressed?.setColor(this.#pressed?.baseColor || this.color);\n          if (this.#active && this.#active === this.#pressed) {\n            this.#game.input.clickRead = true;\n            this.#onclick(this.#pressed);\n          }\n          this.changed();\n        }\n\n        this.#pressed = null;\n      }\n    }\n\n    super.update();\n\n    return this.#active != null;\n  }\n\n  cellAt(x, y) {\n    if (x >= 0 && x < this.w && y >= 0 && y < this.h) {\n      return this.sprites[this.w * y + x];\n    }\n  }\n\n  #cellAtPosition(x, y) {\n    const index = this.#indexAtPosition(x, y);\n\n    if (index) {\n      return this.cellAt(index[0], index[1]);\n    }\n  }\n\n  #indexAtPosition(x, y) {\n    const relX = x - this.x;\n    const relY = y - this.y;\n    const indexX = Math.trunc(relX / this.#fullW);\n    const indexY = Math.trunc(relY / this.#fullH);\n\n    if (relX >= 0 && relY >= 0 &&\n        relX - indexX * this.#fullW < this.s &&\n        relY - indexY * this.#fullH < this.s &&\n        indexX >= 0 && indexX < this.w && indexY >= 0 && indexY < this.h) {\n      return [indexX, indexY];\n    }\n  }\n\n  get #fullW() {\n    return this.s + this.#spacingX;\n  }\n\n  get #fullH() {\n    return this.s + this.#spacingY;\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\nimport Select from './Select';\n\nexport default class {\n  #minigameClass;\n  #game;\n  #minigame;\n  #buttons;\n  #spriteBatch;\n  #cat;\n  #leftPaw;\n  #rightPaw;\n  #catNameText;\n  #catTextText;\n  #exitButton;\n  #exit;\n  #catMet;\n  #started;\n  #won;\n  #lost;\n  #lostText;\n  #lostTextInfo;\n  #timer;\n\n  constructor(minigameClass) {\n    this.#minigameClass = minigameClass;\n  }\n\n  init(game) {\n    this.#game = game;\n\n    this.#buttons = new Grid(game, game.renderer.w - 74, 10, 1, 1, 64, 0, 0, (button) => this.#buttonClick(button));\n\n    this.#exitButton = this.#buttons.sprites[0];\n\n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(game.text, 'X', 32, ACTIVE_COLOR);\n\n    this.#spriteBatch = new SpriteBatch(game);\n\n    const [_title, color, _sx, _type, catName, catText, _response] = this.#minigameClass.meta;\n\n    this.#cat = this.#spriteBatch.add(CENTER, 100, 64, 1, color);\n    this.#leftPaw = this.#spriteBatch.add(this.#cat.x - 12, this.#cat.y + 60, 24, 0, color);\n    this.#rightPaw = this.#spriteBatch.add(this.#cat.x + 46, this.#cat.y + 60, 24, 0, color);\n\n    this.#catNameText = game.text.write(catName, CENTER, 10, 24, color, [SINE_ANIMATION]);\n    this.#catTextText = game.text.write(catText, CENTER, this.#cat.y + 100, 32, color, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n  }\n\n  update() {\n    const [title, _color, _sx, _type, _catName, _catText, response] = this.#minigameClass.meta;\n\n    if (this.#exit) {\n      return new Select(this.#game);\n    }\n\n    this.#buttons.update();\n\n    if (!this.#catMet && this.#game.input.click()) {\n      this.#game.input.clickRead = true;\n      this.#cat.setColor(BLACKCAT_COLOR);\n      this.#leftPaw.setColor(BLACKCAT_COLOR);\n      this.#rightPaw.setColor(BLACKCAT_COLOR);\n      this.#spriteBatch.changed();\n      this.#catNameText.enabled = false;\n      this.#catTextText.enabled = false;\n      this.#catNameText = this.#game.text.write('VICKI', CENTER, 10, 24, BLACKCAT_COLOR, [SINE_ANIMATION]);\n      this.#catTextText = this.#game.text.write(response, CENTER, this.#cat.y + 100, 32, BLACKCAT_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n      this.#catMet = true;\n    } else if (!this.#started && this.#game.input.click()) {\n      this.#game.input.clickRead = true;\n      this.#cat.enabled = false;\n      this.#leftPaw.enabled = false;\n      this.#rightPaw.enabled = false;\n      this.#catNameText.enabled = false;\n      this.#catTextText.enabled = false;\n      this.#spriteBatch.changed();\n      this.#setup();\n      this.#started = true;\n    }\n\n    if (this.#started && !this.#won && !this.#lost) {\n      this.#minigame.update();\n    }\n\n    this.#spriteBatch.update();\n\n    if (this.#won && this.#game.input.click()) {\n      this.#timer.disabled = true;\n      this.#exit = true;\n    }\n\n    if (this.#lost && this.#game.input.click()) {\n      this.#setup();\n    }\n  }\n\n  draw() {\n    if (this.#started && !this.#exit) {\n      this.#minigame.draw();\n    }\n\n    this.#spriteBatch.draw();\n    this.#buttons.draw();\n  }\n\n  #setup() {\n    this.#won = false;\n    this.#lost = false;\n\n    (this.#lostText || {}).enabled = false;\n    (this.#lostTextInfo || {}).enabled = false;\n\n    this.#game.text.clear();\n\n    this.#minigame = new this.#minigameClass(this.#game, () => this.#win(), () => this.#lose());\n\n    this.#game.text.write(this.#minigameClass.meta[0], CENTER, 10, 48, INACTIVE_COLOR, [SINE_ANIMATION]);\n\n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(this.#game.text, 'X', 32, ACTIVE_COLOR);\n  }\n\n  #win() {\n    this.#won = true;\n    this.#game.minigamesWon.add(this.#minigameClass);\n\n    const texts = ['CONGRATS!!', 'WELL DONE!!', 'GOOD JOB!!', 'PAWSOME!!', 'AMEOWZING!!'];\n    const text = this.#game.text.write(texts[Math.floor(Math.random() * texts.length)], CENTER, CENTER, 48, HIGHLIGHT_COLOR, [SINE_ANIMATION]);\n    this.#game.text.write('NOW GO HELP THE OTHER CATS!', CENTER, text.y + 75, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 1200);\n\n    this.#timer = this.#game.scheduleTimer(400, () => this.#game.particles.emit(Math.random() * this.#game.renderer.w, Math.random() * this.#game.renderer.h, true, 256, 1000), true);\n  }\n\n  #lose() {\n    this.#lost = true;\n\n    const texts = ['OOPS!!', 'BETTER LUCK NEXT TIME!!', 'OH WELL!!'];\n    this.#lostText = this.#game.text.write(texts[Math.floor(Math.random() * texts.length)], CENTER, CENTER, 48, HIGHLIGHT_COLOR, [SINE_ANIMATION]);\n    this.#lostTextInfo = this.#game.text.write(\"LET'S TRY AGAIN!\", CENTER, this.#lostText.y + 75, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 1200);\n  }\n\n  #buttonClick(button) {\n    if (button === this.#exitButton) {\n      this.#exit = true;\n    }\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #w;\n  #h;\n  #mines;\n  #fontSize;\n  #grid;\n  #buttons;\n  #digButton;\n  #flagButton;\n  #mode;\n  #started;\n\n  static meta = [\n    'MEOWSWEEPER',\n    TABBYCAT_COLOR,\n    73,\n    2,\n    'QUEEN KARA THE 3RD',\n    \"YOU, NEW CAT!!\\nI NEED YOU TO SCRATCH MY BACK\\nIMMEDIATELY BUT ONLY WHERE\\nI LIKE IT!\\n\\n\\nSINCE YOU'RE NEW I WILL TELL\\nYOU HOW MANY DANGER ZONES\\nARE AROUND WHERE YOU'RE\\nSCRATCHING!\",\n    'OOOH, THE QUEEN HERSELF!!\\n\\n\\nI NEED TO MAKE A GOOD\\nFIRST IMPRESSION!'\n  ];\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#w = game.renderer.horizontal ? 20 : 10;\n    this.#h = game.renderer.horizontal ? 10 : 20;\n    this.#mines = 10;\n\n    this.#fontSize = 26;\n\n    const spacing = 4;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / this.#w - (spacing * (this.#w - 1) / this.#w), (game.renderer.h - 110) / this.#h - (spacing * (this.#h - 1) / this.#h)));\n\n    this.#grid = new Grid(game, CENTER, 100, this.#w, this.#h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#buttons = new Grid(game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#digButton = this.#buttons.sprites[0];\n    this.#digButton.write(game.text, 'O', 30, ACTIVE_COLOR);\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(game.text, 'X', 30, ACTIVE_COLOR);\n\n    this.#setMode('dig');\n  }\n\n  update() {\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      this.#setMode('dig');\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      this.#setMode('flag');\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    switch (this.#mode) {\n    case 'dig':\n      if (!this.#started) {\n        this.#start(cell);\n      }\n\n      this.#open(cell.gridX, cell.gridY);\n\n      if (cell.mine) {\n        this.#grid.disabled = true;\n\n        this.#game.scheduleTimer(2000, () => this.#onlose());\n      }\n\n      break;\n    case 'flag':\n      if (cell.flagged) {\n        cell.flagged = false;\n        cell.content.enabled = false;\n        this.#game.text.changed();\n      } else {\n        cell.flagged = true;\n        cell.write(this.#game.text, 'X', this.#fontSize, HIGHLIGHT_COLOR);\n      }\n      break;\n    }\n  }\n\n  #start(cell) {\n    const available = this.#grid.sprites.filter(availableCell => availableCell !== cell && (Math.abs(availableCell.gridX - cell.gridX) > 1 || Math.abs(availableCell.gridY - cell.gridY) > 1));\n\n    for (let i = 0; i < this.#mines; i++) {\n      const index = Math.floor(Math.random() * available.length);\n      const mineCell = available[index];\n      available.splice(index, 1);\n\n      mineCell.mine = true;\n    }\n\n    for (let y = 0; y < this.#grid.h; y++) {\n      for (let x = 0; x < this.#grid.w; x++) {\n        let cell = this.#grid.cellAt(x, y);\n        if (!cell.mine) {\n          cell.mines = 0;\n          for (let dy = -1; dy <= 1; dy++) {\n            for (let dx = -1; dx <= 1; dx++) {\n              if (this.#grid.cellAt(x + dx, y + dy)?.mine) {\n                cell.mines++;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.#started = true;\n  }\n\n  #open(x, y) {\n    this.#game.shake(200);\n    const cell = this.#grid.cellAt(x, y);\n\n    if (cell?.flagged) {\n      cell.flagged = false;\n      cell.content.enabled = false;\n    }\n\n    if (cell?.enabled && !cell?.opened) {\n      cell.opened = true;\n\n      cell.activate(false);\n\n      this.#game.particles.emit(cell.x + cell.grid.s / 2, cell.y + cell.grid.s / 2);\n\n      if (cell.mines === 0) {\n        cell.hidden = true;\n\n        this.#game.scheduleTimer(100, () => this.#open(x, y - 1));\n        this.#game.scheduleTimer(100, () => this.#open(x, y + 1));\n        this.#game.scheduleTimer(100, () => this.#open(x - 1, y));\n        this.#game.scheduleTimer(100, () => this.#open(x + 1, y));\n      } else {\n        if (cell.mine) {\n          for (const mineCell of this.#grid.sprites.filter(cell => cell.mine)) {\n            mineCell.activate(false);\n            mineCell.write(this.#game.text, 'X', this.#fontSize, INACTIVE10_COLOR);\n          }\n        } else {\n          cell.write(this.#game.text, cell.mines, this.#fontSize, INACTIVE1_COLOR + (cell.mines - 1));\n        }\n      }\n\n      this.#grid.changed();\n    }\n\n    if (this.#grid.sprites.filter(cell => !cell.opened).every(cell => cell.mine)) {\n      this.#onwin();\n    }\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode('flag');\n    } else if (button === this.#digButton) {\n      this.#setMode('dig');\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#digButton.activate(this.#mode !== 'dig');\n    this.#flagButton.activate(this.#mode !== 'flag');\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #grid;\n  #spriteBatch;\n  #timer;\n  #over;\n\n  static meta = [\n    'PAW PAW TOE',\n    ORANGECAT_COLOR,\n    73,\n    2,\n    'ORANGE CAT, THE USELESS BOYFRIEND',\n    \"BET YOU CAN'T BEAT ME\\nIN PAW PAW TOE!\\n\\n\\nI'M THE SMARTEST\\nORANGE CAT EVER!!!\",\n    \"WELL, THAT'S\\nNOT SAYING MUCH...\\n\\n\\nLET'S SEE!\"\n  ];\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#grid = new Grid(game, CENTER, CENTER, 3, 3, 96, 20, 20, (cell) => this.#click(cell));\n    this.#spriteBatch = new SpriteBatch(game);\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (!cell.symbol) {\n      this.#mark(cell, 'X');\n\n      this.#grid.disabled = true;\n\n      this.#timer = this.#game.scheduleTimer(1000, () => {\n        if (!this.#over) {\n          const available = this.#grid.sprites.filter(sprite => !sprite.symbol);\n\n          if (available.length > 0) {\n            this.#mark(available[Math.floor(Math.random() * available.length)], 'O');\n\n            this.#grid.disabled = false;\n            this.#grid.changed();\n          }\n        }\n      });\n    }\n  }\n\n  #mark(cell, symbol) {\n    if (!this.#over) {\n      this.#game.shake(200);\n\n      cell.symbol = symbol;\n\n      cell.activate(false);\n\n      cell.draw(this.#spriteBatch, 64, 0, symbol === 'X' ? BLACKCAT_COLOR : ORANGECAT_COLOR);\n\n      this.#checkGrid();\n    }\n  }\n\n  #checkGrid() {\n    for (let y = 0; y < 3; y++) {\n      const symbolCounts = new Map();\n\n      for (let x = 0; x < 3; x++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    for (let x = 0; x < 3; x++) {\n      const symbolCounts = new Map();\n\n      for (let y = 0; y < 3; y++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(2, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(2, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(0, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(0, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n  }\n\n  #win(symbol) {\n    this.#over = true;\n    this.#grid.disabled = true;\n    (this.#timer || {}).disabled = true;\n\n    if (symbol === 'X') {\n      this.#onwin();\n    } else if (symbol === 'O') {\n      this.#grid.disabled = true;\n      this.#game.scheduleTimer(2000, () => this.#onlose());\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #spriteBatch;\n  #grids;\n  #cellSize;\n  #buttons;\n  #digit;\n\n  static meta = [\n    'SUDOCAT',\n    BLACKCAT_COLOR,\n    73,\n    4,\n    'KUMBA',\n    \"I NEED ALL MY TREATS AND\\nTOYS NEATLY ORGANISED!!\\n\\n\\nTHERE SHOULD BE ONLY ONE\\nTYPE IN EACH ROW, EACH\\nCOLUMN AND IN EACH BOX!!\",\n    'KITTY MUST HAVE OCD...'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#spriteBatch = new SpriteBatch(game, true);\n\n    this.#grids = [];\n\n    const gridSpacing = 16;\n\n    const gridSize = Math.floor(Math.min((game.renderer.w - 20) / 3 - (gridSpacing * (3 - 1) / 3), (game.renderer.h - 200) / 3 - (gridSpacing * (3 - 1) / 3)));\n\n    const spacing = 5;\n\n    this.#cellSize = Math.floor(Math.min((gridSize - 0) / 3 - (spacing * (3 - 1) / 3), (gridSize - 0) / 3 - (spacing * (3 - 1) / 3)));\n\n    const startX = game.renderer.w / 2 - 3 * (gridSize + gridSpacing * (3 - 1) / 3) / 2;\n\n    for (let y = 0; y < 3; y++) {\n      for (let x = 0; x < 3; x++) {\n        const grid = new Grid(game, startX + x * (gridSize + gridSpacing), 100 + y * (gridSize + gridSpacing), 3, 3, this.#cellSize, spacing, spacing, (cell) => this.#click(cell));\n        this.#grids.push(grid);\n      }\n    }\n\n    this.#buttons = new Grid(game, CENTER, game.renderer.h - 74, 10, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    for (let digit = 1; digit <= 10; digit++) {\n      const button = this.#buttons.sprites[digit - 1];\n      button.draw(this.#spriteBatch, 64 * 2 / 3, digit + 5);\n      button.digit = digit <= 9 ? digit : null;\n    }\n\n    this.#setGrid();\n    this.#selectDigit(1);\n  }\n\n  update() {\n    for (let digit = 1; digit <= 9; digit++) {\n      if (this.#game.input.keyPresses[`Digit${digit}`]) {\n        this.#selectDigit(digit);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      if (this.#digit > 1) {\n        this.#selectDigit(this.#digit - 1);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      if (this.#digit < 9) {\n        this.#selectDigit(this.#digit + 1);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyX'] || this.#game.input.keyPresses['Digit0']) {\n      this.#selectDigit(null);\n    }\n\n    this.#spriteBatch.update();\n\n    for (const grid of this.#grids) {\n      grid.update();\n    }\n\n    this.#buttons.update();\n  }\n\n  draw() {\n    for (const grid of this.#grids) {\n      grid.draw();\n    }\n\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #gridAt(x, y) {\n    return this.#grids[Math.floor(y / 3) * 3 + Math.floor(x / 3)];\n  }\n\n  #cellAt(x, y) {\n    return this.#gridAt(x, y).cellAt(x % 3, y % 3);\n  }\n\n  #setGrid() {\n    const starts = [\n      [\n        6, 8, 0, 1, 0, 0, 0, 9, 0,\n        0, 3, 4, 5, 0, 8, 0, 2, 0,\n        2, 1, 0, 0, 6, 0, 3, 0, 0,\n        5, 0, 0, 4, 0, 7, 0, 0, 9,\n        3, 4, 2, 9, 0, 0, 0, 0, 6,\n        0, 0, 7, 0, 8, 0, 5, 0, 0,\n        9, 2, 0, 8, 0, 0, 0, 5, 3,\n        0, 0, 3, 2, 0, 0, 9, 1, 8,\n        0, 0, 0, 3, 0, 0, 0, 6, 7,\n      ]\n    ];\n\n    const start = starts[Math.floor(Math.random() * starts.length)];\n\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const digit = start[y * 9 + x];\n        if (digit !== 0) {\n          const cell = this.#cellAt(x, y);\n          cell.activate(false);\n          cell.digit = digit;\n          cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, digit + 5);\n        }\n      }\n    }\n  }\n\n  #click(cell) {\n    cell.digit = this.#digit;\n    (cell.content || {}).enabled = false;\n\n    if (this.#digit) {\n      cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, this.#digit + 5);\n    }\n\n    if (this.#checkCells()) {\n      this.#game.shake(200);\n      this.#onwin();\n    }\n\n    this.#game.text.changed();\n    this.#spriteBatch.changed();\n  }\n\n  #checkCells() {\n    let valid = true;\n\n    this.#resetCells();\n\n    for (let i = 0; i < 9; i++) {\n      valid &= this.#checkRow(i);\n      valid &= this.#checkColumn(i);\n      valid &= this.#checkGrid(i);\n    }\n\n    return valid;\n  }\n\n  #resetCells() {\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const cell = this.#cellAt(x, y);\n        if (!cell.inactive) {\n          cell.setBaseColor(PRIMARY_COLOR);\n        }\n      }\n    }\n\n    for (let i = 0; i < 9; i++) {\n      this.#grids[i].changed();\n    }\n  }\n\n  #checkRow(x) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let y = 0; y < 9; y++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let y = 0; y < 9; y++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor(ACTIVE_COLOR);\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkColumn(y) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let x = 0; x < 9; x++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let x = 0; x < 9; x++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor(ACTIVE_COLOR);\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkGrid(index) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    const grid = this.#grids[index];\n\n    for (let i = 0; i < 9; i++) {\n      const cell = grid.sprites[i];\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let i = 0; i < 9; i++) {\n          const cell = grid.sprites[i];\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor(ACTIVE_COLOR);\n            grid.changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#selectDigit(button.digit);\n    }\n  }\n\n  #selectDigit(digit) {\n    this.#digit = digit;\n\n    for (const button of this.#buttons.sprites) {\n      button.activate(true);\n    }\n\n    this.#buttons.sprites[digit != null ? digit - 1 : 9].activate(false);\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #grid;\n  #spriteBatch;\n  #opened;\n  #showingA;\n  #showingB;\n  #timer;\n\n  static meta = [\n    'MEOWMORY',\n    SILVERCAT_COLOR,\n    8,\n    3,\n    'MOLLY',\n    \"THEY SAY I HAVE THE\\nMEMORY OF A GOLDFISH...\\n\\n\\nCAN YOU SHOW ME HOW\\nTO REMEMBER THINGS??\",\n    'SOMEONE SAID FISHIE?!\\n\\n\\nYUM!!!'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    const w = game.renderer.horizontal ? 6 : 5;\n    const h = game.renderer.horizontal ? 5 : 6;\n\n    const spacing = 16;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / w - (spacing * (w - 1) / w), (game.renderer.h - 110) / h - (spacing * (h - 1) / h)));\n\n    this.#grid = new Grid(game, CENTER, 100, w, h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#spriteBatch = new SpriteBatch(game, true);\n\n    const available = this.#grid.sprites.slice();\n\n    for (let i = 0; i < (w * h) / 2; i++) {\n      const indexA = Math.floor(Math.random() * available.length);\n      const cellA = available[indexA];\n      available.splice(indexA, 1);\n\n      const indexB = Math.floor(Math.random() * available.length);\n      const cellB = available[indexB];\n      available.splice(indexB, 1);\n\n      cellA.secret = i;\n      cellB.secret = i;\n    }\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (!cell.open) {\n      if (this.#showingA && this.#showingB) {\n        this.#cancelShowing();\n      }\n\n      cell.open = true;\n      cell.draw(this.#spriteBatch, this.#grid.s * 2 / 3, cell.secret, cell.secret < 5 ? TABBYCAT_COLOR : null);\n      cell.setBaseColor(ACTIVE_COLOR);\n\n      if (this.#opened) {\n        if (cell.secret === this.#opened.secret) {\n          this.#game.shake(200);\n\n          cell.found = true;\n          cell.activate(false);\n\n          this.#opened.found = true;\n          this.#opened.activate(false);\n\n          if (this.#grid.sprites.every(cell => cell.found)) {\n            this.#onwin();\n          }\n        } else {\n          this.#showingA = this.#opened;\n          this.#showingB = cell;\n\n          this.#timer = this.#game.scheduleTimer(1000, () => this.#cancelShowing());\n        }\n\n        this.#opened = false;\n      } else {\n        this.#opened = cell;\n      }\n    }\n  }\n\n  #cancelShowing() {\n    (this.#timer || {}).disabled = true;\n\n    this.#showingA.open = false;\n    this.#showingA.content.enabled = false;\n    this.#showingA.setBaseColor(PRIMARY_COLOR);\n\n    this.#showingB.open = false;\n    this.#showingB.content.enabled = false;\n    this.#showingB.setBaseColor(PRIMARY_COLOR);\n\n    this.#grid.changed();\n    this.#game.text.changed();\n    this.#spriteBatch.changed();\n\n    this.#showingA = null;\n    this.#showingB = null;\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #grids;\n  #selected;\n\n  static meta = [\n    'MEOWJONG',\n    SILVERCAT_COLOR,\n    73,\n    4,\n    'PABLO',\n    \"HOLA!! SOY PABLO!\\n\\n\\nLET'S PLAY MEOWJONG!\\nJUST MATCH THE SAME TILES\\nBUT ONLY WHEN THEY'RE\\nFREE TO MOVE LEFT OR RIGHT.\",\n    'OH, SI SENOR?!'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    const w = game.renderer.horizontal ? 12 : 8;\n    const h = game.renderer.horizontal ? 8 : 12;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / w, (game.renderer.h - 110) / h));\n    const offset = Math.ceil(s / 16);\n\n    this.#grids = [];\n\n    const baseGrid = new Grid(game, CENTER, 100, w, h, s, 0, 0, (cell) => this.#click(cell), INACTIVE3_COLOR);\n    baseGrid.spriteBatch = new SpriteBatch(game, true);\n\n    for (let [x, y] of [[0, 1], [1, 1], [0, 2], [0, 5], [0, 6], [1, 6], [10, 1], [11, 1], [11, 2], [11, 5], [10, 6], [11, 6]]) {\n      if (!game.renderer.horizontal) {\n        let i = x;\n        x = y;\n        y = i;\n      }\n\n      baseGrid.cellAt(x, y).activate(false);\n      baseGrid.cellAt(x, y).hidden = true;\n    }\n\n    this.#grids.push(baseGrid);\n\n    const gridA = new Grid(game, baseGrid.x + ((game.renderer.horizontal ? 3 : 1) * s - offset), baseGrid.y + ((game.renderer.horizontal ? 1 : 3) * s - offset), 6, 6, s, 0, 0, (cell) => this.#click(cell), INACTIVE4_COLOR);\n    gridA.spriteBatch = new SpriteBatch(game, true);\n\n    const gridB = new Grid(game, gridA.x + (s - offset), gridA.y + (s - offset), 4, 4, s, 0, 0, (cell) => this.#click(cell), INACTIVE5_COLOR);\n    gridB.spriteBatch = new SpriteBatch(game, true);\n\n    const gridC = new Grid(game, gridB.x + (s - offset), gridB.y + (s - offset), 2, 2, s, 0, 0, (cell) => this.#click(cell), INACTIVE6_COLOR);\n    gridC.spriteBatch = new SpriteBatch(game, true);\n\n    this.#grids.push(gridA);\n    this.#grids.push(gridB);\n    this.#grids.push(gridC);\n\n    const available = [];\n\n    for (let type = 0; type < 15; type++) {\n      for (let count = 0; count < 4; count++) {\n        if (type < 5) {\n          for (let color = BLACKCAT_COLOR; color <= SILVERCAT_COLOR; color++) {\n            available.push([type, color]);\n          }\n        } else {\n          available.push([type, null]);\n        }\n      }\n    }\n\n    for (let grid of this.#grids) {\n      for (let cell of grid.sprites) {\n        if (!cell.inactive) {\n          const index = Math.floor(Math.random() * available.length);\n          const [type, color] = available[index];\n          available.splice(index, 1);\n\n          cell.symbol = `${type}_${color}`;\n          cell.draw(grid.spriteBatch, s * 2 / 3, type, color);\n        }\n      }\n    }\n  }\n\n  update() {\n    let pressHandled = false;\n    for (let i = this.#grids.length - 1; i >= 0; i--) {\n      pressHandled = this.#grids[i].update(pressHandled);\n      this.#grids[i].spriteBatch.update();\n    }\n  }\n\n  draw() {\n    for (const grid of this.#grids) {\n      grid.draw();\n      grid.spriteBatch.draw();\n    }\n  }\n\n  #click(cell) {\n    const leftCell = cell.grid.cellAt(cell.gridX - 1, cell.gridY);\n    const rightCell = cell.grid.cellAt(cell.gridX + 1, cell.gridY);\n    const freeCell =!leftCell || leftCell.inactive || !rightCell || rightCell.inactive\n\n    if (!this.#selected && freeCell) {\n      this.#selected = cell;\n      cell.setBaseColor(ACTIVE_COLOR);\n    } else if (cell === this.#selected) {\n      cell.setBaseColor(cell.grid.color);\n      this.#selected = null;\n    } else if (this.#selected && freeCell && this.#selected.symbol === cell.symbol) {\n      this.#game.particles.emit(this.#selected.x + this.#selected.grid.s / 2, this.#selected.y + this.#selected.grid.s / 2);\n      this.#game.particles.emit(cell.x + cell.grid.s / 2, cell.y + cell.grid.s / 2);\n      this.#game.shake(200);\n\n      this.#selected.activate(false);\n      this.#selected.hidden = true;\n      this.#selected.content.enabled = false;\n\n      cell.activate(false);\n      cell.hidden = true;\n      cell.content.enabled = false;\n\n      this.#selected = null;\n      this.#checkGrids();\n    }\n\n    for (const grid of this.#grids) {\n      grid.changed();\n      grid.spriteBatch.changed();\n    }\n  }\n\n  #checkGrids() {\n    for (let grid of this.#grids) {\n      for (let cell of grid.sprites) {\n        if (!cell.inactive) {\n          return;\n        }\n      }\n    }\n\n    this.#onwin();\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #rows;\n  #columns;\n  #maxRows;\n  #maxColumns;\n  #w;\n  #h;\n  #grid;\n  #buttons;\n  #markButton;\n  #flagButton;\n  #mode;\n\n  static meta = [\n    'MEOWSTERPIECE',\n    WHITECAT_COLOR,\n    8,\n    3,\n    'CHA CHA',\n    'TODAY I DECIDED TO BE\\nAN ARTIST!!\\nHELP ME WITH THIS\\nPAINT BY NUMBER!\\n\\n\\nTHE CLUES WILL TELL YOU\\nHOW MANY BLOCKS SHOULD\\nBE PAINTED IN EACH ROW\\nAND IN EACH COLUMN!',\n    'SURE SURE, ARTIST TODAY,\\nSOMETHING ELSE TOMORROW!\\n\\n\\nTYPICAL KITTY...'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#rows = [[0], [1, 1], [2, 2], [5], [2, 1, 2, 1], [5, 2], [3, 1], [6, 2], [1, 5, 1], [8], [2, 4]];\n    this.#columns = [[1, 2], [4, 1, 1], [3, 6], [7], [3, 6], [4, 4], [1, 3], [2], [3, 1], [2, 3]];\n\n    this.#maxRows = Math.max(...this.#rows.map(row => row.length));\n    this.#maxColumns = Math.max(...this.#columns.map(column => column.length));\n\n    this.#w = this.#columns.length + this.#maxRows;\n    this.#h = this.#rows.length + this.#maxColumns;\n\n    const spacing = 2;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / this.#w - (spacing * (this.#w - 1) / this.#w), (game.renderer.h - 110) / this.#h - (spacing * (this.#h - 1) / this.#h)));\n\n    this.#grid = new Grid(game, CENTER, 100, this.#w, this.#h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    for (let x = 0; x < this.#w; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (x < this.#maxRows || y < this.#maxColumns - this.#columns[x - this.#maxRows].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(game.text, this.#columns[x - this.#maxRows][y - (this.#maxColumns - this.#columns[x - this.#maxRows].length)], s * 2 / 3, HIGHLIGHT_COLOR);\n          cell.activate(false);\n        }\n      }\n    }\n\n    for (let y = 0; y < this.#w; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (y < this.#maxColumns || x < this.#maxRows - this.#rows[y - this.#maxColumns].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(game.text, this.#rows[y - this.#maxColumns][x - (this.#maxRows - this.#rows[y - this.#maxColumns].length)], this.#grid.s * 2 / 3, HIGHLIGHT_COLOR);\n          cell.activate(false);\n        }\n      }\n    }\n\n    this.#buttons = new Grid(game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#markButton = this.#buttons.sprites[0];\n    this.#markButton.write(game.text, 'O', 30, ACTIVE_COLOR);\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(game.text, 'X', 30, ACTIVE_COLOR);\n\n    this.#setMode('mark');\n\n    this.#grid.changed();\n  }\n\n  update() {\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      this.#setMode('mark');\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      this.#setMode('flag');\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    (cell.content || {}).enabled = false;\n\n    switch (this.#mode) {\n    case 'mark':\n      if (cell.state !== 'marked') {\n        cell.state = 'marked';\n        cell.setBaseColor(ACTIVE_COLOR);\n      } else {\n        cell.state = null;\n        cell.setBaseColor(PRIMARY_COLOR);\n      }\n      break;\n\n    case 'flag':\n      cell.setBaseColor(PRIMARY_COLOR);\n      if (cell.state !== 'flagged') {\n        cell.state = 'flagged';\n        cell.write(this.#game.text, 'X', this.#grid.s * 2 / 3, HIGHLIGHT_COLOR);\n      } else {\n        cell.state = null;\n      }\n      break;\n    }\n\n    this.#game.text.changed();\n\n    this.#checkGrid();\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode('flag');\n    } else if (button === this.#markButton) {\n      this.#setMode('mark');\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#markButton.activate(this.#mode !== 'mark');\n    this.#flagButton.activate(this.#mode !== 'flag');\n\n    this.#buttons.changed();\n  }\n\n  #checkGrid() {\n    let gridCorrect = 0;\n\n    for (let x = this.#maxRows; x < this.#w; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        this.#grid.cellAt(x, y).setBaseColor(INACTIVE_COLOR);\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let y = this.#maxColumns; y < this.#h; y++) {\n        if (this.#grid.cellAt(x, y).state === 'marked') {\n          current++;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== 'marked' || y === this.#h - 1) {\n          if ((current > 0 || y === this.#h - 1) && index < this.#columns[x - this.#maxRows].length) {\n            if (current > this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor(HIGHLIGHT_COLOR);\n            } else if (current === this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor(INACTIVE1_COLOR);\n              correct++;\n            }\n\n            index++;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#columns[x - this.#maxRows].length) {\n        gridCorrect++;\n      }\n    }\n\n    for (let y = this.#maxColumns; y < this.#h; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        this.#grid.cellAt(x, y).setBaseColor(INACTIVE_COLOR);\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let x = this.#maxRows; x < this.#w; x++) {\n        if (this.#grid.cellAt(x, y).state === 'marked') {\n          current++;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== 'marked' || x === this.#w - 1) {\n          if ((current > 0 || x === this.#w - 1) && index < this.#rows[y - this.#maxColumns].length) {\n            if (current > this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor(HIGHLIGHT_COLOR);\n            } else if (current === this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor(INACTIVE1_COLOR);\n              correct++;\n            }\n\n            index++;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#rows[y - this.#maxColumns].length) {\n        gridCorrect++;\n      }\n    }\n\n    if (gridCorrect === (this.#w - this.#maxRows) + (this.#h - this.#maxColumns)) {\n      this.#game.shake(200);\n      this.#onwin();\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nimport Minigame from './Minigame';\nimport Meowsweeper from '../minigames/Meowsweeper';\nimport PawPawToe from '../minigames/PawPawToe';\nimport Sudocat from '../minigames/Sudocat';\nimport Meowmory from '../minigames/Meowmory';\nimport Meowjong from '../minigames/Meowjong';\nimport Meowsterpiece from '../minigames/Meowsterpiece';\n\nimport Matrix3 from '../Matrix3';\n\nexport default class {\n  #game;\n  #firstStart;\n  #grid;\n  #buttons;\n  #spriteBatch;\n  #minigameState;\n  #camY;\n  #startBlackCat;\n  #blackCat;\n  #blackCatArrived;\n  #titleShown;\n  #introOver;\n  #introText;\n\n  init(game) {\n    this.#game = game;\n    this.#firstStart = game.firstStart;\n    game.firstStart = false;\n\n    const won = game.minigamesWon.size === 6;\n\n    this.#grid = new Grid(game, CENTER, won ? 200 : 100, 6, 15, 128, 0, 0, null, '', 2);\n    this.#grid.disabled = true;\n\n    this.#buttons = new Grid(game, CENTER, won ? 232 : 132, 3, 7, 128, 64, 64, (button) => this.#buttonClick(button), '', 1);\n\n    if (this.#firstStart) {\n      this.#buttons.disabled = true;\n      this.#camY = -game.renderer.h;\n      this.#introText = game.text.write('THIS IS A TRUE STORY.\\n\\n\\nTHE CATS DEPICTED HERE\\nALL LIVE IN DUBLIN.', CENTER, CENTER, 32, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n      game.scheduleTimer(9000, () => {\n        this.#startBlackCat = true;\n        this.#introText.enabled = false;\n        game.text.changed();\n      });\n    } else if (!won) {\n      game.text.write('HELP THE OTHER CATS\\nIN THE BUILDING!!', CENTER, 10, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n    } else {\n      game.text.write('CONGRATULATIONS!!', CENTER, 10, 48, HIGHLIGHT_COLOR, [SINE_ANIMATION]);\n      game.text.write(\"YOU'VE HELPED ALL THE CATS\\nAND YOU'VE BEEN ACCEPTED BY\", CENTER, 75, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n      game.text.write('QUEEN KARA', CENTER, 150, 32, TABBYCAT_COLOR, [TYPING_ANIMATION, SINE_ANIMATION], 7000);\n      game.text.write('THANKS FOR PLAYING!!', CENTER, 200, 32, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 10000);\n\n      game.scheduleTimer(400, () => game.particles.emit(Math.random() * game.renderer.w, Math.random() * game.renderer.h, true, 256, 1000), true);\n    }\n\n    this.#spriteBatch = new SpriteBatch(game);\n\n    const minigameClasses = [PawPawToe, Meowmory, Meowjong, Sudocat, Meowsterpiece, Meowsweeper];\n\n    for (let i = 0; i < 21; i++) {\n      if (minigameClasses[i] && (i == 0 || !this.#firstStart)) {\n        let [_, color, sx, type, ..._rest] = minigameClasses[i].meta;\n        this.#buttons.sprites[i].minigameClass = minigameClasses[i];\n        let sy = 73;\n        if (game.minigamesWon.has(minigameClasses[i])) {\n          this.#buttons.sprites[i].activate(false);\n          sx = 39;\n          sy = 39;\n          type = 1;\n        }\n        this.#spriteBatch.add(this.#buttons.sprites[i].x + sx, this.#buttons.sprites[i].y + sy, 50, type, color);\n      } else {\n        this.#buttons.sprites[i].activate(false);\n      }\n    }\n\n    this.#blackCat = this.#spriteBatch.add(CENTER, game.renderer.h, 900, 1, VOID_COLOR);\n\n    for (let i = 0; i < this.#buttons.sprites.length; i++) {\n      const button = this.#buttons.sprites[i];\n      if (game.minigamesWon.has(button.minigameClass)) {\n        button.activate(false);\n      }\n    }\n  }\n\n  update() {\n    if (this.#firstStart) {\n      if (this.#camY < 0) {\n        this.#camY += 3;\n        if (this.#camY >= 0) {\n          this.#camY = 0;\n          this.#game.shake(200);\n        }\n        this.#game.renderer.projection = Matrix3.ortho(0, this.#game.renderer.w, this.#game.renderer.h + this.#camY, this.#camY);\n      } else if (this.#startBlackCat && !this.#blackCatArrived) {\n        this.#blackCat.y -= 3;\n        if (this.#blackCat.y <= this.#game.renderer.h / 2 - this.#blackCat.s / 2) {\n          this.#blackCatArrived = true;\n          this.#blackCat.y = this.#game.renderer.h / 2 - this.#blackCat.s / 2;\n          const title = this.#game.text.write('  A VOIDING\\nYOUR PROBLEMS', CENTER, CENTER, 48, null, [SINE_ANIMATION]);\n          this.#game.text.write('  A GAME BY\\nATTILA HORVATH', CENTER, title.y + 180, 36, WHITECAT_COLOR, [SHAKE_ANIMATION]);\n          this.#game.text.write('TAP TO BEGIN', CENTER, title.y + 280, 36, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 1200);\n          this.#game.shake(500);\n        }\n        this.#blackCat.x = this.#game.renderer.w / 2 - this.#blackCat.s / 2;\n        this.#spriteBatch.changed();\n      } else if (!this.#titleShown) {\n        if (this.#game.input.click()) {\n          this.#game.input.clickRead = true;\n          this.#game.text.clear();\n          const firstLine = this.#game.text.write('SO, I HEARD THIS\\nIS THE DOMAIN OF', CENTER,  CENTER, 28, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n          this.#game.text.write('QUEEN KARA', CENTER, firstLine.y + 60, 32, TABBYCAT_COLOR, [TYPING_ANIMATION, SINE_ANIMATION], 4000);\n          this.#game.text.write(\"I HOPE SHE'LL ACCEPT ME\\nIF I HELP THE OTHER CATS...\", CENTER, firstLine.y + 120, 28, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 6000);\n          this.#titleShown = true;\n        }\n      } else if (!this.#introOver) {\n        if (this.#game.input.click()) {\n          this.#game.input.clickRead = true;\n          this.#blackCat.hidden = true;\n          this.#spriteBatch.changed();\n          this.#game.text.clear();\n          this.#introOver = true;\n          this.#game.text.write(\"LET'S START WITH THIS\\nGENIUS ORANGE CAT HERE!\", CENTER, 10, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n        }\n      } else {\n        this.#buttons.disabled = false;\n      }\n    }\n\n    this.#grid.update();\n    this.#spriteBatch.update();\n\n    if (this.#minigameState) {\n      return this.#minigameState;\n    } else {\n      this.#buttons.update();\n    }\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#minigameState = new Minigame(button.minigameClass);\n    }\n  }\n}\n","import Game from \"./Game\";\n\nconst game = new Game();\n\nfunction step(timestamp) {\n  requestAnimationFrame(step);\n  game.step(timestamp);\n}\n\nrequestAnimationFrame(step);\n","import Renderer from './Renderer';\nimport Input from './Input';\n\nimport Text from './Text';\nimport Particles from './Particles';\nimport SpriteBatch from './SpriteBatch';\nimport Select from './states/Select';\nimport Minigame from './states/Minigame';\nimport Matrix3 from './Matrix3';\nimport PawPawToe from './minigames/PawPawToe';\nimport Meowmory from './minigames/Meowmory';\nimport Meowjong from './minigames/Meowjong';\nimport Meowsweeper from './minigames/Meowsweeper';\n\nexport default class {\n  #started;\n  #timers;\n  #backgroundBatch;\n  #spriteBatch;\n  #cursor;\n  #state;\n  #nextState;\n  #shakeScreen;\n\n  constructor() {\n    this.renderer = new Renderer(() => {\n      if (!this.#started) {\n        for (let i = 0; i < 128; i++) {\n          const type = Math.floor(Math.random() * 15);\n          let color = null;\n          if (type < 5) {\n            color = BLACKCAT_COLOR + Math.floor(Math.random() * 5);\n          }\n          const sprite = this.#backgroundBatch.add(Math.random() * this.renderer.w, Math.random() * this.renderer.h, 16 + Math.random() * 100, type, color);\n          sprite.a = 0.33;\n          sprite.dx = -0.5 + Math.random();\n          sprite.dy = -0.5 + Math.random();\n          sprite.ds = -0.1 + Math.random() * 0.2;\n        }\n\n        this.#state = new Select();\n        // this.#state = new Minigame(Meowjong);\n        this.#state.init(this);\n        this.#started = true;\n      }\n    });\n\n    this.input = new Input(this);\n    this.#timers = [];\n\n    this.#backgroundBatch = new SpriteBatch(this, true);\n\n    this.text = new Text(this);\n    this.particles = new Particles(this);\n    this.#spriteBatch = new SpriteBatch(this);\n    this.#cursor = this.#spriteBatch.add(0, 0, 26, 0, BLACKCAT_COLOR);\n    this.#cursor.hidden = true;\n\n    this.minigamesWon = new Set();\n\n    this.firstStart = true;\n  }\n\n  step(timestamp) {\n    this.timestamp = timestamp;\n    this.#update(timestamp);\n    this.#draw();\n\n    if (this.#nextState) {\n      this.text.clear();\n      this.particles.clear();\n\n      this.#state = this.#nextState;\n      this.#state.init(this);\n      this.#nextState = null;\n    }\n  }\n\n  scheduleTimer(delay, onexpire, repeat) {\n    const timer = { start: this.timestamp ?? 0, delay: delay, onexpire: onexpire, repeat: repeat };\n    this.#timers.push(timer);\n    return timer;\n  }\n\n  shake(duration) {\n    navigator.vibrate(duration);\n    this.#shakeScreen = true;\n    this.scheduleTimer(duration, () => this.#shakeScreen = false);\n  }\n\n  #update(timestamp) {\n    if (this.#shakeScreen) {\n      this.renderer.view[6] = Math.random() * 7;\n      this.renderer.view[7] = Math.random() * 7;\n    } else {\n      this.renderer.view[6] = 0;\n      this.renderer.view[7] = 0;\n    }\n\n    this.input.update();\n\n    if (this.input.mouse && this.#cursor.hidden) {\n      this.#cursor.hidden = false;\n      this.#spriteBatch.changed();\n    }\n\n    if (this.input.moved) {\n      this.#cursor.x = this.input.x - 6;\n      this.#cursor.y = this.input.y - 6;\n\n      this.#spriteBatch.changed();\n    }\n\n    for (const sprite of this.#backgroundBatch.sprites) {\n      sprite.x += sprite.dx;\n      sprite.y += sprite.dy;\n      sprite.s += sprite.ds;\n\n      if (sprite.x < 0) {\n        sprite.dx = -sprite.dx;\n        sprite.x = 0;\n      }\n\n      if (sprite.y < 0) {\n        sprite.dy = -sprite.dy;\n        sprite.y = 0;\n      }\n\n      if (sprite.x > this.renderer.w) {\n        sprite.dx = -sprite.dx;\n        sprite.x = this.renderer.w;\n      }\n\n      if (sprite.y > this.renderer.h) {\n        sprite.dy = -sprite.dy;\n        sprite.y = this.renderer.h;\n      }\n\n      if (sprite.s < 16) {\n        sprite.ds = -sprite.ds;\n        sprite.s = 16;\n      }\n\n      if (sprite.s > 116) {\n        sprite.ds = -sprite.ds;\n        sprite.s = 116;\n      }\n    }\n\n    this.#backgroundBatch.changed();\n    this.#backgroundBatch.update();\n\n    this.#updateTimers(timestamp);\n\n    if (this.#state) {\n      this.#nextState = this.#state.update();\n    }\n\n    this.text.update(timestamp);\n    this.particles.update(timestamp);\n    this.#spriteBatch.update();\n  }\n\n  #updateTimers(timestamp) {\n    for (const timer of this.#timers) {\n      if (timestamp >= timer.start + timer.delay && !timer.disabled) {\n        if (timer.repeat) {\n          timer.start = timestamp;\n        } else {\n          timer.expired = true;\n        }\n\n        if (timer.onexpire) {\n          timer.onexpire();\n        }\n      }\n    }\n\n    if (this.#timers.some(timer => timer.expired || timer.disabled)) {\n      this.#timers = this.#timers.filter(timer => !timer.expired && !timer.disabled);\n    }\n  }\n\n  #draw() {\n    this.renderer.clear();\n\n    const currProjection = this.renderer.projection;\n\n    this.renderer.projection = Matrix3.ortho(0, this.renderer.w, this.renderer.h, 0);\n    this.#backgroundBatch.draw();\n    this.renderer.projection = currProjection;\n\n    if (this.#state) {\n      this.#state.draw();\n    }\n\n    this.renderer.projection = Matrix3.ortho(0, this.renderer.w, this.renderer.h, 0);\n    this.text.draw();\n    this.#spriteBatch.draw();\n    this.renderer.projection = currProjection;\n\n    this.particles.draw();\n  }\n}\n"],"names":["Matrix3","Float32Array","identity","ortho","left","right","bottom","top","Shader","program","viewUniformLocation","projectionUniformLocation","texUniformLocation","imageSizeUniformLocation","constructor","gl","vertexShaderSource","fragmentShaderSource","vertexShader","this","compileShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","bind","bindAttribLocation","getUniformLocation","linkProgram","use","v","p","useProgram","setup","uniformMatrix3fv","uniform1i","uniform1f","type","source","shader","createShader","shaderSource","Renderer","onresize","shaders","textures","images","currentShader","currentVao","currentTexture","document","body","style","margin","padding","canvas","createElement","display","width","height","cursor","touchAction","ResizeObserver","w","clientWidth","h","clientHeight","o","viewport","observe","box","appendChild","getContext","clearColor","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","quadBuffer","createQuadBuffer","Map","name","cachedShader","get","set","createVao","vao","createVertexArray","bindVertexArray","createBuffer","data","dynamic","buffer","updateBuffer","useBuffer","bufferData","ARRAY_BUFFER","DYNAMIC_DRAW","STATIC_DRAW","bindBuffer","a","location","size","stride","offset","divisor","vertexAttribPointer","FLOAT","enableVertexAttribArray","vertexAttribDivisor","fetchTexture","filename","smooth","path","cachedTexture","texture","createTexture","prepareTexture","imageIndex","length","image","Image","src","onload","clear","COLOR_BUFFER_BIT","d","vertexCount","instanceCount","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","drawArraysInstanced","TRIANGLES","drawArrays","texture0","texture2d","texImage2D","texParameteri","rgba","RGBA","unsignedByte","UNSIGNED_BYTE","filter","LINEAR","NEAREST","Uint8Array","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","Input","newKeyPresses","newKeyReleases","newPress","newRelease","lastX","lastY","game","renderer","addEventListener","event","mouse","pointerType","x","offsetX","y","offsetY","code","u","moved","press","release","keyPresses","newKeyPress","newKeyPressValue","Object","entries","keyReleases","newKeyRelease","newKeyReleaseValue","clickRead","click","Sprite","s","color","enabled","hidden","cc","attributes","r","g","b","cb","baseColor","index","activate","active","inactive","text","content","animations","delay","toString","spriteBatch","add","SpriteBatch","instanceBuffer","spritesChanged","textureFilename","sprites","c","sprite","push","map","flat","TextSegment","time","begin","timestamp","updated","animation","i","baseY","Math","sin","baseX","random","Text","segments","super","floor","max","split","segment","currX","currY","charCodeAt","Particles","emit","colorful","count","t","particle","angle","PI","dx","cos","dy","Grid","spacingX","spacingY","onclick","pressed","gridY","gridX","cell","fullW","fullH","grid","pressHandled","disabled","input","newActive","cellAtPosition","cellAt","indexAtPosition","relX","relY","indexX","trunc","indexY","Minigame","minigameClass","minigame","buttons","cat","leftPaw","rightPaw","catNameText","catTextText","exitButton","exit","catMet","started","won","lost","lostText","lostTextInfo","timer","init","button","buttonClick","_title","_sx","_type","cn","ct","_response","meta","title","_color","_catName","_catText","cr","Select","win","lose","minigamesWon","texts","tt","particles","Meowsweeper","onwin","onlose","mines","fontSize","digButton","flagButton","mode","static","min","setMode","start","open","mine","flagged","available","availableCell","abs","mineCell","splice","shake","opened","every","PawPawToe","over","m","mark","checkGrid","symbolCounts","Sudocat","grids","cellSize","digit","gridSize","gridSpacing","spacing","startX","setGrid","selectDigit","gridAt","starts","checkCells","valid","resetCells","checkRow","checkColumn","digitCounts","digitCount","Meowmory","showingA","showingB","slice","indexA","cellA","indexB","cellB","secret","cancelShowing","found","Meowjong","selected","ceil","baseGrid","gridA","gridB","gridC","leftCell","rightCell","freeCell","checkGrids","Meowsterpiece","rows","columns","maxRows","maxColumns","markButton","row","column","state","gridCorrect","current","correct","firstStart","minigameState","camY","startBlackCat","blackCat","blackCatArrived","titleShown","introOver","introText","minigameClasses","_","sx","_rest","sy","has","firstLine","timers","backgroundBatch","nextState","shakeScreen","ds","Set","step","onexpire","repeat","duration","navigator","vibrate","updateTimers","expired","some","currProjection","requestAnimationFrame"],"mappings":"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"}