{"version":3,"file":"bundle.js","sources":["src/Matrix3.js","src/Shader.js","src/Renderer.js","src/Input.js","src/Sprite.js","src/SpriteBatch.js","shaders/sprite.vert","shaders/sprite.frag","src/TextSegment.js","src/Text.js","src/Grid.js","src/states/Minigame.js","src/minigames/Meowsweeper.js","src/minigames/PawPawToe.js","src/minigames/Sudocat.js","src/minigames/Meowmory.js","src/minigames/Meowsterpiece.js","src/states/Select.js","src/index.js","src/Game.js"],"sourcesContent":["export default class Matrix3 extends Float32Array {\n  static identity() {\n    return new Matrix3([\n      1.0, 0.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 0.0, 1.0,\n    ]);\n  }\n\n  static ortho(left, right, bottom, top) {\n    return new Matrix3([\n      2.0 / (right - left), 0.0, 0.0,\n      0.0, 2.0 / (top - bottom), 0.0,\n      -(right + left) / (right - left), -(top + bottom) / (top - bottom), 1.0,\n    ]);\n  }\n}\n","export default class {\n  #program;\n  #viewUniformLocation;\n  #projectionUniformLocation;\n  #texUniformLocation;\n  #imageSizeUniformLocation;\n\n  constructor(gl, vertexShaderSource, fragmentShaderSource) {\n    const vertexShader = this.#compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource)\n    const fragmentShader = this.#compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n    const program = gl.createProgram();\n\n    const attachShader = gl.attachShader.bind(gl);\n    const bindAttribLocation = gl.bindAttribLocation.bind(gl);\n    const getUniformLocation = gl.getUniformLocation.bind(gl);\n\n    attachShader(program, vertexShader);\n    attachShader(program, fragmentShader);\n\n    bindAttribLocation(program, POSITION_ATTRIBUTE_LOCATION, 'vertexPosition');\n    bindAttribLocation(program, COLOR_ATTRIBUTE_LOCATION, 'vertexColor');\n    bindAttribLocation(program, TEX_COORD_ATTRIBUTE_LOCATION, 'vertexTexCoord');\n\n    bindAttribLocation(program, SPRITE_POSITION_ATTRIBUTE_LOCATION, 'spritePosition');\n    bindAttribLocation(program, SPRITE_SIZE_ATTRIBUTE_LOCATION, 'spriteSize');\n    bindAttribLocation(program, SPRITE_TYPE_ATTRIBUTE_LOCATION, 'spriteType');\n    bindAttribLocation(program, SPRITE_COLOR_ATTRIBUTE_LOCATION, 'spriteColor');\n    bindAttribLocation(program, SPRITE_ANGLE_ATTRIBUTE_LOCATION, 'spriteAngle');\n\n    gl.linkProgram(program);\n\n    this.#viewUniformLocation = getUniformLocation(program, 'view');\n    this.#projectionUniformLocation = getUniformLocation(program, 'projection');\n    this.#texUniformLocation = getUniformLocation(program, 'tex');\n    this.#imageSizeUniformLocation = getUniformLocation(program, 'imageSize');\n\n    this.#program = program;\n  }\n\n  use(gl, view, projection) {\n    gl.useProgram(this.#program);\n\n    this.setup(gl, view, projection);\n  }\n\n  setup(gl, view, projection) {\n    if (this.#viewUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#viewUniformLocation, false, view);\n    }\n\n    if (this.#projectionUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#projectionUniformLocation, false, projection);\n    }\n\n    if (this.#texUniformLocation != null) {\n      gl.uniform1i(this.#texUniformLocation, 0);\n    }\n\n    if (this.#imageSizeUniformLocation != null) {\n      gl.uniform1f(this.#imageSizeUniformLocation, IMAGE_SIZE);\n    }\n  }\n\n  #compileShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    return shader;\n  }\n}\n","import Matrix3 from './Matrix3';\n\nimport Shader from './Shader';\n\nexport default class {\n  #onresize;\n  #gl;\n  #shaders;\n  #textures;\n  #images;\n  #currentShader;\n  #currentVao;\n  #currentTexture;\n\n  constructor(onresize) {\n    this.#onresize = onresize;\n\n    document.body.style.margin = '0';\n    document.body.style.padding = '0';\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.style.display = 'block';\n    this.canvas.style.width = '100dvw';\n    this.canvas.style.height = '100dvh';\n    this.canvas.style.cursor = 'none';\n    this.canvas.style.touchAction = 'none';\n\n    new ResizeObserver(() => {\n      this.w = this.canvas.clientWidth;\n      this.h = this.canvas.clientHeight;\n\n      this.canvas.width = this.w;\n      this.canvas.height = this.h;\n\n      this.horizontal = this.w > this.h;\n\n      this.#gl.viewport(0, 0, this.w, this.h);\n      this.projection = Matrix3.ortho(0, this.w, this.h, 0);\n\n      this.#onresize();\n    }).observe(this.canvas, { box: 'content-box' });\n\n    document.body.appendChild(this.canvas);\n\n    this.#gl = this.canvas.getContext('webgl2');\n\n    this.#gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    this.#gl.clearColor(0.68, 0.68, 0.94, 1.0);\n\n    this.#gl.pixelStorei(this.#gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n    this.#gl.enable(this.#gl.BLEND);\n    this.#gl.blendFunc(this.#gl.ONE, this.#gl.ONE_MINUS_SRC_ALPHA);\n\n    this.quadBuffer = this.#createQuadBuffer();\n\n    this.#shaders = new Map();\n    this.#textures = new Map();\n    this.#images = [];\n\n    this.view = Matrix3.identity();\n    this.projection = Matrix3.ortho(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  createShader(name, vertexShaderSource, fragmentShaderSource) {\n    const cachedShader = this.#shaders.get(name);\n\n    if (cachedShader) {\n      return cachedShader;\n    }\n\n    const shader = new Shader(this.#gl, vertexShaderSource, fragmentShaderSource);\n    this.#shaders.set(name, shader);\n\n    return shader;\n  }\n\n  createVao() {\n    const vao = this.#gl.createVertexArray();\n\n    this.#gl.bindVertexArray(vao);\n\n    return vao;\n  }\n\n  createBuffer(data, dynamic) {\n    const buffer = this.#gl.createBuffer();\n\n    this.updateBuffer(buffer, data, dynamic);\n\n    return buffer;\n  }\n\n  updateBuffer(buffer, data, dynamic) {\n    this.useBuffer(buffer);\n\n    this.#gl.bufferData(this.#gl.ARRAY_BUFFER, data, dynamic ? this.#gl.DYNAMIC_DRAW : this.#gl.STATIC_DRAW);\n  }\n\n  useBuffer(buffer) {\n    this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, buffer);\n  }\n\n  setAttribute(location, size, stride, offset, divisor) {\n    this.#gl.vertexAttribPointer(location, size, this.#gl.FLOAT, false, stride, offset);\n    this.#gl.enableVertexAttribArray(location);\n\n    if (divisor != null) {\n      this.#gl.vertexAttribDivisor(location, divisor);\n    }\n  }\n\n  loadTexture(name, smooth) {\n    const path = `textures/${name}.png`;\n    const cachedTexture = this.#textures.get(`${path}_${smooth}`);\n\n    if (cachedTexture) {\n      return cachedTexture;\n    }\n\n    const texture = this.#gl.createTexture();\n    this.#prepareTexture(texture, null, smooth);\n\n    const imageIndex = this.#images.length;\n    const image = new Image();\n\n    image.src = path;\n    image.onload = () => this.#prepareTexture(texture, imageIndex, smooth);\n\n    this.#textures.set(`${path}_${smooth}`, texture);\n    this.#images[imageIndex] = image;\n\n    return texture;\n  }\n\n  clear() {\n    this.#gl.clear(this.#gl.COLOR_BUFFER_BIT);\n  }\n\n  draw(shader, vao, texture, vertexCount, instanceCount) {\n    if (shader !== this.#currentShader) {\n      shader.use(this.#gl, this.view, this.projection);\n      this.#currentShader = shader;\n    } else {\n      this.#currentShader.setup(this.#gl, this.view, this.projection);\n    }\n\n    if (vao !== this.#currentVao) {\n      this.#gl.bindVertexArray(vao);\n      this.#currentVao = vao;\n    }\n\n    if (texture !== this.#currentTexture) {\n      this.#gl.activeTexture(this.#gl.TEXTURE0);\n      this.#gl.bindTexture(this.#gl.TEXTURE_2D, texture);\n      this.#currentTexture = texture;\n    }\n\n    if (instanceCount != null) {\n      this.#gl.drawArraysInstanced(this.#gl.TRIANGLES, 0, vertexCount, instanceCount);\n    } else {\n      this.#gl.drawArrays(this.#gl.TRIANGLES, 0, vertexCount);\n    }\n  }\n\n  #createQuadBuffer() {\n    return this.createBuffer(new Float32Array([\n      0.0, 0.0, 0.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 0.0, 1.0, 0.0,\n\n      1.0, 0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 1.0, 1.0, 1.0,\n    ]), false);\n  }\n\n  #prepareTexture(texture, imageIndex, smooth) {\n    const gl = this.#gl;\n    const texture0 = gl.TEXTURE0;\n    const texture2d = gl.TEXTURE_2D;\n    const texImage2D = gl.texImage2D.bind(gl);\n    const texParameteri = gl.texParameteri.bind(gl);\n    const rgba = gl.RGBA;\n    const unsignedByte = gl.UNSIGNED_BYTE;\n    const filter = smooth ? gl.LINEAR : gl.NEAREST;\n\n    gl.activeTexture(texture0);\n    gl.bindTexture(texture2d, texture);\n\n    if (imageIndex != null) {\n      texImage2D(texture2d, 0, rgba, rgba, unsignedByte, this.#images[imageIndex]);\n    } else {\n      texImage2D(texture2d, 0, rgba, 1, 1, 0, rgba, unsignedByte, new Uint8Array([255, 0, 255, 255,]));\n    }\n\n    texParameteri(texture2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    texParameteri(texture2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    texParameteri(texture2d, gl.TEXTURE_MIN_FILTER, filter);\n    texParameteri(texture2d, gl.TEXTURE_MAG_FILTER, filter);\n  }\n}\n","export default class {\n  #newKeyPresses;\n  #newKeyReleases;\n  #newPress;\n  #newRelease;\n  #lastX;\n  #lastY;\n\n  constructor(game) {\n    this.#newKeyPresses = {};\n    this.#newKeyReleases = {};\n\n    game.renderer.canvas.addEventListener('pointermove', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n    });\n\n    game.renderer.canvas.addEventListener('pointerdown', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newPress = true;\n    });\n\n    game.renderer.canvas.addEventListener('pointerup', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newRelease = true;\n    });\n\n    addEventListener('keydown', event => {\n      this.#newKeyPresses[event.code] = true;\n    });\n\n    addEventListener('keyup', event => {\n      this.#newKeyReleases[event.code] = true;\n    });\n  }\n\n  update() {\n    if (this.x !== this.#lastX || this.y !== this.#lastY) {\n      this.#lastX = this.x;\n      this.#lastY = this.y;\n      this.moved = true;\n    }\n\n    this.press = false;\n\n    if (this.#newPress) {\n      this.press = true;\n      this.#newPress = false;\n    }\n\n    this.release = false;\n\n    if (this.#newRelease) {\n      this.release = true;\n      this.#newRelease = false;\n    }\n\n    this.keyPresses = {};\n\n    for (const [newKeyPress, newKeyPressValue] of Object.entries(this.#newKeyPresses)) {\n      if (newKeyPressValue) {\n        this.keyPresses[newKeyPress] = true;\n        this.#newKeyPresses[newKeyPress] = false;\n      }\n    }\n\n    this.keyReleases = {};\n\n    for (const [newKeyRelease, newKeyReleaseValue] of Object.entries(this.#newKeyReleases)) {\n      if (newKeyReleaseValue) {\n        this.keyReleases[newKeyRelease] = true;\n        this.#newKeyReleases[newKeyRelease] = false;\n      }\n    }\n\n    this.clickRead = false;\n  }\n\n  click() {\n    return !this.clickRead && ((this.mouse && this.release) || (!this.mouse && this.press));\n  }\n}\n","export default class {\n  constructor(x, y, s, type, color) {\n    this.x = x;\n    this.y = y;\n    this.s = s;\n    this.type = type;\n    this.angle = 0.0;\n    this.enabled = true;\n    this.hidden = false;\n    this.a = 1.0;\n\n    this.setColor(color);\n  }\n\n  attributes() {\n    return [this.x, this.y, this.s, this.type, this.r, this.g, this.b, this.hidden ? 0 : this.a, this.angle];\n  }\n\n  setBaseColor(color) {\n    this.baseColor = color;\n    this.setColor(color);\n  }\n\n  setColor(index) {\n    let color = [0xd9dcff, 0xadadf0, 0xc28c94, 0xa66670, 0x575775,\n                 0x545454, 0xb36e14, 0xe6e6e6, 0xa38f61, 0x999999,\n                 0x90a8c3, 0x469d89, 0xb5c99a, 0x00a6fb, 0x4cc9f0,\n                 0xf4cae0, 0xe500a4, 0xf20089, 0xffffff, 0xffccf0,\n                 0x000000][index];\n    if (color == null) {\n      color = 0xffffff;\n    }\n    this.r = ((color & 0xff0000) >> 16) / 255.0;\n    this.g = ((color & 0x00ff00) >> 8) / 255.0;\n    this.b = (color & 0x0000ff) / 255.0;\n  }\n\n  activate(active) {\n    this.inactive = !active;\n    this.setColor(active ? (this.baseColor || PRIMARY_COLOR) : INACTIVE_COLOR);\n  }\n\n  write(text, content, s, color = ACTIVE_COLOR, animations = null, delay = null) {\n    (this.content || {}).enabled = false;\n    this.content = text.write(content.toString(), this.x + (this.s - s) / 2, this.y + (this.s - s) / 2, s, color, animations, delay);\n  }\n\n  draw(spriteBatch, s, type, color) {\n    (this.content || {}).enabled = false;\n    this.content = spriteBatch.add(this.x + (this.s - s) / 2, this.y + (this.s - s) / 2, s, type, color);\n  }\n}\n","import vertexShaderSource from '../shaders/sprite.vert';\nimport fragmentShaderSource from '../shaders/sprite.frag';\n\nimport Sprite from './Sprite';\n\nexport default class {\n  #game;\n  #shader;\n  #vao;\n  #instanceBuffer;\n  #texture;\n  #spritesChanged;\n\n  constructor(game, smooth = false, textureName = 'sprites') {\n    this.#game = game;\n    const renderer = game.renderer;\n\n    this.#shader = renderer.createShader('sprite', vertexShaderSource, fragmentShaderSource);\n\n    this.#vao = renderer.createVao();\n\n    renderer.useBuffer(renderer.quadBuffer);\n\n    renderer.setAttribute(POSITION_ATTRIBUTE_LOCATION, 2, 16, 0);\n    renderer.setAttribute(TEX_COORD_ATTRIBUTE_LOCATION, 2, 16, 8);\n\n    this.#instanceBuffer = renderer.createBuffer(new Float32Array(), true);\n\n    renderer.setAttribute(SPRITE_POSITION_ATTRIBUTE_LOCATION, 2, 36, 0, 1);\n    renderer.setAttribute(SPRITE_SIZE_ATTRIBUTE_LOCATION, 1, 36, 8, 1);\n    renderer.setAttribute(SPRITE_TYPE_ATTRIBUTE_LOCATION, 1, 36, 12, 1);\n    renderer.setAttribute(SPRITE_COLOR_ATTRIBUTE_LOCATION, 4, 36, 16, 1);\n    renderer.setAttribute(SPRITE_ANGLE_ATTRIBUTE_LOCATION, 1, 36, 32, 1);\n\n    this.#texture = renderer.loadTexture(textureName, smooth);\n\n    this.sprites = [];\n    this.changed();\n  }\n\n  add(x, y, s, type, color) {\n    if (x === 'center') {\n      x = this.#game.renderer.w / 2 - s / 2;\n    }\n\n    if (y === 'center') {\n      y = this.#game.renderer.h / 2 - s / 2;\n    }\n\n    const sprite = new Sprite(x, y, s, type, color);\n\n    this.sprites.push(sprite);\n    this.changed();\n\n    return sprite;\n  }\n\n  changed() {\n    this.#spritesChanged = true;\n  }\n\n  update() {\n    if (this.#spritesChanged) {\n      this.sprites = this.sprites.filter(sprite => sprite.enabled);\n\n      this.#game.renderer.updateBuffer(this.#instanceBuffer, new Float32Array(\n        this.sprites\n            .map(sprite => sprite.attributes())\n            .flat()\n      ), true);\n\n      this.#spritesChanged = false;\n    }\n  }\n\n  draw() {\n    this.#game.renderer.draw(this.#shader, this.#vao, this.#texture, 6, this.sprites.length);\n  }\n}\n","#version 300 es\n\nuniform mat3 view;\nuniform mat3 projection;\nuniform float imageSize;\n\nuniform sampler2D tex;\n\nin vec2 vertexPosition;\nin vec2 vertexTexCoord;\n\nin vec2 spritePosition;\nin float spriteSize;\nin float spriteType;\nin vec4 spriteColor;\nin float spriteAngle;\n\nout vec2 texCoord;\nout vec4 tint;\n\nvoid main() {\n  vec2 texOffset = vec2(imageSize / float(textureSize(tex, 0)),\n                        imageSize / float(textureSize(tex, 0).y));\n\n  texCoord = vec2(texOffset.x, 0.0) * spriteType + vertexTexCoord * texOffset;\n  tint = spriteColor;\n  tint.rgb *= tint.a;\n  // TODO: Calculate rotation based on spriteAngle\n  gl_Position = vec4(projection * view * vec3(vertexPosition * spriteSize + spritePosition, 1.0), 1.0);\n}\n","#version 300 es\n\nprecision highp float;\n\nuniform sampler2D tex;\n\nin vec2 texCoord;\nin vec4 tint;\n\nout vec4 fragmentColor;\n\nvoid main() {\n  fragmentColor = texture(tex, texCoord) * tint;\n}\n","export default class {\n  constructor(text, x, y, s, color, animations, delay) {\n    this.text = text;\n    this.x = x;\n    this.y = y;\n    this.s = s;\n    this.color = color;\n    this.animations = animations ?? [];\n    this.delay = delay ?? 0;\n\n    this.sprites = [];\n    this.enabled = true;\n\n    this.time = 0;\n    this.begin = null;\n  }\n\n  setColor(color) {\n    for (const sprite of this.sprites) {\n      sprite.setColor(color);\n    }\n  }\n\n  update(timestamp) {\n    let updated = false;\n\n    for (const animation of this.animations) {\n      switch (animation) {\n      case 'sine':\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.y = sprite.baseY + Math.sin(i + timestamp / 200) * 10;\n        }\n        updated = true;\n        break;\n      case 'shake':\n        this.time += 1;\n\n        if (this.time === 7) {\n          this.time = 0;\n          for (let i = 0; i < this.sprites.length; i++) {\n            const sprite = this.sprites[i];\n            sprite.x = sprite.baseX + Math.random() * 5;\n            sprite.y = sprite.baseY + Math.random() * 5;\n          }\n        }\n        updated = true;\n        break;\n      case 'typing':\n        if (!this.begin) {\n          this.begin = timestamp;\n        }\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.hidden = (timestamp - this.begin - this.delay) / 150 < i;\n        }\n        updated = true;\n        break;\n      }\n    }\n\n    return updated;\n  }\n}\n","import SpriteBatch from './SpriteBatch';\nimport TextSegment from './TextSegment';\n\nexport default class extends SpriteBatch {\n  #game;\n  #segments;\n\n  constructor(game) {\n    super(game, false, 'font');\n\n    this.#game = game;\n    this.#segments = [];\n  }\n\n  write(text, x, y, s, color = ACTIVE_COLOR, animations = null, delay = null) {\n    if (x === 'center') {\n      x = Math.floor(this.#game.renderer.w / 2 - (Math.max(...text.split('\\n').map(s => s.length)) * s) / 2);\n    }\n\n    if (y === 'center') {\n      y = Math.floor(this.#game.renderer.h / 2 - (text.split('\\n').length * s) / 2);\n    }\n\n    const segment = new TextSegment(text, x, y, s, color, animations, delay);\n\n    let currX = x;\n    let currY = y;\n\n    for (const c of text) {\n      let type;\n\n      if (c === '\\n') {\n        currY += s;\n        currX = x;\n\n        continue;\n      }\n\n      if (c >= 'A' && c <= 'Z') {\n        type = c.charCodeAt(0) - 'A'.charCodeAt(0);\n      } else if (c >= '0' && c <= '9') {\n        type = 26 + c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if (c === '?') {\n        type = 36;\n      } else if (c === '!') {\n        type = 37;\n      } else if (c === ',') {\n        type = 38;\n      } else if (c === '.') {\n        type = 39;\n      } else if (c === \"'\") {\n        type = 40;\n      }\n\n      if (type != null) {\n        const sprite = this.add(currX, currY, s, type, color);\n        sprite.baseX = currX;\n        sprite.baseY = currY;\n        segment.sprites.push(sprite);\n      }\n\n      currX += s;\n    }\n\n    this.#segments.push(segment);\n    this.changed();\n\n    return segment;\n  }\n\n  clear() {\n    for (const segment of this.#segments) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = [];\n    this.changed();\n  }\n\n  update(timestamp) {\n    for (const segment of this.#segments.filter(segment => !segment.enabled)) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = this.#segments.filter(segment => segment.enabled);\n\n    for (const segment of this.#segments) {\n      if (segment.update(timestamp)) {\n        this.changed();\n      }\n    }\n\n    super.update();\n  }\n}\n","import SpriteBatch from './SpriteBatch';\n\nexport default class extends SpriteBatch {\n  #game;\n  #spacingX;\n  #spacingY;\n  #onclick;\n  #color;\n  #active;\n  #pressed;\n\n  constructor(game, x, y, w, h, s, spacingX, spacingY, onclick, color = PRIMARY_COLOR, type = 0) {\n    super(game, false, 'cells');\n\n    this.#game = game;\n\n    if (x === 'center') {\n      x = game.renderer.w / 2 - w * (s + (spacingX ?? 0) * (w - 1) / w) / 2;\n    }\n\n    if (y === 'center') {\n      y = game.renderer.h / 2 - h * (s + (spacingY ?? 0) * (h - 1) / h) / 2;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h\n    this.s = s;\n    this.#spacingX = spacingX ?? 0;\n    this.#spacingY = spacingY ?? 0;\n    this.#onclick = onclick;\n    this.#color = color;\n\n    for (let gridY = 0; gridY < h; gridY++) {\n      for (let gridX = 0; gridX < w; gridX++) {\n        const cell = this.add(x + gridX * this.#fullW, y + gridY * this.#fullH, s, type, color);\n        cell.setColor(color);\n        cell.gridX = gridX;\n        cell.gridY = gridY;\n      }\n    }\n  }\n\n  update() {\n    if (!this.disabled) {\n      if (this.#game.input.moved) {\n        let newActive = this.#cellAtPosition(this.#game.input.x, this.#game.input.y);\n        if (newActive?.inactive) {\n          newActive = null;\n        }\n\n        if (newActive !== this.#active && !this.#pressed) {\n          if (this.#onclick) {\n            if (this.#game.input.mouse) {\n              if (!this.#active?.inactive) {\n                this.#active?.setColor(this.#active?.baseColor || this.#color);\n              }\n\n              newActive?.setColor(HIGHLIGHT_COLOR);\n              this.changed();\n            }\n          }\n        }\n\n        this.#active = newActive;\n      }\n\n      if (this.#game.input.press) {\n        this.#pressed = this.#active;\n\n        if (this.#onclick) {\n          if (this.#game.input.mouse) {\n            this.#pressed?.setColor(ACTIVE_COLOR);\n            this.changed();\n          }\n        }\n      }\n\n      if (this.#game.input.click()) {\n        if (this.#onclick) {\n          this.#pressed?.setColor(this.#pressed?.baseColor || this.#color);\n          if (this.#active && this.#active === this.#pressed) {\n            this.#game.input.clickRead = true;\n            this.#onclick(this.#pressed);\n          }\n          this.changed();\n        }\n\n        this.#pressed = null;\n      }\n    }\n\n    super.update();\n  }\n\n  cellAt(x, y) {\n    if (x >= 0 && x < this.w && y >= 0 && y < this.h) {\n      return this.sprites[this.w * y + x];\n    }\n  }\n\n  #cellAtPosition(x, y) {\n    const index = this.#indexAtPosition(x, y);\n\n    if (index) {\n      return this.cellAt(index[0], index[1]);\n    }\n  }\n\n  #indexAtPosition(x, y) {\n    const relX = x - this.x;\n    const relY = y - this.y;\n    const indexX = Math.trunc(relX / this.#fullW);\n    const indexY = Math.trunc(relY / this.#fullH);\n\n    if (relX >= 0 && relY >= 0 &&\n        relX - indexX * this.#fullW < this.s &&\n        relY - indexY * this.#fullH < this.s &&\n        indexX >= 0 && indexX < this.w && indexY >= 0 && indexY < this.h) {\n      return [indexX, indexY];\n    }\n  }\n\n  get #fullW() {\n    return this.s + this.#spacingX;\n  }\n\n  get #fullH() {\n    return this.s + this.#spacingY;\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\nimport Select from './Select';\n\nexport default class {\n  #minigameClass;\n  #game;\n  #minigame;\n  #buttons;\n  #spriteBatch;\n  #cat;\n  #leftPaw;\n  #rightPaw;\n  #catNameText;\n  #catTextText;\n  #exitButton;\n  #exit;\n  #catMet;\n  #started;\n\n  constructor(minigameClass) {\n    this.#minigameClass = minigameClass;\n  }\n\n  init(game) {\n    this.#game = game;\n\n    this.#buttons = new Grid(game, game.renderer.w - 74, 10, 1, 1, 64, 0, 0, (button) => this.#buttonClick(button));\n\n    this.#exitButton = this.#buttons.sprites[0];\n\n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(game.text, 'X', 32, ACTIVE_COLOR);\n\n    this.#spriteBatch = new SpriteBatch(game);\n\n    const [_title, color, _sx, _type, catName, catText, _response] = this.#minigameClass.meta;\n\n    this.#cat = this.#spriteBatch.add('center', 100, 64, 1, color);\n    this.#leftPaw = this.#spriteBatch.add(this.#cat.x - 12, this.#cat.y + 60, 24, 0, color);\n    this.#rightPaw = this.#spriteBatch.add(this.#cat.x + 46, this.#cat.y + 60, 24, 0, color);\n\n    this.#catNameText = game.text.write(catName, 'center', 10, 24, color, ['sine']);\n    this.#catTextText = game.text.write(catText, 'center', this.#cat.y + 100, 32, color, ['typing', 'shake']);\n  }\n\n  update() {\n    const [title, _color, _sx, _type, _catName, _catText, response] = this.#minigameClass.meta;\n\n    if (this.#exit) {\n      return new Select(this.#game);\n    }\n\n    this.#buttons.update();\n\n    if (!this.#catMet && this.#game.input.click()) {\n      this.#game.input.clickRead = true;\n      this.#cat.setColor(BLACKCAT_COLOR);\n      this.#leftPaw.setColor(BLACKCAT_COLOR);\n      this.#rightPaw.setColor(BLACKCAT_COLOR);\n      this.#spriteBatch.changed();\n      this.#catNameText.enabled = false;\n      this.#catTextText.enabled = false;\n      this.#catNameText = this.#game.text.write('VICKI', 'center', 10, 24, BLACKCAT_COLOR, ['sine']);\n      this.#catTextText = this.#game.text.write(response, 'center', this.#cat.y + 100, 32, BLACKCAT_COLOR, ['typing', 'shake']);\n      this.#catMet = true;\n    } else if (!this.#started && this.#game.input.click()) {\n      this.#game.input.clickRead = true;\n      this.#cat.enabled = false;\n      this.#leftPaw.enabled = false;\n      this.#rightPaw.enabled = false;\n      this.#catNameText.enabled = false;\n      this.#catTextText.enabled = false;\n      this.#spriteBatch.changed();\n      this.#game.text.write(title, 'center', 10, 48, INACTIVE_COLOR, ['sine']);\n      this.#setup();\n      this.#started = true;\n    }\n\n    if (this.#started) {\n      this.#minigame.update();\n    }\n\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    if (this.#started && !this.#exit) {\n      this.#minigame.draw();\n    }\n\n    this.#spriteBatch.draw();\n    this.#buttons.draw();\n  }\n\n  #setup() {\n    this.#minigame = new this.#minigameClass(this.#game, () => this.#win(), () => this.#lose());\n\n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(this.#game.text, 'X', 32, ACTIVE_COLOR);\n  }\n\n  #win() {\n    this.#game.scheduleTimer(500, () => {\n      this.#game.minigamesWon.add(this.#minigameClass);\n      this.#exit = true;\n    });\n  }\n\n  #lose() {\n    this.#game.scheduleTimer(500, () => { this.#setup(); });\n  }\n\n  #buttonClick(button) {\n    if (button === this.#exitButton) {\n      this.#exit = true;\n    }\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #w;\n  #h;\n  #mines;\n  #fontSize;\n  #grid;\n  #buttons;\n  #digButton;\n  #flagButton;\n  #mode;\n  #started;\n\n  static meta = [\n    'MEOWSWEEPER',\n    TABBYCAT_COLOR,\n    73,\n    2,\n    'QUEEN KARA THE 3RD',\n    \"YOU, NEW CAT!!\\nI NEED YOU TO SCRATCH MY BACK\\nIMMEDIATELY BUT ONLY WHERE\\nI LIKE IT!\\n\\n\\nSINCE YOU'RE NEW I WILL TELL\\nYOU HOW MANY DANGER ZONES\\nARE AROUND WHERE YOU'RE\\nSCRATCHING!\",\n    'OOOH, THE QUEEN HERSELF!!\\n\\n\\nI NEED TO MAKE A GOOD\\nFIRST IMPRESSION!'\n  ];\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#w = game.renderer.horizontal ? 20 : 10;\n    this.#h = game.renderer.horizontal ? 10 : 20;\n    this.#mines = 10;\n\n    this.#fontSize = 26;\n\n    const spacing = 4;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / this.#w - (spacing * (this.#w - 1) / this.#w), (game.renderer.h - 110) / this.#h - (spacing * (this.#h - 1) / this.#h)));\n\n    this.#grid = new Grid(game, 'center', 100, this.#w, this.#h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#buttons = new Grid(game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#digButton = this.#buttons.sprites[0];\n    this.#digButton.write(game.text, 'O', 30, ACTIVE_COLOR);\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(game.text, 'X', 30, ACTIVE_COLOR);\n\n    this.#setMode('dig');\n  }\n\n  update() {\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      this.#setMode('dig');\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      this.#setMode('flag');\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    switch (this.#mode) {\n    case 'dig':\n      if (!this.#started) {\n        this.#start(cell);\n      }\n\n      this.#open(cell.gridX, cell.gridY);\n\n      if (cell.mine) {\n        this.#grid.disabled = true;\n\n        this.#game.scheduleTimer(2000, () => {\n          for (const cell of this.#grid.sprites) {\n            (cell.content || {}).enabled = false;\n          }\n\n          this.#game.text.changed();\n\n          this.#onlose();\n        });\n      }\n\n      break;\n    case 'flag':\n      if (cell.flagged) {\n        cell.flagged = false;\n        cell.content.enabled = false;\n        this.#game.text.changed();\n      } else {\n        cell.flagged = true;\n        cell.write(this.#game.text, 'X', this.#fontSize, HIGHLIGHT_COLOR);\n      }\n      break;\n    }\n  }\n\n  #start(cell) {\n    const available = this.#grid.sprites.filter(availableCell => availableCell !== cell && (Math.abs(availableCell.gridX - cell.gridX) > 1 || Math.abs(availableCell.gridY - cell.gridY) > 1));\n\n    for (let i = 0; i < this.#mines; i++) {\n      const index = Math.floor(Math.random() * available.length);\n      const mineCell = available[index];\n      available.splice(index, 1);\n\n      mineCell.mine = true;\n    }\n\n    for (let y = 0; y < this.#grid.h; y++) {\n      for (let x = 0; x < this.#grid.w; x++) {\n        let cell = this.#grid.cellAt(x, y);\n        if (!cell.mine) {\n          cell.mines = 0;\n          for (let dy = -1; dy <= 1; dy++) {\n            for (let dx = -1; dx <= 1; dx++) {\n              if (this.#grid.cellAt(x + dx, y + dy)?.mine) {\n                cell.mines += 1;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.#started = true;\n  }\n\n  #open(x, y) {\n    this.#game.shake(200);\n    const cell = this.#grid.cellAt(x, y);\n\n    if (cell?.flagged) {\n      cell.flagged = false;\n      cell.content.enabled = false;\n    }\n\n    if (cell?.enabled && !cell?.opened) {\n      cell.opened = true;\n\n      cell.activate(false);\n\n      if (cell.mines === 0) {\n        cell.hidden = true;\n\n        this.#open(x, y - 1);\n        this.#open(x, y + 1);\n        this.#open(x - 1, y);\n        this.#open(x + 1, y);\n      } else {\n        if (cell.mine) {\n          for (const mineCell of this.#grid.sprites.filter(cell => cell.mine)) {\n            mineCell.activate(false);\n            mineCell.write(this.#game.text, 'X', this.#fontSize, INACTIVE10_COLOR);\n          }\n        } else {\n          cell.write(this.#game.text, cell.mines, this.#fontSize, INACTIVE1_COLOR + (cell.mines - 1));\n        }\n      }\n    }\n\n    if (this.#grid.sprites.filter(cell => !cell.opened).every(cell => cell.mine)) {\n      this.#onwin();\n    }\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode('flag');\n    } else if (button === this.#digButton) {\n      this.#setMode('dig');\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#digButton.activate(this.#mode !== 'dig');\n    this.#flagButton.activate(this.#mode !== 'flag');\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #grid;\n  #spriteBatch;\n  #timer;\n  #over;\n\n  static meta = [\n    'PAW PAW TOE',\n    ORANGECAT_COLOR,\n    73,\n    2,\n    'ORANGE CAT, THE USELESS BOYFRIEND',\n    \"BET YOU CAN'T BEAT ME\\nIN PAW PAW TOE!\\n\\n\\nI'M THE SMARTEST\\nORANGE CAT EVER!!!\",\n    \"WELL, THAT'S\\nNOT SAYING MUCH...\\n\\n\\nLET'S SEE!\"\n  ];\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#grid = new Grid(game, 'center', 'center', 3, 3, 96, 20, 20, (cell) => this.#click(cell));\n    this.#spriteBatch = new SpriteBatch(game);\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (!cell.symbol) {\n      this.#mark(cell, 'X');\n\n      this.#grid.disabled = true;\n\n      this.#timer = this.#game.scheduleTimer(1000, () => {\n        if (!this.#over) {\n          const available = this.#grid.sprites.filter(sprite => !sprite.symbol);\n\n          if (available.length > 0) {\n            this.#mark(available[Math.floor(Math.random() * available.length)], 'O');\n\n            this.#grid.disabled = false;\n            this.#grid.changed();\n          }\n        }\n      });\n    }\n  }\n\n  #mark(cell, symbol) {\n    if (!this.#over) {\n      this.#game.shake(200);\n\n      cell.symbol = symbol;\n\n      cell.activate(false);\n\n      cell.draw(this.#spriteBatch, 64, 0, symbol === 'X' ? BLACKCAT_COLOR : ORANGECAT_COLOR);\n\n      this.#checkGrid();\n    }\n  }\n\n  #checkGrid() {\n    for (let y = 0; y < 3; y++) {\n      const symbolCounts = new Map();\n\n      for (let x = 0; x < 3; x++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    for (let x = 0; x < 3; x++) {\n      const symbolCounts = new Map();\n\n      for (let y = 0; y < 3; y++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(2, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(2, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(0, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(0, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n  }\n\n  #win(symbol) {\n    this.#over = true;\n    this.#grid.disabled = true;\n    (this.#timer || {}).disabled = true;\n\n    if (symbol === 'X') {\n      this.#onwin();\n    } else if (symbol === 'O') {\n      this.#onlose();\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #spriteBatch;\n  #grids;\n  #cellSize;\n  #buttons;\n  #digit;\n\n  static meta = [\n    'SUDOCAT',\n    BLACKCAT_COLOR,\n    73,\n    4,\n    'KUMBA',\n    \"I NEED ALL MY TREATS AND\\nTOYS NEATLY ORGANISED!!\\n\\n\\nTHERE SHOULD BE ONLY ONE\\nTYPE IN EACH ROW, EACH\\nCOLUMN AND IN EACH BOX!!\",\n    'KITTY MUST HAVE OCD...'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#spriteBatch = new SpriteBatch(game, true);\n\n    this.#grids = [];\n\n    const gridSpacing = 16;\n\n    const gridSize = Math.floor(Math.min((game.renderer.w - 20) / 3 - (gridSpacing * (3 - 1) / 3), (game.renderer.h - 200) / 3 - (gridSpacing * (3 - 1) / 3)));\n\n    const spacing = 5;\n\n    this.#cellSize = Math.floor(Math.min((gridSize - 0) / 3 - (spacing * (3 - 1) / 3), (gridSize - 0) / 3 - (spacing * (3 - 1) / 3)));\n\n    const startX = game.renderer.w / 2 - 3 * (gridSize + gridSpacing * (3 - 1) / 3) / 2;\n\n    for (let y = 0; y < 3; y++) {\n      for (let x = 0; x < 3; x++) {\n        const grid = new Grid(game, startX + x * (gridSize + gridSpacing), 100 + y * (gridSize + gridSpacing), 3, 3, this.#cellSize, spacing, spacing, (cell) => this.#click(cell));\n        this.#grids.push(grid);\n      }\n    }\n\n    this.#buttons = new Grid(game, 'center', game.renderer.h - 74, 10, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    for (let digit = 1; digit <= 10; digit++) {\n      const button = this.#buttons.sprites[digit - 1];\n      button.draw(this.#spriteBatch, 64 * 2 / 3, digit + 5);\n      button.digit = digit <= 9 ? digit : null;\n    }\n\n    this.#setGrid();\n    this.#selectDigit(1);\n  }\n\n  update() {\n    for (let digit = 1; digit <= 9; digit++) {\n      if (this.#game.input.keyPresses[`Digit${digit}`]) {\n        this.#selectDigit(digit);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      if (this.#digit > 1) {\n        this.#selectDigit(this.#digit - 1);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      if (this.#digit < 9) {\n        this.#selectDigit(this.#digit + 1);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyX'] || this.#game.input.keyPresses['Digit0']) {\n      this.#selectDigit(null);\n    }\n\n    this.#spriteBatch.update();\n\n    for (const grid of this.#grids) {\n      grid.update();\n    }\n\n    this.#buttons.update();\n  }\n\n  draw() {\n    for (const grid of this.#grids) {\n      grid.draw();\n    }\n\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #gridAt(x, y) {\n    return this.#grids[Math.floor(y / 3) * 3 + Math.floor(x / 3)];\n  }\n\n  #cellAt(x, y) {\n    return this.#gridAt(x, y).cellAt(x % 3, y % 3);\n  }\n\n  #setGrid() {\n    const starts = [\n      [\n        6, 8, 0, 1, 0, 0, 0, 9, 0,\n        0, 3, 4, 5, 0, 8, 0, 2, 0,\n        2, 1, 0, 0, 6, 0, 3, 0, 0,\n        5, 0, 0, 4, 0, 7, 0, 0, 9,\n        3, 4, 2, 9, 0, 0, 0, 0, 6,\n        0, 0, 7, 0, 8, 0, 5, 0, 0,\n        9, 2, 0, 8, 0, 0, 0, 5, 3,\n        0, 0, 3, 2, 0, 0, 9, 1, 8,\n        0, 0, 0, 3, 0, 0, 0, 6, 7,\n      ]\n    ];\n\n    const start = starts[Math.floor(Math.random() * starts.length)];\n\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const digit = start[y * 9 + x];\n        if (digit !== 0) {\n          const cell = this.#cellAt(x, y);\n          cell.activate(false);\n          cell.digit = digit;\n          cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, digit + 5);\n        }\n      }\n    }\n  }\n\n  #click(cell) {\n    cell.digit = this.#digit;\n    (cell.content || {}).enabled = false;\n\n    if (this.#digit) {\n      cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, this.#digit + 5);\n    }\n\n    if (this.#checkCells()) {\n      this.#onwin();\n    }\n\n    this.#game.text.changed();\n    this.#spriteBatch.changed();\n  }\n\n  #checkCells() {\n    let valid = true;\n\n    this.#resetCells();\n\n    for (let i = 0; i < 9; i++) {\n      valid &= this.#checkRow(i);\n      valid &= this.#checkColumn(i);\n      valid &= this.#checkGrid(i);\n    }\n\n    return valid;\n  }\n\n  #resetCells() {\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const cell = this.#cellAt(x, y);\n        if (!cell.inactive) {\n          cell.setBaseColor(PRIMARY_COLOR);\n        }\n      }\n    }\n\n    for (let i = 0; i < 9; i++) {\n      this.#grids[i].changed();\n    }\n  }\n\n  #checkRow(x) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let y = 0; y < 9; y++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let y = 0; y < 9; y++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor(ACTIVE_COLOR);\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkColumn(y) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let x = 0; x < 9; x++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let x = 0; x < 9; x++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor(ACTIVE_COLOR);\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkGrid(index) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    const grid = this.#grids[index];\n\n    for (let i = 0; i < 9; i++) {\n      const cell = grid.sprites[i];\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let i = 0; i < 9; i++) {\n          const cell = grid.sprites[i];\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor(ACTIVE_COLOR);\n            grid.changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#selectDigit(button.digit);\n    }\n  }\n\n  #selectDigit(digit) {\n    this.#digit = digit;\n\n    for (const button of this.#buttons.sprites) {\n      button.activate(true);\n    }\n\n    this.#buttons.sprites[digit != null ? digit - 1 : 9].activate(false);\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #grid;\n  #spriteBatch;\n  #opened;\n  #showingA;\n  #showingB;\n  #timer;\n\n  static meta = [\n    'MEOWMORY',\n    SILVERCAT_COLOR,\n    8,\n    3,\n    'MOLLY',\n    \"THEY SAY I HAVE THE\\nMEMORY OF A GOLDFISH...\\n\\n\\nCAN YOU SHOW ME HOW\\nTO REMEMBER THINGS??\",\n    'SOMEONE SAID FISHIE?!\\n\\n\\nYUM!!!'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    const w = game.renderer.horizontal ? 6 : 5;\n    const h = game.renderer.horizontal ? 5 : 6;\n\n    const spacing = 16;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / w - (spacing * (w - 1) / w), (game.renderer.h - 110) / h - (spacing * (h - 1) / h)));\n\n    this.#grid = new Grid(game, 'center', 100, w, h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#spriteBatch = new SpriteBatch(game, true);\n\n    const available = this.#grid.sprites.slice();\n\n    for (let i = 0; i < (w * h) / 2; i++) {\n      const indexA = Math.floor(Math.random() * available.length);\n      const cellA = available[indexA];\n      available.splice(indexA, 1);\n\n      const indexB = Math.floor(Math.random() * available.length);\n      const cellB = available[indexB];\n      available.splice(indexB, 1);\n\n      cellA.secret = i;\n      cellB.secret = i;\n    }\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (!cell.open) {\n      if (this.#showingA && this.#showingB) {\n        this.#cancelShowing();\n      }\n\n      cell.open = true;\n      cell.draw(this.#spriteBatch, this.#grid.s * 2 / 3, cell.secret, cell.secret < 5 ? TABBYCAT_COLOR : null);\n      cell.setBaseColor(ACTIVE_COLOR);\n\n      if (this.#opened) {\n        if (cell.secret === this.#opened.secret) {\n          cell.found = true;\n          cell.activate(false);\n\n          this.#opened.found = true;\n          this.#opened.activate(false);\n\n          if (this.#grid.sprites.every(cell => cell.found)) {\n            this.#onwin();\n          }\n        } else {\n          this.#showingA = this.#opened;\n          this.#showingB = cell;\n\n          this.#timer = this.#game.scheduleTimer(1000, () => this.#cancelShowing());\n        }\n\n        this.#opened = false;\n      } else {\n        this.#opened = cell;\n      }\n    }\n  }\n\n  #cancelShowing() {\n    (this.#timer || {}).disabled = true;\n\n    this.#showingA.open = false;\n    this.#showingA.content.enabled = false;\n    this.#showingA.setBaseColor(PRIMARY_COLOR);\n\n    this.#showingB.open = false;\n    this.#showingB.content.enabled = false;\n    this.#showingB.setBaseColor(PRIMARY_COLOR);\n\n    this.#grid.changed();\n    this.#game.text.changed();\n    this.#spriteBatch.changed();\n\n    this.#showingA = null;\n    this.#showingB = null;\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #rows;\n  #columns;\n  #maxRows;\n  #maxColumns;\n  #w;\n  #h;\n  #grid;\n  #buttons;\n  #markButton;\n  #flagButton;\n  #mode;\n\n  static meta = [\n    'MEOWSTERPIECE',\n    WHITECAT_COLOR,\n    8,\n    3,\n    'CHA CHA',\n    'TODAY I DECIDED TO BE\\nAN ARTIST!!\\nHELP ME WITH THIS\\nPAINT BY NUMBER!\\n\\n\\nTHE CLUES WILL TELL YOU\\nHOW MANY BLOCKS SHOULD\\nBE PAINTED IN EACH ROW\\nAND IN EACH COLUMN!',\n    'SURE SURE, ARTIST TODAY,\\nSOMETHING ELSE TOMORROW!\\n\\n\\nTYPICAL KITTY...'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#rows = [[0], [1, 1], [2, 2], [5], [2, 1, 2, 1], [5, 2], [3, 1], [6, 2], [1, 5, 1], [8], [2, 4]];\n    this.#columns = [[1, 2], [4, 1, 1], [3, 6], [7], [3, 6], [4, 4], [1, 3], [2], [3, 1], [2, 3]];\n\n    this.#maxRows = Math.max(...this.#rows.map(row => row.length));\n    this.#maxColumns = Math.max(...this.#columns.map(column => column.length));\n\n    this.#w = this.#columns.length + this.#maxRows;\n    this.#h = this.#rows.length + this.#maxColumns;\n\n    const spacing = 2;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / this.#w - (spacing * (this.#w - 1) / this.#w), (game.renderer.h - 110) / this.#h - (spacing * (this.#h - 1) / this.#h)));\n\n    this.#grid = new Grid(game, 'center', 100, this.#w, this.#h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    for (let x = 0; x < this.#w; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (x < this.#maxRows || y < this.#maxColumns - this.#columns[x - this.#maxRows].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(game.text, this.#columns[x - this.#maxRows][y - (this.#maxColumns - this.#columns[x - this.#maxRows].length)], s * 2 / 3, HIGHLIGHT_COLOR);\n          cell.activate(false);\n        }\n      }\n    }\n\n    for (let y = 0; y < this.#w; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (y < this.#maxColumns || x < this.#maxRows - this.#rows[y - this.#maxColumns].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(game.text, this.#rows[y - this.#maxColumns][x - (this.#maxRows - this.#rows[y - this.#maxColumns].length)], this.#grid.s * 2 / 3, HIGHLIGHT_COLOR);\n          cell.activate(false);\n        }\n      }\n    }\n\n    this.#buttons = new Grid(game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#markButton = this.#buttons.sprites[0];\n    this.#markButton.write(game.text, 'O', 30, ACTIVE_COLOR);\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(game.text, 'X', 30, ACTIVE_COLOR);\n\n    this.#setMode('mark');\n\n    this.#grid.changed();\n  }\n\n  update() {\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      this.#setMode('mark');\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      this.#setMode('flag');\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    (cell.content || {}).enabled = false;\n\n    switch (this.#mode) {\n    case 'mark':\n      if (cell.state !== 'marked') {\n        cell.state = 'marked';\n        cell.setBaseColor(ACTIVE_COLOR);\n      } else {\n        cell.state = null;\n        cell.setBaseColor(PRIMARY_COLOR);\n      }\n      break;\n\n    case 'flag':\n      cell.setBaseColor(PRIMARY_COLOR);\n      if (cell.state !== 'flagged') {\n        cell.state = 'flagged';\n        cell.write(this.#game.text, 'X', this.#grid.s * 2 / 3, HIGHLIGHT_COLOR);\n      } else {\n        cell.state = null;\n      }\n      break;\n    }\n\n    this.#game.text.changed();\n\n    this.#checkGrid();\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode('flag');\n    } else if (button === this.#markButton) {\n      this.#setMode('mark');\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#markButton.activate(this.#mode !== 'mark');\n    this.#flagButton.activate(this.#mode !== 'flag');\n\n    this.#buttons.changed();\n  }\n\n  #checkGrid() {\n    let gridCorrect = 0;\n\n    for (let x = this.#maxRows; x < this.#w; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        this.#grid.cellAt(x, y).setBaseColor(INACTIVE_COLOR);\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let y = this.#maxColumns; y < this.#h; y++) {\n        if (this.#grid.cellAt(x, y).state === 'marked') {\n          current += 1;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== 'marked' || y === this.#h - 1) {\n          if ((current > 0 || y === this.#h - 1) && index < this.#columns[x - this.#maxRows].length) {\n            if (current > this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor(HIGHLIGHT_COLOR);\n            } else if (current === this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor(INACTIVE1_COLOR);\n              correct += 1;\n            }\n\n            index += 1;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#columns[x - this.#maxRows].length) {\n        gridCorrect += 1;\n      }\n    }\n\n    for (let y = this.#maxColumns; y < this.#h; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        this.#grid.cellAt(x, y).setBaseColor(INACTIVE_COLOR);\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let x = this.#maxRows; x < this.#w; x++) {\n        if (this.#grid.cellAt(x, y).state === 'marked') {\n          current += 1;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== 'marked' || x === this.#w - 1) {\n          if ((current > 0 || x === this.#w - 1) && index < this.#rows[y - this.#maxColumns].length) {\n            if (current > this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor(HIGHLIGHT_COLOR);\n            } else if (current === this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor(INACTIVE1_COLOR);\n              correct += 1;\n            }\n\n            index += 1;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#rows[y - this.#maxColumns].length) {\n        gridCorrect += 1;\n      }\n    }\n\n    if (gridCorrect === (this.#w - this.#maxRows) + (this.#h - this.#maxColumns)) {\n      this.#onwin();\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nimport Minigame from './Minigame';\nimport Meowsweeper from '../minigames/Meowsweeper';\nimport PawPawToe from '../minigames/PawPawToe';\nimport Sudocat from '../minigames/Sudocat';\nimport Meowmory from '../minigames/Meowmory';\nimport Meowsterpiece from '../minigames/Meowsterpiece';\n\nimport Matrix3 from '../Matrix3';\n\nexport default class {\n  #game;\n  #firstStart;\n  #grid;\n  #buttons;\n  #spriteBatch;\n  #minigameState;\n  #camY;\n  #startBlackCat;\n  #blackCat;\n  #blackCatArrived;\n  #titleShown;\n  #introOver;\n\n  init(game) {\n    this.#game = game;\n    this.#firstStart = game.firstStart;\n    game.firstStart = false;\n\n    this.#grid = new Grid(game, 'center', 100, 6, 15, 128, 0, 0, null, '', 2);\n    this.#grid.disabled = true;\n\n    this.#buttons = new Grid(game, 'center', 132, 3, 7, 128, 64, 64, (button) => this.#buttonClick(button), '', 1);\n\n    if (this.#firstStart) {\n      this.#buttons.disabled = true;\n      this.#camY = -game.renderer.h;\n      game.text.write('THIS IS A TRUE STORY\\n\\n\\nTHE CATS DEPICTED HERE\\nALL LIVE IN DUBLIN', 'center', 'center', 32, INACTIVE_COLOR, ['typing', 'shake']);\n      game.scheduleTimer(9000, () => {\n        this.#startBlackCat = true;\n        game.text.clear();\n      });\n    } else {\n      game.text.write('HELP THE OTHER CATS\\nIN THE BUILDING!!', 'center', 10, 32, ACTIVE_COLOR, ['typing', 'shake']);\n    }\n\n    this.#spriteBatch = new SpriteBatch(game);\n\n    const minigameClasses = [PawPawToe, Meowmory, Meowsweeper, Sudocat, Meowsterpiece];\n\n    for (let i = 0; i < 21; i++) {\n      if (minigameClasses[i] && (i == 0 || !this.#firstStart)) {\n        let [_, color, sx, type, ..._rest] = minigameClasses[i].meta;\n        this.#buttons.sprites[i].minigameClass = minigameClasses[i];\n        let sy = 73;\n        if (game.minigamesWon.has(minigameClasses[i])) {\n          this.#buttons.sprites[i].activate(false);\n          sx = 39;\n          sy = 39;\n          type = 1;\n        }\n        this.#spriteBatch.add(this.#buttons.sprites[i].x + sx, this.#buttons.sprites[i].y + sy, 50, type, color);\n      } else {\n        this.#buttons.sprites[i].activate(false);\n      }\n    }\n\n    this.#blackCat = this.#spriteBatch.add('center', game.renderer.h, 900, 1, VOID_COLOR);\n\n    for (let i = 0; i < this.#buttons.sprites.length; i++) {\n      const button = this.#buttons.sprites[i];\n      if (game.minigamesWon.has(button.minigameClass)) {\n        button.activate(false);\n      }\n    }\n  }\n\n  update() {\n    if (this.#firstStart) {\n      if (this.#camY < 0) {\n        this.#camY += 3;\n        if (this.#camY >= 0) {\n          this.#camY = 0;\n          this.#game.shake(200);\n        }\n        this.#game.renderer.projection = Matrix3.ortho(0, this.#game.renderer.w, this.#game.renderer.h + this.#camY, this.#camY);\n      } else if (this.#startBlackCat && !this.#blackCatArrived) {\n        this.#blackCat.y -= 3;\n        if (this.#blackCat.y <= this.#game.renderer.h / 2 - this.#blackCat.s / 2) {\n          this.#blackCatArrived = true;\n          this.#blackCat.y = this.#game.renderer.h / 2 - this.#blackCat.s / 2;\n          const title = this.#game.text.write('  A VOIDING\\nYOUR PROBLEMS', 'center', 'center', 48, null, ['sine']);\n          this.#game.text.write('  A GAME BY\\nATTILA HORVATH', 'center', title.y + 180, 36, WHITECAT_COLOR, ['shake']);\n          this.#game.text.write('TAP TO BEGIN', 'center', title.y + 280, 36, INACTIVE_COLOR, ['typing', 'shake'], 1200);\n          this.#game.shake(500);\n        }\n        this.#blackCat.x = this.#game.renderer.w / 2 - this.#blackCat.s / 2;\n        this.#spriteBatch.changed();\n      } else if (!this.#titleShown) {\n        if (this.#game.input.click()) {\n          this.#game.input.clickRead = true;\n          this.#game.text.clear();\n          const firstLine = this.#game.text.write('SO, I HEARD THIS\\nIS THE DOMAIN OF', 'center',  'center', 28, INACTIVE_COLOR, ['typing', 'shake']);\n          this.#game.text.write('QUEEN KARA', 'center', firstLine.y + 60, 32, TABBYCAT_COLOR, ['typing', 'sine'], 4000);\n          this.#game.text.write(\"I HOPE SHE'LL ACCEPT ME\\nIF I HELP THE OTHER CATS...\", 'center', firstLine.y + 120, 28, INACTIVE_COLOR, ['typing', 'shake'], 6000);\n          this.#titleShown = true;\n        }\n      } else if (!this.#introOver) {\n        if (this.#game.input.click()) {\n          this.#game.input.clickRead = true;\n          this.#blackCat.hidden = true;\n          this.#spriteBatch.changed();\n          this.#game.text.clear();\n          this.#introOver = true;\n          this.#game.text.write(\"LET'S START WITH THIS\\nGENIUS ORANGE CAT HERE!\", 'center', 10, 32, ACTIVE_COLOR, ['typing', 'shake']);\n        }\n      } else {\n        this.#buttons.disabled = false;\n      }\n    }\n\n    this.#grid.update();\n    this.#spriteBatch.update();\n\n    if (this.#minigameState) {\n      return this.#minigameState;\n    } else {\n      this.#buttons.update();\n    }\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#minigameState = new Minigame(button.minigameClass);\n    }\n  }\n}\n","import Game from \"./Game\";\n\nconst game = new Game();\n\nfunction step(timestamp) {\n  requestAnimationFrame(step);\n  game.step(timestamp);\n}\n\nrequestAnimationFrame(step);\n","import Renderer from './Renderer';\nimport Input from './Input';\n\nimport Text from './Text';\nimport SpriteBatch from './SpriteBatch';\nimport Select from './states/Select';\nimport Minigame from './states/Minigame';\nimport Matrix3 from './Matrix3';\nimport PawPawToe from './minigames/PawPawToe';\nimport Meowmory from './minigames/Meowmory';\n\nexport default class {\n  #started;\n  #timers;\n  #backgroundBatch;\n  #spriteBatch;\n  #cursor;\n  #state;\n  #nextState;\n  #shakeScreen;\n\n  constructor() {\n    this.renderer = new Renderer(() => {\n      if (!this.#started) {\n        for (let i = 0; i < 128; i++) {\n          const type = Math.floor(Math.random() * 15);\n          let color = null;\n          if (type < 5) {\n            color = BLACKCAT_COLOR + Math.floor(Math.random() * 5);\n          }\n          const sprite = this.#backgroundBatch.add(Math.random() * this.renderer.w, Math.random() * this.renderer.h, 16 + Math.random() * 100, type, color);\n          sprite.a = 0.33;\n          sprite.dx = -0.5 + Math.random();\n          sprite.dy = -0.5 + Math.random();\n          sprite.ds = -0.1 + Math.random() * 0.2;\n        }\n\n        this.#state = new Select();\n        // this.#state = new Minigame(Meowmory);\n        this.#state.init(this);\n        this.#started = true;\n      }\n    });\n\n    this.input = new Input(this);\n    this.#timers = [];\n\n    this.#backgroundBatch = new SpriteBatch(this, true);\n\n    this.text = new Text(this);\n    this.#spriteBatch = new SpriteBatch(this);\n    this.#cursor = this.#spriteBatch.add(0, 0, 26, 0, BLACKCAT_COLOR);\n    this.#cursor.hidden = true;\n\n    this.minigamesWon = new Set();\n\n    this.firstStart = true;\n  }\n\n  step(timestamp) {\n    this.timestamp = timestamp;\n    this.#update(timestamp);\n    this.#draw();\n\n    if (this.#nextState) {\n      this.text.clear();\n      this.#state = this.#nextState;\n      this.#state.init(this);\n      this.#nextState = null;\n    }\n  }\n\n  scheduleTimer(delay, onexpire, repeat) {\n    const timer = { start: this.timestamp ?? 0, delay: delay, onexpire: onexpire, repeat: repeat };\n    this.#timers.push(timer);\n    return timer;\n  }\n\n  shake(duration) {\n    navigator.vibrate(duration);\n    this.#shakeScreen = true;\n    this.scheduleTimer(duration, () => this.#shakeScreen = false);\n  }\n\n  #update(timestamp) {\n    if (this.#shakeScreen) {\n      this.renderer.view[6] = Math.random() * 7;\n      this.renderer.view[7] = Math.random() * 7;\n    } else {\n      this.renderer.view[6] = 0;\n      this.renderer.view[7] = 0;\n    }\n\n    this.input.update();\n\n    if (this.input.mouse && this.#cursor.hidden) {\n      this.#cursor.hidden = false;\n      this.#spriteBatch.changed();\n    }\n\n    if (this.input.moved) {\n      this.#cursor.x = this.input.x - 6;\n      this.#cursor.y = this.input.y - 6;\n\n      this.#spriteBatch.changed();\n    }\n\n    for (const sprite of this.#backgroundBatch.sprites) {\n      sprite.x += sprite.dx;\n      sprite.y += sprite.dy;\n      sprite.s += sprite.ds;\n\n      if (sprite.x < 0) {\n        sprite.dx = -sprite.dx;\n        sprite.x = 0;\n      }\n\n      if (sprite.y < 0) {\n        sprite.dy = -sprite.dy;\n        sprite.y = 0;\n      }\n\n      if (sprite.x > this.renderer.w) {\n        sprite.dx = -sprite.dx;\n        sprite.x = this.renderer.w;\n      }\n\n      if (sprite.y > this.renderer.h) {\n        sprite.dy = -sprite.dy;\n        sprite.y = this.renderer.h;\n      }\n\n      if (sprite.s < 16) {\n        sprite.ds = -sprite.ds;\n        sprite.s = 16;\n      }\n\n      if (sprite.s > 116) {\n        sprite.ds = -sprite.ds;\n        sprite.s = 116;\n      }\n    }\n\n    this.#backgroundBatch.changed();\n    this.#backgroundBatch.update();\n\n    this.#updateTimers(timestamp);\n\n    if (this.#state) {\n      this.#nextState = this.#state.update();\n    }\n\n    this.text.update(timestamp);\n    this.#spriteBatch.update();\n  }\n\n  #updateTimers(timestamp) {\n    for (const timer of this.#timers) {\n      if (timestamp >= timer.start + timer.delay && !timer.disabled) {\n        if (timer.repeat) {\n          timer.start = timestamp;\n        } else {\n          timer.expired = true;\n        }\n\n        if (timer.onexpire) {\n          timer.onexpire();\n        }\n      }\n    }\n\n    if (this.#timers.some(timer => timer.expired || timer.disabled)) {\n      this.#timers = this.#timers.filter(timer => !timer.expired && !timer.disabled);\n    }\n  }\n\n  #draw() {\n    this.renderer.clear();\n\n    const currProjection = this.renderer.projection;\n\n    this.renderer.projection = Matrix3.ortho(0, this.renderer.w, this.renderer.h, 0);\n    this.#backgroundBatch.draw();\n    this.renderer.projection = currProjection;\n\n    if (this.#state) {\n      this.#state.draw();\n    }\n\n    this.renderer.projection = Matrix3.ortho(0, this.renderer.w, this.renderer.h, 0);\n    this.text.draw();\n    this.#spriteBatch.draw();\n    this.renderer.projection = currProjection;\n  }\n}\n"],"names":["Matrix3","Float32Array","identity","ortho","left","right","bottom","top","Shader","program","viewUniformLocation","projectionUniformLocation","texUniformLocation","imageSizeUniformLocation","constructor","gl","vertexShaderSource","fragmentShaderSource","vertexShader","this","compileShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","bind","bindAttribLocation","getUniformLocation","linkProgram","use","v","p","useProgram","setup","uniformMatrix3fv","uniform1i","uniform1f","type","source","shader","createShader","shaderSource","Renderer","onresize","shaders","textures","images","currentShader","currentVao","currentTexture","document","body","style","margin","padding","canvas","createElement","display","width","height","cursor","touchAction","ResizeObserver","w","clientWidth","h","clientHeight","horizontal","viewport","observe","box","appendChild","getContext","clearColor","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","quadBuffer","createQuadBuffer","Map","name","cachedShader","get","set","createVao","vao","createVertexArray","bindVertexArray","createBuffer","data","dynamic","buffer","updateBuffer","useBuffer","bufferData","ARRAY_BUFFER","DYNAMIC_DRAW","STATIC_DRAW","bindBuffer","a","location","size","stride","offset","divisor","vertexAttribPointer","FLOAT","enableVertexAttribArray","vertexAttribDivisor","loadTexture","smooth","path","cachedTexture","texture","createTexture","prepareTexture","imageIndex","length","image","Image","src","onload","clear","COLOR_BUFFER_BIT","d","vertexCount","instanceCount","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","drawArraysInstanced","TRIANGLES","drawArrays","texture0","texture2d","texImage2D","texParameteri","rgba","RGBA","unsignedByte","UNSIGNED_BYTE","filter","LINEAR","NEAREST","Uint8Array","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","Input","newKeyPresses","newKeyReleases","newPress","newRelease","lastX","lastY","game","renderer","addEventListener","event","mouse","pointerType","x","offsetX","y","offsetY","code","u","moved","press","release","keyPresses","newKeyPress","newKeyPressValue","Object","entries","keyReleases","newKeyRelease","newKeyReleaseValue","clickRead","click","Sprite","s","color","angle","enabled","hidden","cc","attributes","r","g","b","cb","baseColor","index","activate","active","inactive","text","content","animations","delay","toString","spriteBatch","add","SpriteBatch","instanceBuffer","spritesChanged","textureName","sprites","c","sprite","push","map","flat","TextSegment","time","begin","timestamp","updated","animation","i","baseY","Math","sin","baseX","random","Text","segments","super","floor","max","split","segment","currX","currY","charCodeAt","Grid","spacingX","spacingY","onclick","pressed","gridY","gridX","cell","fullW","fullH","disabled","input","newActive","cellAtPosition","cellAt","indexAtPosition","relX","relY","indexX","trunc","indexY","Minigame","minigameClass","minigame","buttons","cat","leftPaw","rightPaw","catNameText","catTextText","exitButton","exit","catMet","started","init","button","buttonClick","_title","_sx","_type","cn","ct","_response","meta","title","_color","_catName","_catText","cr","Select","win","lose","tt","minigamesWon","Meowsweeper","onwin","onlose","mines","fontSize","grid","digButton","flagButton","mode","static","min","setMode","start","open","mine","flagged","available","availableCell","abs","mineCell","splice","dy","dx","shake","opened","every","PawPawToe","timer","over","symbol","mark","checkGrid","symbolCounts","Sudocat","grids","cellSize","digit","gridSize","gridSpacing","spacing","startX","setGrid","selectDigit","gridAt","starts","checkCells","valid","resetCells","checkRow","checkColumn","digitCounts","digitCount","Meowmory","showingA","showingB","slice","indexA","cellA","indexB","cellB","secret","cancelShowing","found","Meowsterpiece","rows","columns","maxRows","maxColumns","markButton","row","column","state","gridCorrect","current","correct","firstStart","minigameState","camY","startBlackCat","blackCat","blackCatArrived","titleShown","introOver","minigameClasses","_","sx","_rest","sy","has","firstLine","timers","backgroundBatch","nextState","shakeScreen","ds","Set","step","onexpire","repeat","duration","navigator","vibrate","updateTimers","expired","some","currProjection","requestAnimationFrame"],"mappings":"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"}