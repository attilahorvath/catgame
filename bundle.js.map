{"version":3,"file":"bundle.js","sources":["src/Matrix3.js","src/Shader.js","src/Renderer.js","src/Input.js","src/Sprite.js","src/SpriteBatch.js","shaders/sprite.vert","shaders/sprite.frag","src/TextSegment.js","src/Text.js","src/Grid.js","src/states/Minigame.js","src/minigames/Meowsweeper.js","src/minigames/PawPawToe.js","src/minigames/Sudocat.js","src/minigames/Meowmory.js","src/minigames/Jigspaw.js","src/states/Select.js","src/index.js","src/Game.js"],"sourcesContent":["export default class Matrix3 extends Float32Array {\n  static projection(width, height) {\n    return new Matrix3([\n      2.0 / width, 0.0, 0.0,\n      0.0, -2.0 / height, 0.0,\n      -1.0, 1.0, 1.0,\n    ]);\n  }\n}\n","export default class {\n  #program;\n  #projectionUniformLocation;\n  #texUniformLocation;\n  #imageSizeUniformLocation;\n\n  constructor(gl, vertexShaderSource, fragmentShaderSource) {\n    const vertexShader = this.#compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource)\n    const fragmentShader = this.#compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n    this.#program = gl.createProgram();\n\n    gl.attachShader(this.#program, vertexShader);\n    gl.attachShader(this.#program, fragmentShader);\n\n    gl.bindAttribLocation(this.#program, POSITION_ATTRIBUTE_LOCATION, 'vertexPosition');\n    gl.bindAttribLocation(this.#program, COLOR_ATTRIBUTE_LOCATION, 'vertexColor');\n    gl.bindAttribLocation(this.#program, TEX_COORD_ATTRIBUTE_LOCATION, 'vertexTexCoord');\n\n    gl.bindAttribLocation(this.#program, SPRITE_POSITION_ATTRIBUTE_LOCATION, 'spritePosition');\n    gl.bindAttribLocation(this.#program, SPRITE_SIZE_ATTRIBUTE_LOCATION, 'spriteSize');\n    gl.bindAttribLocation(this.#program, SPRITE_TYPE_ATTRIBUTE_LOCATION, 'spriteType');\n    gl.bindAttribLocation(this.#program, SPRITE_COLOR_ATTRIBUTE_LOCATION, 'spriteColor');\n    gl.bindAttribLocation(this.#program, SPRITE_ANGLE_ATTRIBUTE_LOCATION, 'spriteAngle');\n\n    gl.linkProgram(this.#program);\n\n    this.#projectionUniformLocation = gl.getUniformLocation(this.#program, 'projection');\n    this.#texUniformLocation = gl.getUniformLocation(this.#program, 'tex');\n    this.#imageSizeUniformLocation = gl.getUniformLocation(this.#program, 'imageSize');\n\n    console.log(gl.getProgramInfoLog(this.#program));\n  }\n\n  use(gl, projection) {\n    gl.useProgram(this.#program);\n\n    this.setUniforms(gl, projection);\n  }\n\n  setUniforms(gl, projection) {\n    if (this.#projectionUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#projectionUniformLocation, false, projection);\n    }\n\n    if (this.#texUniformLocation != null) {\n      gl.uniform1i(this.#texUniformLocation, 0);\n    }\n\n    if (this.#imageSizeUniformLocation != null) {\n      gl.uniform1f(this.#imageSizeUniformLocation, this.imageSize);\n    }\n  }\n\n  #compileShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    console.log(gl.getShaderInfoLog(shader));\n\n    return shader;\n  }\n}\n","import Matrix3 from './Matrix3';\n\nimport Shader from './Shader';\n\nexport default class {\n  #gl;\n  #shaders;\n  #textures;\n  #images;\n  #projection;\n  #currentShader;\n  #currentVao;\n  #currentTexture;\n\n  constructor() {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = CANVAS_WIDTH;\n    this.canvas.height = CANVAS_HEIGHT;\n    this.canvas.style.cursor = 'none';\n    this.canvas.style.touchAction = 'none';\n\n    document.body.appendChild(this.canvas);\n\n    this.#gl = this.canvas.getContext('webgl2');\n\n    this.#gl.viewport(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    this.#gl.clearColor(0.68, 0.68, 0.94, 1.0);\n\n    this.#gl.enable(this.#gl.BLEND);\n    this.#gl.blendFunc(this.#gl.SRC_ALPHA, this.#gl.ONE_MINUS_SRC_ALPHA);\n\n    this.quadBuffer = this.#createQuadBuffer();\n\n    this.#shaders = new Map();\n    this.#textures = new Map();\n    this.#images = [];\n\n    this.#projection = Matrix3.projection(CANVAS_WIDTH, CANVAS_HEIGHT);\n  }\n\n  createShader(name, vertexShaderSource, fragmentShaderSource) {\n    const cachedShader = this.#shaders.get(name);\n\n    if (cachedShader) {\n      return cachedShader;\n    }\n\n    const shader = new Shader(this.#gl, vertexShaderSource, fragmentShaderSource);\n    this.#shaders.set(name, shader);\n\n    return shader;\n  }\n\n  createVao() {\n    const vao = this.#gl.createVertexArray();\n\n    this.#gl.bindVertexArray(vao);\n\n    return vao;\n  }\n\n  createBuffer(data, dynamic) {\n    const buffer = this.#gl.createBuffer();\n\n    this.updateBuffer(buffer, data, dynamic);\n\n    return buffer;\n  }\n\n  updateBuffer(buffer, data, dynamic) {\n    this.useBuffer(buffer);\n\n    this.#gl.bufferData(this.#gl.ARRAY_BUFFER, data, dynamic ? this.#gl.DYNAMIC_DRAW : this.#gl.STATIC_DRAW);\n  }\n\n  useBuffer(buffer) {\n    this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, buffer);\n  }\n\n  setAttribute(location, size, stride, offset, divisor) {\n    this.#gl.vertexAttribPointer(location, size, this.#gl.FLOAT, false, stride, offset);\n    this.#gl.enableVertexAttribArray(location);\n\n    if (divisor != null) {\n      this.#gl.vertexAttribDivisor(location, divisor);\n    }\n  }\n\n  loadTexture(path, smooth) {\n    const cachedTexture = this.#textures.get(path);\n\n    if (cachedTexture) {\n      return cachedTexture;\n    }\n\n    const texture = this.#gl.createTexture();\n    this.#prepareTexture(texture, null, smooth);\n\n    const imageIndex = this.#images.length;\n    const image = new Image();\n\n    image.src = path;\n    image.onload = () => this.#prepareTexture(texture, imageIndex, smooth);\n\n    this.#textures.set(path, texture);\n    this.#images[imageIndex] = image;\n\n    return texture;\n  }\n\n  clear() {\n    this.#gl.clear(this.#gl.COLOR_BUFFER_BIT | this.#gl.DEPTH_BUFFER_BIT);\n  }\n\n  draw(shader, vao, texture, vertexCount, instanceCount) {\n    if (shader !== this.#currentShader) {\n      shader.use(this.#gl, this.#projection);\n      this.#currentShader = shader;\n    } else {\n      this.#currentShader.setUniforms(this.#gl, this.#projection);\n    }\n\n    if (vao !== this.#currentVao) {\n      this.#gl.bindVertexArray(vao);\n      this.#currentVao = vao;\n    }\n\n    if (texture !== this.#currentTexture) {\n      this.#gl.activeTexture(this.#gl.TEXTURE0);\n      this.#gl.bindTexture(this.#gl.TEXTURE_2D, texture);\n      this.#currentTexture = texture;\n    }\n\n    if (instanceCount != null) {\n      this.#gl.drawArraysInstanced(this.#gl.TRIANGLES, 0, vertexCount, instanceCount);\n    } else {\n      this.#gl.drawArrays(this.#gl.TRIANGLES, 0, vertexCount);\n    }\n  }\n\n  #createQuadBuffer() {\n    return this.createBuffer(new Float32Array([\n      0.0, 0.0, 0.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 0.0, 1.0, 0.0,\n\n      1.0, 0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 1.0, 1.0, 1.0,\n    ]), false);\n  }\n\n  #prepareTexture(texture, imageIndex, smooth) {\n    this.#gl.activeTexture(this.#gl.TEXTURE0);\n    this.#gl.bindTexture(this.#gl.TEXTURE_2D, texture);\n\n    this.#gl.pixelStorei(this.#gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n    if (imageIndex != null) {\n      this.#gl.texImage2D(this.#gl.TEXTURE_2D, 0, this.#gl.RGBA, this.#gl.RGBA, this.#gl.UNSIGNED_BYTE, this.#images[imageIndex]);\n    } else {\n      this.#gl.texImage2D(this.#gl.TEXTURE_2D, 0, this.#gl.RGBA, 1, 1, 0, this.#gl.RGBA, this.#gl.UNSIGNED_BYTE, new Uint8Array([255, 0, 255, 255,]));\n    }\n\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_WRAP_S, this.#gl.CLAMP_TO_EDGE);\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_WRAP_T, this.#gl.CLAMP_TO_EDGE);\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_MIN_FILTER, smooth ? this.#gl.LINEAR : this.#gl.NEAREST);\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_MAG_FILTER, smooth ? this.#gl.LINEAR : this.#gl.NEAREST);\n  }\n}\n","export default class {\n  #newKeyPresses;\n  #newKeyReleases;\n  #newPress;\n  #newRelease;\n  #lastX;\n  #lastY;\n\n  constructor(game) {\n    this.#newKeyPresses = {};\n    this.#newKeyReleases = {};\n\n    game.renderer.canvas.addEventListener('pointermove', event => {\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n    });\n\n    game.renderer.canvas.addEventListener('pointerdown', event => {\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newPress = true;\n    });\n\n    game.renderer.canvas.addEventListener('pointerup', event => {\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newRelease = true;\n    });\n\n    addEventListener('keydown', event => {\n      this.#newKeyPresses[event.code] = true;\n    });\n\n    addEventListener('keyup', event => {\n      this.#newKeyReleases[event.code] = true;\n    });\n  }\n\n  update() {\n    if (this.x !== this.#lastX || this.y !== this.#lastY) {\n      this.#lastX = this.x;\n      this.#lastY = this.y;\n      this.moved = true;\n    }\n\n    this.press = false;\n\n    if (this.#newPress) {\n      this.press = true;\n      this.#newPress = false;\n    }\n\n    this.release = false;\n\n    if (this.#newRelease) {\n      this.release = true;\n      this.#newRelease = false;\n    }\n\n    this.keyPresses = {};\n\n    for (const [newKeyPress, newKeyPressValue] of Object.entries(this.#newKeyPresses)) {\n      if (newKeyPressValue) {\n        this.keyPresses[newKeyPress] = true;\n        this.#newKeyPresses[newKeyPress] = false;\n      }\n    }\n\n    this.keyReleases = {};\n\n    for (const [newKeyRelease, newKeyReleaseValue] of Object.entries(this.#newKeyReleases)) {\n      if (newKeyReleaseValue) {\n        this.keyReleases[newKeyRelease] = true;\n        this.#newKeyReleases[newKeyRelease] = false;\n      }\n    }\n  }\n}\n","export default class {\n  constructor(x, y, size, type, color) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.type = type;\n    this.angle = 0.0;\n    this.enabled = true;\n    this.hidden = false;\n    this.a = 1.0;\n\n    this.setColor(color);\n  }\n\n  attributes() {\n    return [this.x, this.y, this.size, this.type, this.r, this.g, this.b, this.a, this.angle];\n  }\n\n  setBaseColor(color) {\n    this.baseColor = color;\n    this.setColor(color);\n  }\n\n  setColor(color) {\n    switch (color) {\n    case 'primary':\n      this.r = 0.85;\n      this.g = 0.86;\n      this.b = 1.0;\n      break;\n    case 'background':\n      this.r = 0.68;\n      this.g = 0.68;\n      this.b = 0.94;\n    case 'highlight':\n      this.r = 0.76;\n      this.g = 0.55;\n      this.b = 0.58;\n      break;\n    case 'active':\n      this.r = 0.65;\n      this.g = 0.4;\n      this.b = 0.44;\n      break;\n    case 'inactive':\n      this.r = 0.34;\n      this.g = 0.34;\n      this.b = 0.46;\n      break;\n\n    case 'blackcat':\n      this.r = 0.33;\n      this.g = 0.33;\n      this.b = 0.33;\n      break;\n    case 'orangecat':\n      this.r = 0.7;\n      this.g = 0.45;\n      this.b = 0.08;\n      break;\n\n    // TODO: Choose darker primary colors that are easily readable on the primary background\n    case 'primary1':\n      this.#fromRGB(144, 168, 195);\n      break;\n    case 'primary2':\n      this.#fromRGB(70, 157, 137);\n      break;\n    case 'primary3':\n      this.#fromRGB(181, 201, 154);\n      break;\n    case 'primary4':\n      this.#fromRGB(0, 166, 251);\n      break;\n    case 'primary5':\n      this.#fromRGB(76, 201, 240);\n      break;\n    case 'primary6':\n      this.#fromRGB(244, 202, 224);\n      break;\n    case 'primary7':\n      this.#fromRGB(229, 0, 164);\n      break;\n    case 'primary8':\n      this.#fromRGB(242, 0, 137);\n      break;\n    case 'primary9':\n      this.#fromRGB(255, 255, 255);\n      break;\n    case 'primary10':\n      this.r = 1.0;\n      this.g = 0.8;\n      this.b = 0.94;\n      break;\n\n    case 'inactive1':\n      this.#fromRGB(144, 168, 195);\n      break;\n    case 'inactive2':\n      this.#fromRGB(70, 157, 137);\n      break;\n    case 'inactive3':\n      this.#fromRGB(181, 201, 154);\n      break;\n    case 'inactive4':\n      this.#fromRGB(0, 166, 251);\n      break;\n    case 'inactive5':\n      this.#fromRGB(76, 201, 240);\n      break;\n    case 'inactive6':\n      this.#fromRGB(244, 202, 224);\n      break;\n    case 'inactive7':\n      this.#fromRGB(229, 0, 164);\n      break;\n    case 'inactive8':\n      this.#fromRGB(242, 0, 137);\n      break;\n    case 'inactive9':\n      this.#fromRGB(255, 255, 255);\n      break;\n    case 'inactive10':\n      this.r = 1.0;\n      this.g = 0.8;\n      this.b = 0.94;\n      break;\n\n    default:\n      this.r = 1.0;\n      this.g = 1.0;\n      this.b = 1.0;\n      break;\n    }\n  }\n\n  activate(active) {\n    this.inactive = !active;\n    this.setColor(active ? (this.baseColor || 'primary') : 'inactive');\n  }\n\n  write(text, content, size, color = 'active') {\n    (this.content || {}).enabled = false;\n    this.content = text.write(content.toString(), this.x + (this.size - size) / 2, this.y + (this.size - size) / 2, size, color);\n  }\n\n  #fromRGB(r, g, b) {\n    this.r = r / 255.0;\n    this.g = g / 255.0;\n    this.b = b / 255.0;\n  }\n}\n","import vertexShaderSource from '../shaders/sprite.vert';\nimport fragmentShaderSource from '../shaders/sprite.frag';\n\nimport Sprite from './Sprite';\n\nexport default class {\n  #game;\n  #imageSize;\n  #shader;\n  #vao;\n  #instanceBuffer;\n  #texture;\n  #spritesChanged;\n\n  constructor(game, texturePath, imageSize, smooth) {\n    this.#game = game;\n    this.#imageSize = imageSize;\n\n    this.#shader = this.#game.renderer.createShader('sprite', vertexShaderSource, fragmentShaderSource);\n\n    this.#vao = this.#game.renderer.createVao();\n\n    this.#game.renderer.useBuffer(this.#game.renderer.quadBuffer);\n\n    this.#game.renderer.setAttribute(POSITION_ATTRIBUTE_LOCATION, 2, 16, 0);\n    this.#game.renderer.setAttribute(TEX_COORD_ATTRIBUTE_LOCATION, 2, 16, 8);\n\n    this.#instanceBuffer = this.#game.renderer.createBuffer(new Float32Array(), true);\n\n    this.#game.renderer.setAttribute(SPRITE_POSITION_ATTRIBUTE_LOCATION, 2, 36, 0, 1);\n    this.#game.renderer.setAttribute(SPRITE_SIZE_ATTRIBUTE_LOCATION, 1, 36, 8, 1);\n    this.#game.renderer.setAttribute(SPRITE_TYPE_ATTRIBUTE_LOCATION, 1, 36, 12, 1);\n    this.#game.renderer.setAttribute(SPRITE_COLOR_ATTRIBUTE_LOCATION, 4, 36, 16, 1);\n    this.#game.renderer.setAttribute(SPRITE_ANGLE_ATTRIBUTE_LOCATION, 1, 36, 32, 1);\n\n    this.#texture = this.#game.renderer.loadTexture(texturePath, smooth);\n\n    this.sprites = [];\n    this.changed();\n  }\n\n  addSprite(x, y, size, type, color) {\n    const sprite = new Sprite(x, y, size, type, color);\n\n    this.sprites.push(sprite);\n    this.changed();\n\n    return sprite;\n  }\n\n  changed() {\n    this.#spritesChanged = true;\n  }\n\n  update() {\n    if (this.#spritesChanged) {\n      this.sprites = this.sprites.filter(sprite => sprite.enabled);\n\n      this.#game.renderer.updateBuffer(this.#instanceBuffer, new Float32Array(\n        this.sprites\n            .filter(sprite => sprite.enabled && !sprite.hidden)\n            .map(sprite => sprite.attributes())\n            .flat()\n      ), true);\n\n      this.#spritesChanged = false;\n    }\n  }\n\n  draw() {\n    this.#shader.imageSize = this.#imageSize;\n    this.#game.renderer.draw(this.#shader, this.#vao, this.#texture, 6, this.sprites.length);\n  }\n}\n","#version 300 es\n\nuniform mat3 projection;\nuniform float imageSize;\n\nuniform sampler2D tex;\n\nin vec2 vertexPosition;\nin vec2 vertexTexCoord;\n\nin vec2 spritePosition;\nin float spriteSize;\nin float spriteType;\nin vec4 spriteColor;\nin float spriteAngle;\n\nout vec2 texCoord;\nout vec4 tint;\n\nvoid main() {\n  vec2 texOffset = vec2(imageSize / float(textureSize(tex, 0)),\n                        imageSize / float(textureSize(tex, 0).y));\n\n  texCoord = vec2(texOffset.x, 0.0) * spriteType + vertexTexCoord * texOffset;\n  tint = spriteColor;\n  // TODO: Calculate rotation based on spriteAngle\n  gl_Position = vec4(projection * vec3(vertexPosition * spriteSize + spritePosition, 1.0), 1.0);\n}\n","#version 300 es\n\nprecision highp float;\n\nuniform sampler2D tex;\n\nin vec2 texCoord;\nin vec4 tint;\n\nout vec4 fragmentColor;\n\nvoid main() {\n  fragmentColor = texture(tex, texCoord) * tint;\n}\n","export default class {\n  constructor(text, x, y, size, color) {\n    this.text = text;\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.color = color;\n\n    this.sprites = [];\n    this.enabled = true;\n  }\n}\n","import SpriteBatch from './SpriteBatch';\nimport TextSegment from './TextSegment';\n\nexport default class extends SpriteBatch {\n  #segments;\n\n  constructor(game) {\n    super(game, 'textures/font.png', LETTER_SIZE);\n\n    this.#segments = [];\n  }\n\n  write(text, x, y, size, color = 'active') {\n    const segment = new TextSegment(text, x, y, size, color);\n\n    let currX = x;\n    let currY = y;\n\n    for (const c of text) {\n      let type;\n\n      if (c === '\\n') {\n        currY += size;\n        currX = x;\n\n        continue;\n      }\n\n      if (c >= 'A' && c <= 'Z') {\n        type = c.charCodeAt(0) - 'A'.charCodeAt(0);\n      } else if (c >= '0' && c <= '9') {\n        type = 26 + c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n\n      if (type != null) {\n        segment.sprites.push(this.addSprite(currX, currY, size, type, color));\n      }\n\n      currX += size;\n    }\n\n    this.#segments.push(segment);\n    this.changed();\n\n    return segment;\n  }\n\n  clear() {\n    for (const segment of this.#segments) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = [];\n    this.changed();\n  }\n\n  update() {\n    for (const segment of this.#segments.filter(segment => !segment.enabled)) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = this.#segments.filter(segment => segment.enabled);\n\n    super.update();\n  }\n}\n","import SpriteBatch from './SpriteBatch';\n\nexport default class extends SpriteBatch {\n  #game;\n  #cellSize;\n  #spacingX;\n  #spacingY;\n  #onrelease;\n  #color;\n  #active;\n  #pressed;\n\n  constructor(game, x, y, width, height, cellSize, spacingX, spacingY, onrelease, color = 'primary') {\n    super(game, 'textures/cells.png', CELL_SIZE, true);\n\n    this.#game = game;\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height\n    this.#cellSize = cellSize;\n    this.#spacingX = spacingX ?? 0;\n    this.#spacingY = spacingY ?? 0;\n    this.#onrelease = onrelease;\n    this.#color = color;\n\n    for (let gridY = 0; gridY < height; gridY++) {\n      for (let gridX = 0; gridX < width; gridX++) {\n        const cell = this.addSprite(this.x + gridX * this.#fullW, this.y + gridY * this.#fullH, this.#cellSize, 0, color);\n        cell.setColor(color);\n        cell.gridX = gridX;\n        cell.gridY = gridY;\n      }\n    }\n  }\n\n  update() {\n    if (!this.disabled) {\n      if (this.#game.input.moved) {\n        let newActive = this.#cellAtPosition(this.#game.input.x, this.#game.input.y);\n        if (newActive?.inactive) {\n          newActive = null;\n        }\n\n        if (newActive !== this.#active && !this.#pressed) {\n          if (this.onactivate || this.#onrelease) {\n            if (!this.#active?.inactive) {\n              this.#active?.setColor(this.#active?.baseColor || this.#color);\n            }\n            newActive?.setColor('highlight');\n            this.changed();\n          }\n\n          // if (this.onactivate) {\n          //   this.onactivate(newActive, this.#active);\n          //   this.changed();\n          // }\n        }\n\n        this.#active = newActive;\n      }\n\n      if (this.#game.input.press) {\n        this.#pressed = this.#active;\n\n        if (this.onpress || this.#onrelease) {\n          this.#pressed?.setColor('active');\n          this.changed();\n        }\n\n        // if (this.onpress) {\n        //   this.onpress(this.#pressed);\n        //   this.changed();\n        // }\n      }\n\n      if (this.#game.input.release) {\n        if (this.#onrelease) {\n          this.#pressed?.setColor(this.#pressed?.baseColor || this.#color);\n          this.#onrelease(this.#active === this.#pressed ? this.#pressed : null, this.#pressed);\n          this.changed();\n        }\n\n        this.#pressed = null;\n      }\n    }\n\n    super.update();\n  }\n\n  cellAt(x, y) {\n    if (x >= 0 && x < this.width && y >= 0 && y < this.height) {\n      return this.sprites[this.width * y + x];\n    }\n  }\n\n  #cellAtPosition(x, y) {\n    const index = this.#indexAtPosition(x, y);\n\n    if (index) {\n      return this.cellAt(index[0], index[1]);\n    }\n  }\n\n  #indexAtPosition(x, y) {\n    const relX = x - this.x;\n    const relY = y - this.y;\n    const indexX = Math.trunc(relX / this.#fullW);\n    const indexY = Math.trunc(relY / this.#fullH);\n\n    if (relX >= 0 && relY >= 0 &&\n        relX - indexX * this.#fullW < this.#cellSize &&\n        relY - indexY * this.#fullH < this.#cellSize &&\n        indexX >= 0 && indexX < this.width && indexY >= 0 && indexY < this.height) {\n      return [indexX, indexY];\n    }\n  }\n\n  get #fullW() {\n    return this.#cellSize + this.#spacingX;\n  }\n\n  get #fullH() {\n    return this.#cellSize + this.#spacingY;\n  }\n}\n","import Grid from '../Grid';\nimport Select from './Select';\n\nexport default class {\n  #game;\n  #minigameClass;\n  #minigame;\n  #buttons;\n  #exitButton;\n  #exit;\n\n  constructor(game, minigameClass) {\n    this.#game = game;\n    this.#minigameClass = minigameClass;\n\n    this.#buttons = new Grid(this.#game, 750, 10, 1, 1, 32, 0, 0, (button) => this.#buttonRelease(button));\n\n    this.#exitButton = this.#buttons.sprites[0];\n\n    this.#setup();\n  }\n\n  update() {\n    if (this.#exit) {\n      this.#game.text.clear();\n      this.#exitButton.content.enabled = false;\n\n      return new Select(this.#game);\n    } else {\n      this.#minigame.update();\n      this.#buttons.update();\n\n      return this;\n    }\n  }\n\n  draw() {\n    this.#minigame.draw();\n    this.#buttons.draw();\n  }\n\n  #setup() {\n    this.#game.text.clear();\n    this.#minigame = new this.#minigameClass(this.#game, () => this.#win(), () => this.#lose());\n    \n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(this.#game.text, 'X', 24, 'active');\n  }\n\n  #win() {\n    this.#game.scheduleTimer(500, () => { alert('win'); this.#exit = true; });\n  }\n\n  #lose() {\n    this.#game.scheduleTimer(500, () => { this.#setup(); });\n  }\n\n  #buttonRelease(button) {\n    if (button === this.#exitButton) {\n      this.#exit = true;\n    }\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #grid;\n  #buttons;\n  #digButton;\n  #flagButton;\n  #mode;\n  #started;\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#grid = new Grid(this.#game, 100, 150, 10, 10, 32, 4, 4, (cell) => this.#release(cell));\n\n    this.#buttons = new Grid(this.#game, 10, 10, 2, 1, 32, 10, 0, (button) => this.#buttonRelease(button));\n\n    this.#digButton = this.#buttons.cellAt(0, 0);\n    this.#digButton.write(this.#game.text, 'O', 30, 'active');\n\n    this.#flagButton = this.#buttons.cellAt(1, 0);\n    this.#flagButton.write(this.#game.text, 'X', 30, 'active');\n\n    this.#setMode('dig');\n\n    this.#game.text.write('MEOWSWEEPER', 50, 50, 32, 'inactive');\n  }\n\n  update() {\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      this.#setMode('dig');\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      this.#setMode('flag');\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #release(cell) {\n    if (cell) {\n      switch (this.#mode) {\n      case 'dig':\n        if (!this.#started) {\n          this.#start(cell);\n        }\n\n        this.#open(cell.gridX, cell.gridY);\n\n        if (cell.mine) {\n          this.#grid.disabled = true;\n\n          this.#game.scheduleTimer(2000, () => {\n            for (const cell of this.#grid.sprites) {\n              (cell.content || {}).enabled = false;\n            }\n\n            this.#game.text.changed();\n\n            if (this.#onlose) {\n              this.#onlose();\n            }\n          });\n        }\n\n        break;\n      case 'flag':\n        if (cell.flagged) {\n          cell.flagged = false;\n          cell.content.enabled = false;\n          this.#game.text.changed();\n        } else {\n          cell.flagged = true;\n          cell.write(this.#game.text, 'X', 26, 'highlight');\n        }\n        break;\n      }\n    }\n  }\n\n  #start(cell) {\n    const available = this.#grid.sprites.filter(availableCell => availableCell !== cell && (Math.abs(availableCell.gridX - cell.gridX) > 1 || Math.abs(availableCell.gridY - cell.gridY) > 1));\n\n    for (let i = 0; i < 10; i++) {\n      const index = Math.floor(Math.random() * available.length);\n      const mineCell = available[index];\n      available.splice(index, 1);\n\n      mineCell.mine = true;\n    }\n\n    for (let y = 0; y < this.#grid.height; y++) {\n      for (let x = 0; x < this.#grid.width; x++) {\n        let cell = this.#grid.cellAt(x, y);\n        if (!cell.mine) {\n          cell.mines = 0;\n          for (let dy = -1; dy <= 1; dy++) {\n            for (let dx = -1; dx <= 1; dx++) {\n              if (this.#grid.cellAt(x + dx, y + dy)?.mine) {\n                cell.mines += 1;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.#started = true;\n  }\n\n  #open(x, y) {\n    const cell = this.#grid.cellAt(x, y);\n\n    if (cell?.flagged) {\n      cell.flagged = false;\n      cell.content.enabled = false;\n    }\n\n    if (cell?.enabled && !cell?.opened) {\n      cell.opened = true;\n\n      cell.activate(false);\n\n      if (cell.mines === 0) {\n        cell.hidden = true;\n\n        this.#open(x, y - 1);\n        this.#open(x, y + 1);\n        this.#open(x - 1, y);\n        this.#open(x + 1, y);\n      } else {\n        if (cell.mine) {\n          for (const mineCell of this.#grid.sprites.filter(cell => cell.mine)) {\n            mineCell.activate(false);\n            mineCell.write(this.#game.text, 'X', 26, 'inactive10');\n          }\n        } else {\n          cell.write(this.#game.text, cell.mines, 26, `inactive${cell.mines}`);\n        }\n      }\n    }\n\n    if (this.#grid.sprites.filter(cell => !cell.opened).every(cell => cell.mine)) {\n      if (this.#onwin) {\n        this.#onwin();\n      }\n    }\n  }\n\n  #buttonRelease(button) {\n    if (button === this.#flagButton) {\n      this.#setMode('flag');\n    } else if (button === this.#digButton) {\n      this.#setMode('dig');\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#digButton.activate(this.#mode !== 'dig');\n    this.#flagButton.activate(this.#mode !== 'flag');\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #grid;\n  #timer;\n  #over;\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#grid = new Grid(this.#game, 100, 150, 3, 3, 64, 20, 20, (cell) => this.#release(cell));\n  }\n\n  update() {\n    this.#grid.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n  }\n\n  #release(cell) {\n    if (cell && !cell.symbol) {\n      this.#mark(cell, 'X');\n\n      this.#grid.disabled = true;\n\n      this.#timer = this.#game.scheduleTimer(1000, () => {\n        if (!this.#over) {\n          const available = this.#grid.sprites.filter(sprite => !sprite.symbol);\n\n          if (available.length > 0) {\n            this.#mark(available[Math.floor(Math.random() * available.length)], 'O');\n\n            this.#grid.disabled = false;\n            this.#grid.changed();\n          }\n        }\n      });\n    }\n  }\n\n  #mark(cell, symbol) {\n    if (!this.#over) {\n      cell.symbol = symbol;\n\n      cell.activate(false);\n\n      cell.write(this.#game.text, symbol, 16, 'highlight');\n\n      this.#checkGrid();\n    }\n  }\n\n  #checkGrid() {\n    for (let y = 0; y < 3; y++) {\n      const symbolCounts = new Map();\n\n      for (let x = 0; x < 3; x++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    for (let x = 0; x < 3; x++) {\n      const symbolCounts = new Map();\n\n      for (let y = 0; y < 3; y++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(2, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(2, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(0, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(0, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n  }\n\n  #win(symbol) {\n    this.#over = true;\n    this.#grid.disabled = true;\n    (this.#timer || {}).disabled = true;\n\n    if (symbol === 'X') {\n      if (this.#onwin) {\n        this.#onwin();\n      }\n    } else if (symbol === 'O') {\n      if (this.#onlose) {\n        this.#onlose();\n      }\n    }\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #grids;\n  #buttons;\n  #digit;\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#grids = [];\n\n    for (let y = 0; y < 3; y++) {\n      for (let x = 0; x < 3; x++) {\n        const grid = new Grid(this.#game, 100 + x * 100, 100 + y * 100, 3, 3, 24, 5, 5, (cell) => this.#release(cell));\n        this.#grids.push(grid);\n      }\n    }\n\n    this.#buttons = new Grid(this.#game, 10, 10, 10, 1, 32, 10, 0, (button) => this.#buttonRelease(button));\n\n    for (let digit = 1; digit <= 10; digit++) {\n      const button = this.#buttons.sprites[digit - 1];\n      button.write(this.#game.text, digit <= 9 ? digit : 'X', 30, digit <= 9 ? `inactive${digit}` : 'active');\n      button.digit = digit <= 9 ? digit : null;\n    }\n\n    this.#setGrid();\n    this.#selectDigit(1);\n  }\n\n  update() {\n    for (let digit = 1; digit <= 9; digit++) {\n      if (this.#game.input.keyPresses[`Digit${digit}`]) {\n        this.#selectDigit(digit);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      if (this.#digit > 1) {\n        this.#selectDigit(this.#digit - 1);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      if (this.#digit < 9) {\n        this.#selectDigit(this.#digit + 1);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyX'] || this.#game.input.keyPresses['Digit0']) {\n      this.#selectDigit(null);\n    }\n\n    for (const grid of this.#grids) {\n      grid.update();\n    }\n\n    this.#buttons.update();\n  }\n\n  draw() {\n    for (const grid of this.#grids) {\n      grid.draw();\n    }\n\n    this.#buttons.draw();\n  }\n\n  #gridAt(x, y) {\n    return this.#grids[Math.floor(y / 3) * 3 + Math.floor(x / 3)];\n  }\n\n  #cellAt(x, y) {\n    return this.#gridAt(x, y).cellAt(x % 3, y % 3);\n  }\n\n  #setGrid() {\n    const starts = [\n      [\n        6, 8, 0, 1, 0, 0, 0, 9, 0,\n        0, 3, 4, 5, 0, 8, 0, 2, 0,\n        2, 1, 0, 0, 6, 0, 3, 0, 0,\n        5, 0, 0, 4, 0, 7, 0, 0, 9,\n        3, 4, 2, 9, 0, 0, 0, 0, 6,\n        0, 0, 7, 0, 8, 0, 5, 0, 0,\n        9, 2, 0, 8, 0, 0, 0, 5, 3,\n        0, 0, 3, 2, 0, 0, 9, 1, 8,\n        0, 0, 0, 3, 0, 0, 0, 6, 7,\n      ]\n    ];\n\n    const start = starts[Math.floor(Math.random() * starts.length)];\n\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const digit = start[y * 9 + x];\n        if (digit !== 0) {\n          const cell = this.#cellAt(x, y);\n          cell.activate(false);\n          cell.digit = digit;\n          cell.write(this.#game.text, digit, 20, `inactive${digit}`);\n        }\n      }\n    }\n  }\n\n  #release(cell) {\n    if (cell) {\n      cell.digit = this.#digit;\n      (cell.content || {}).enabled = false;\n\n      if (this.#digit) {\n        cell.write(this.#game.text, this.#digit, 20, `inactive${this.#digit}`);\n      }\n\n      if (this.#checkCells()) {\n        if (this.#onwin) {\n          this.#onwin();\n        }\n      }\n\n      this.#game.text.changed();\n    }\n  }\n\n  #checkCells() {\n    let valid = true;\n\n    this.#resetCells();\n\n    for (let i = 0; i < 9; i++) {\n      valid &= this.#checkRow(i);\n      valid &= this.#checkColumn(i);\n      valid &= this.#checkGrid(i);\n    }\n\n    return valid;\n  }\n\n  #resetCells() {\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const cell = this.#cellAt(x, y);\n        if (!cell.inactive) {\n          cell.setBaseColor('primary');\n        }\n      }\n    }\n\n    for (let i = 0; i < 9; i++) {\n      this.#grids[i].changed();\n    }\n  }\n\n  #checkRow(x) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let y = 0; y < 9; y++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let y = 0; y < 9; y++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor('active');\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkColumn(y) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let x = 0; x < 9; x++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let x = 0; x < 9; x++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor('active');\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkGrid(index) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    const grid = this.#grids[index];\n\n    for (let i = 0; i < 9; i++) {\n      const cell = grid.sprites[i];\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let i = 0; i < 9; i++) {\n          const cell = grid.sprites[i];\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor('active');\n            grid.changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #buttonRelease(button) {\n    if (button) {\n      this.#selectDigit(button.digit);\n    }\n  }\n\n  #selectDigit(digit) {\n    this.#digit = digit;\n\n    for (const button of this.#buttons.sprites) {\n      button.activate(true);\n    }\n\n    this.#buttons.sprites[digit != null ? digit - 1 : 9].activate(false);\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #width;\n  #height;\n  #grid;\n  #opened;\n  #showingA;\n  #showingB;\n  #timer;\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#width = 6;\n    this.#height = 5;\n\n    this.#grid = new Grid(this.#game, 100, 100, this.#width, this.#height, 64, 16, 16, (cell) => this.#release(cell));\n\n    const available = this.#grid.sprites.slice();\n\n    for (let i = 1; i <= (this.#width * this.#height) / 2; i++) {\n      const indexA = Math.floor(Math.random() * available.length);\n      const cellA = available[indexA];\n      available.splice(indexA, 1);\n\n      const indexB = Math.floor(Math.random() * available.length);\n      const cellB = available[indexB];\n      available.splice(indexB, 1);\n\n      cellA.secret = i;\n      cellB.secret = i;\n    }\n  }\n\n  update() {\n    this.#grid.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n  }\n\n  #release(cell) {\n    if (cell && !cell.open) {\n      if (this.#showingA && this.#showingB) {\n        this.#cancelShowing();\n      }\n\n      cell.open = true;\n      cell.write(this.#game.text, cell.secret, 16, 'highlight');\n      cell.setBaseColor('active');\n\n      if (this.#opened) {\n        if (cell.secret === this.#opened.secret) {\n          cell.found = true;\n          cell.activate(false);\n\n          this.#opened.found = true;\n          this.#opened.activate(false);\n\n          if (this.#grid.sprites.every(cell => cell.found)) {\n            if (this.#onwin) {\n              this.#onwin();\n            }\n          }\n        } else {\n          this.#showingA = this.#opened;\n          this.#showingB = cell;\n\n          this.#timer = this.#game.scheduleTimer(1000, () => this.#cancelShowing());\n        }\n\n        this.#opened = false;\n      } else {\n        this.#opened = cell;\n      }\n    }\n  }\n\n  #cancelShowing() {\n    (this.#timer || {}).disabled = true;\n\n    this.#showingA.open = false;\n    this.#showingA.content.enabled = false;\n    this.#showingA.setBaseColor('primary');\n\n    this.#showingB.open = false;\n    this.#showingB.content.enabled = false;\n    this.#showingB.setBaseColor('primary');\n\n    this.#grid.changed();\n    this.#game.text.changed();\n\n    this.#showingA = null;\n    this.#showingB = null;\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #width;\n  #height;\n  #grid;\n  #selected;\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#width = 10;\n    this.#height = 10;\n\n    this.#grid = new Grid(this.#game, 100, 100, this.#width, this.#height, 32, 0, 0, (cell) => this.#release(cell));\n\n    for (let i = 0; i < this.#width * this.#height; i++) {\n      const cell = this.#grid.sprites[i];\n      cell.index = i;\n      cell.write(this.#game.text, i, 12, 'highlight');\n    }\n\n    for (let i = 0; i < (this.#width * this.#height) / 2; i++) {\n      const cellA = this.#grid.sprites[Math.floor(Math.random() * this.#grid.sprites.length)];\n      const cellB = this.#grid.sprites[Math.floor(Math.random() * this.#grid.sprites.length)];\n\n      this.#swap(cellA, cellB);\n    }\n\n    this.#game.text.changed();\n  }\n\n  update() {\n    this.#grid.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n  }\n\n  #release(cell) {\n    if (cell) {\n      if (this.#selected) {\n        this.#selected.activate(true);\n        this.#swap(this.#selected, cell);\n        this.#selected = null;\n        this.#checkGrid();\n      } else {\n        cell.activate(false);\n        this.#selected = cell;\n      }\n    }\n  }\n\n  #swap(cellA, cellB) {\n    const index = cellA.index;\n    cellA.index = cellB.index;\n    cellB.index = index;\n\n    cellA.write(this.#game.text, cellA.index, 12, 'highlight');\n    cellB.write(this.#game.text, cellB.index, 12, 'highlight');\n  }\n\n  #checkGrid() {\n    for (let i = 0; i < this.#width * this.#height; i++) {\n      if (this.#grid.sprites[i].index !== i) {\n        return;\n      }\n    }\n\n    this.#grid.disabled = true;\n\n    if (this.#onwin) {\n      this.#onwin();\n    }\n  }\n}\n","import Grid from '../Grid';\n\nimport Minigame from './Minigame';\nimport Meowsweeper from '../minigames/Meowsweeper';\nimport PawPawToe from '../minigames/PawPawToe';\nimport Sudocat from '../minigames/Sudocat';\nimport Meowmory from '../minigames/Meowmory';\nimport Jigspaw from '../minigames/Jigspaw';\n\nexport default class {\n  #game;\n  #buttons;\n  #minigameState;\n\n  constructor(game) {\n    this.#game = game;\n\n    this.#buttons = new Grid(this.#game, 100, 100, 3, 3, 64, 32, 32, (button) => this.#buttonRelease(button));\n\n    this.#buttons.sprites[0].minigame = PawPawToe;\n    this.#buttons.sprites[1].minigame = Meowsweeper;\n    this.#buttons.sprites[2].minigame = Meowmory;\n    this.#buttons.sprites[3].minigame = Sudocat;\n    this.#buttons.sprites[4].minigame = Jigspaw;\n\n    this.#buttons.sprites[5].activate(false);\n    this.#buttons.sprites[6].activate(false);\n    this.#buttons.sprites[7].activate(false);\n    this.#buttons.sprites[8].activate(false);\n  }\n\n  update() {\n    if (this.#minigameState) {\n      return this.#minigameState;\n    } else {\n      this.#buttons.update();\n\n      return this;\n    }\n  }\n\n  draw() {\n    this.#buttons.draw();\n  }\n\n  #buttonRelease(button) {\n    if (button) {\n      this.#minigameState = new Minigame(this.#game, button.minigame);\n    }\n  }\n}\n","import Game from \"./Game\";\n\nconst game = new Game();\n\nfunction step(timestamp) {\n  requestAnimationFrame(step);\n  game.step(timestamp);\n}\n\nrequestAnimationFrame(step);\n","import Renderer from './Renderer';\nimport Input from './Input';\n\nimport Text from './Text';\nimport Title from './states/Title';\nimport SpriteBatch from './SpriteBatch';\nimport Select from './states/Select';\n\nexport default class {\n  #timers;\n  #spriteBatch;\n  #cursor;\n  #state;\n\n  constructor() {\n    this.renderer = new Renderer();\n    this.input = new Input(this);\n    this.#timers = [];\n\n    this.text = new Text(this);\n    this.#spriteBatch = new SpriteBatch(this, 'textures/sprites.png', 16);\n    this.#cursor = this.#spriteBatch.addSprite(0, 0, 26, 0, 'blackcat');\n\n    this.#state = new Select(this);\n    // this.#state = new Minigame(this, Meowsweeper);\n    // this.#cursor.a = 0.5;\n\n    // this.scheduleTimer(500, () => { console.log('hi'); }, true);\n  }\n\n  step(timestamp) {\n    this.timestamp = timestamp;\n    this.#update(timestamp);\n    this.#draw();\n  }\n\n  scheduleTimer(delay, onexpire, repeat) {\n    const timer = { start: this.timestamp ?? 0, delay: delay, onexpire: onexpire, repeat: repeat };\n    this.#timers.push(timer);\n    return timer;\n  }\n\n  #update(timestamp) {\n    this.input.update();\n\n    if (this.input.moved) {\n      this.#cursor.x = this.input.x - 6;\n      this.#cursor.y = this.input.y - 6;\n\n      this.#spriteBatch.changed();\n    }\n\n    this.#updateTimers(timestamp);\n    this.#state = this.#state.update();\n    this.text.update();\n    this.#spriteBatch.update();\n  }\n\n  #updateTimers(timestamp) {\n    for (const timer of this.#timers) {\n      if (timestamp >= timer.start + timer.delay && !timer.disabled) {\n        if (timer.repeat) {\n          timer.start = timestamp;\n        } else {\n          timer.expired = true;\n        }\n\n        if (timer.onexpire) {\n          timer.onexpire();\n        }\n      }\n    }\n\n    if (this.#timers.some(timer => timer.expired || timer.disabled)) {\n      this.#timers = this.#timers.filter(timer => !timer.expired && !timer.disabled);\n    }\n  }\n\n  #draw() {\n    this.renderer.clear();\n\n    this.#state.draw();\n\n    this.text.draw();\n\n    this.#spriteBatch.draw();\n  }\n}\n"],"names":["Matrix3","Float32Array","projection","width","height","Shader","program","projectionUniformLocation","texUniformLocation","imageSizeUniformLocation","constructor","gl","vertexShaderSource","fragmentShaderSource","vertexShader","this","compileShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","bindAttribLocation","linkProgram","getUniformLocation","console","log","getProgramInfoLog","use","useProgram","setUniforms","uniformMatrix3fv","uniform1i","uniform1f","imageSize","type","source","shader","createShader","shaderSource","getShaderInfoLog","Renderer","shaders","textures","images","currentShader","currentVao","currentTexture","canvas","document","createElement","style","cursor","touchAction","body","appendChild","getContext","viewport","clearColor","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","quadBuffer","createQuadBuffer","Map","name","cachedShader","get","set","createVao","vao","createVertexArray","bindVertexArray","createBuffer","data","dynamic","buffer","updateBuffer","useBuffer","bufferData","ARRAY_BUFFER","DYNAMIC_DRAW","STATIC_DRAW","bindBuffer","setAttribute","location","size","stride","offset","divisor","vertexAttribPointer","FLOAT","enableVertexAttribArray","vertexAttribDivisor","loadTexture","path","smooth","cachedTexture","texture","createTexture","prepareTexture","imageIndex","length","image","Image","src","onload","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","draw","vertexCount","instanceCount","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","drawArraysInstanced","TRIANGLES","drawArrays","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","Uint8Array","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","NEAREST","TEXTURE_MAG_FILTER","Input","newKeyPresses","newKeyReleases","newPress","newRelease","lastX","lastY","game","renderer","addEventListener","event","x","offsetX","y","offsetY","code","update","moved","press","release","keyPresses","newKeyPress","newKeyPressValue","Object","entries","keyReleases","newKeyRelease","newKeyReleaseValue","Sprite","color","angle","enabled","hidden","a","setColor","attributes","r","g","b","setBaseColor","baseColor","fromRGB","activate","active","inactive","write","text","content","toString","SpriteBatch","instanceBuffer","spritesChanged","texturePath","sprites","changed","addSprite","sprite","push","filter","map","flat","TextSegment","Text","segments","super","segment","currX","currY","c","charCodeAt","Grid","cellSize","spacingX","spacingY","onrelease","pressed","gridY","gridX","cell","fullW","fullH","disabled","input","newActive","cellAtPosition","onactivate","onpress","cellAt","index","indexAtPosition","relX","relY","indexX","Math","trunc","indexY","Minigame","minigameClass","minigame","buttons","exitButton","exit","button","buttonRelease","setup","Select","win","lose","scheduleTimer","alert","Meowsweeper","onwin","onlose","grid","digButton","flagButton","mode","started","setMode","start","open","mine","flagged","available","availableCell","abs","i","floor","random","mineCell","splice","mines","dy","dx","opened","every","PawPawToe","timer","over","symbol","mark","checkGrid","symbolCounts","Sudocat","grids","digit","setGrid","selectDigit","gridAt","starts","checkCells","valid","resetCells","checkRow","checkColumn","digitCounts","digitCount","Meowmory","showingA","showingB","slice","indexA","cellA","indexB","cellB","secret","cancelShowing","found","Jigspaw","selected","swap","minigameState","timers","spriteBatch","state","step","timestamp","delay","onexpire","repeat","updateTimers","expired","some","requestAnimationFrame"],"mappings":"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"}