{"version":3,"file":"bundle.js","sources":["src/Matrix3.js","src/Shader.js","src/Renderer.js","src/Input.js","src/Sprite.js","src/SpriteBatch.js","shaders/sprite.vert","shaders/sprite.frag","src/TextSegment.js","src/Text.js","src/Grid.js","src/states/Minigame.js","src/minigames/Meowsweeper.js","src/minigames/PawPawToe.js","src/minigames/Sudocat.js","src/minigames/Meowmory.js","src/minigames/Jigspaw.js","src/minigames/Meowsterpiece.js","src/states/Select.js","src/index.js","src/Game.js"],"sourcesContent":["export default class Matrix3 extends Float32Array {\n  static identity() {\n    return new Matrix3([\n      1.0, 0.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 0.0, 1.0,\n    ]);\n  }\n\n  static projection(width, height) {\n    return new Matrix3([\n      2.0 / width, 0.0, 0.0,\n      0.0, -2.0 / height, 0.0,\n      -1.0, 1.0, 1.0,\n    ]);\n  }\n}\n","export default class {\n  #program;\n  #viewUniformLocation;\n  #projectionUniformLocation;\n  #texUniformLocation;\n  #imageSizeUniformLocation;\n\n  constructor(gl, vertexShaderSource, fragmentShaderSource) {\n    const vertexShader = this.#compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource)\n    const fragmentShader = this.#compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n    this.#program = gl.createProgram();\n\n    gl.attachShader(this.#program, vertexShader);\n    gl.attachShader(this.#program, fragmentShader);\n\n    gl.bindAttribLocation(this.#program, POSITION_ATTRIBUTE_LOCATION, 'vertexPosition');\n    gl.bindAttribLocation(this.#program, COLOR_ATTRIBUTE_LOCATION, 'vertexColor');\n    gl.bindAttribLocation(this.#program, TEX_COORD_ATTRIBUTE_LOCATION, 'vertexTexCoord');\n\n    gl.bindAttribLocation(this.#program, SPRITE_POSITION_ATTRIBUTE_LOCATION, 'spritePosition');\n    gl.bindAttribLocation(this.#program, SPRITE_SIZE_ATTRIBUTE_LOCATION, 'spriteSize');\n    gl.bindAttribLocation(this.#program, SPRITE_TYPE_ATTRIBUTE_LOCATION, 'spriteType');\n    gl.bindAttribLocation(this.#program, SPRITE_COLOR_ATTRIBUTE_LOCATION, 'spriteColor');\n    gl.bindAttribLocation(this.#program, SPRITE_ANGLE_ATTRIBUTE_LOCATION, 'spriteAngle');\n\n    gl.linkProgram(this.#program);\n\n    this.#viewUniformLocation = gl.getUniformLocation(this.#program, 'view');\n    this.#projectionUniformLocation = gl.getUniformLocation(this.#program, 'projection');\n    this.#texUniformLocation = gl.getUniformLocation(this.#program, 'tex');\n    this.#imageSizeUniformLocation = gl.getUniformLocation(this.#program, 'imageSize');\n\n    console.log(gl.getProgramInfoLog(this.#program));\n  }\n\n  use(gl, view, projection) {\n    gl.useProgram(this.#program);\n\n    this.setUniforms(gl, view, projection);\n  }\n\n  setUniforms(gl, view, projection) {\n    if (this.#viewUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#viewUniformLocation, false, view);\n    }\n\n    if (this.#projectionUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#projectionUniformLocation, false, projection);\n    }\n\n    if (this.#texUniformLocation != null) {\n      gl.uniform1i(this.#texUniformLocation, 0);\n    }\n\n    if (this.#imageSizeUniformLocation != null) {\n      gl.uniform1f(this.#imageSizeUniformLocation, this.imageSize);\n    }\n  }\n\n  #compileShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    console.log(gl.getShaderInfoLog(shader));\n\n    return shader;\n  }\n}\n","import Matrix3 from './Matrix3';\n\nimport Shader from './Shader';\n\nexport default class {\n  #onresize;\n  #gl;\n  #shaders;\n  #textures;\n  #images;\n  #projection;\n  #currentShader;\n  #currentVao;\n  #currentTexture;\n\n  constructor(onresize) {\n    this.#onresize = onresize;\n\n    document.body.style.margin = '0';\n    document.body.style.padding = '0';\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.style.display = 'block';\n    this.canvas.style.width = '100dvw';\n    this.canvas.style.height = '100dvh';\n    this.canvas.style.cursor = 'none';\n    this.canvas.style.touchAction = 'none';\n\n    new ResizeObserver(() => {\n      this.width = this.canvas.clientWidth;\n      this.height = this.canvas.clientHeight;\n\n      this.canvas.width = this.width;\n      this.canvas.height = this.height;\n\n      this.horizontal = this.width > this.height;\n\n      this.#gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n      this.#projection = Matrix3.projection(this.canvas.width, this.canvas.height);\n\n      if (this.#onresize) {\n        this.#onresize();\n      }\n    }).observe(this.canvas, { box: 'content-box' });\n\n    document.body.appendChild(this.canvas);\n\n    this.#gl = this.canvas.getContext('webgl2');\n\n    this.#gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    this.#gl.clearColor(0.68, 0.68, 0.94, 1.0);\n\n    this.#gl.enable(this.#gl.BLEND);\n    this.#gl.blendFunc(this.#gl.SRC_ALPHA, this.#gl.ONE_MINUS_SRC_ALPHA);\n\n    this.quadBuffer = this.#createQuadBuffer();\n\n    this.#shaders = new Map();\n    this.#textures = new Map();\n    this.#images = [];\n\n    this.view = Matrix3.identity();\n    this.#projection = Matrix3.projection(this.canvas.width, this.canvas.height);\n  }\n\n  createShader(name, vertexShaderSource, fragmentShaderSource) {\n    const cachedShader = this.#shaders.get(name);\n\n    if (cachedShader) {\n      return cachedShader;\n    }\n\n    const shader = new Shader(this.#gl, vertexShaderSource, fragmentShaderSource);\n    this.#shaders.set(name, shader);\n\n    return shader;\n  }\n\n  createVao() {\n    const vao = this.#gl.createVertexArray();\n\n    this.#gl.bindVertexArray(vao);\n\n    return vao;\n  }\n\n  createBuffer(data, dynamic) {\n    const buffer = this.#gl.createBuffer();\n\n    this.updateBuffer(buffer, data, dynamic);\n\n    return buffer;\n  }\n\n  updateBuffer(buffer, data, dynamic) {\n    this.useBuffer(buffer);\n\n    this.#gl.bufferData(this.#gl.ARRAY_BUFFER, data, dynamic ? this.#gl.DYNAMIC_DRAW : this.#gl.STATIC_DRAW);\n  }\n\n  useBuffer(buffer) {\n    this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, buffer);\n  }\n\n  setAttribute(location, size, stride, offset, divisor) {\n    this.#gl.vertexAttribPointer(location, size, this.#gl.FLOAT, false, stride, offset);\n    this.#gl.enableVertexAttribArray(location);\n\n    if (divisor != null) {\n      this.#gl.vertexAttribDivisor(location, divisor);\n    }\n  }\n\n  loadTexture(path, smooth) {\n    const cachedTexture = this.#textures.get(path);\n\n    if (cachedTexture) {\n      return cachedTexture;\n    }\n\n    const texture = this.#gl.createTexture();\n    this.#prepareTexture(texture, null, smooth);\n\n    const imageIndex = this.#images.length;\n    const image = new Image();\n\n    image.src = path;\n    image.onload = () => this.#prepareTexture(texture, imageIndex, smooth);\n\n    this.#textures.set(path, texture);\n    this.#images[imageIndex] = image;\n\n    return texture;\n  }\n\n  clear() {\n    this.#gl.clear(this.#gl.COLOR_BUFFER_BIT | this.#gl.DEPTH_BUFFER_BIT);\n  }\n\n  draw(shader, vao, texture, vertexCount, instanceCount) {\n    if (shader !== this.#currentShader) {\n      shader.use(this.#gl, this.view, this.#projection);\n      this.#currentShader = shader;\n    } else {\n      this.#currentShader.setUniforms(this.#gl, this.view, this.#projection);\n    }\n\n    if (vao !== this.#currentVao) {\n      this.#gl.bindVertexArray(vao);\n      this.#currentVao = vao;\n    }\n\n    if (texture !== this.#currentTexture) {\n      this.#gl.activeTexture(this.#gl.TEXTURE0);\n      this.#gl.bindTexture(this.#gl.TEXTURE_2D, texture);\n      this.#currentTexture = texture;\n    }\n\n    if (instanceCount != null) {\n      this.#gl.drawArraysInstanced(this.#gl.TRIANGLES, 0, vertexCount, instanceCount);\n    } else {\n      this.#gl.drawArrays(this.#gl.TRIANGLES, 0, vertexCount);\n    }\n  }\n\n  #createQuadBuffer() {\n    return this.createBuffer(new Float32Array([\n      0.0, 0.0, 0.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 0.0, 1.0, 0.0,\n\n      1.0, 0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 1.0, 1.0, 1.0,\n    ]), false);\n  }\n\n  #prepareTexture(texture, imageIndex, smooth) {\n    this.#gl.activeTexture(this.#gl.TEXTURE0);\n    this.#gl.bindTexture(this.#gl.TEXTURE_2D, texture);\n\n    this.#gl.pixelStorei(this.#gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n    if (imageIndex != null) {\n      this.#gl.texImage2D(this.#gl.TEXTURE_2D, 0, this.#gl.RGBA, this.#gl.RGBA, this.#gl.UNSIGNED_BYTE, this.#images[imageIndex]);\n    } else {\n      this.#gl.texImage2D(this.#gl.TEXTURE_2D, 0, this.#gl.RGBA, 1, 1, 0, this.#gl.RGBA, this.#gl.UNSIGNED_BYTE, new Uint8Array([255, 0, 255, 255,]));\n    }\n\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_WRAP_S, this.#gl.CLAMP_TO_EDGE);\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_WRAP_T, this.#gl.CLAMP_TO_EDGE);\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_MIN_FILTER, smooth ? this.#gl.LINEAR : this.#gl.NEAREST);\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_MAG_FILTER, smooth ? this.#gl.LINEAR : this.#gl.NEAREST);\n  }\n}\n","export default class {\n  #newKeyPresses;\n  #newKeyReleases;\n  #newPress;\n  #newRelease;\n  #lastX;\n  #lastY;\n\n  constructor(game) {\n    this.#newKeyPresses = {};\n    this.#newKeyReleases = {};\n\n    game.renderer.canvas.addEventListener('pointermove', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n    });\n\n    game.renderer.canvas.addEventListener('pointerdown', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newPress = true;\n    });\n\n    game.renderer.canvas.addEventListener('pointerup', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newRelease = true;\n    });\n\n    addEventListener('keydown', event => {\n      this.#newKeyPresses[event.code] = true;\n    });\n\n    addEventListener('keyup', event => {\n      this.#newKeyReleases[event.code] = true;\n    });\n  }\n\n  update() {\n    if (this.x !== this.#lastX || this.y !== this.#lastY) {\n      this.#lastX = this.x;\n      this.#lastY = this.y;\n      this.moved = true;\n    }\n\n    this.press = false;\n\n    if (this.#newPress) {\n      this.press = true;\n      this.#newPress = false;\n    }\n\n    this.release = false;\n\n    if (this.#newRelease) {\n      this.release = true;\n      this.#newRelease = false;\n    }\n\n    this.keyPresses = {};\n\n    for (const [newKeyPress, newKeyPressValue] of Object.entries(this.#newKeyPresses)) {\n      if (newKeyPressValue) {\n        this.keyPresses[newKeyPress] = true;\n        this.#newKeyPresses[newKeyPress] = false;\n      }\n    }\n\n    this.keyReleases = {};\n\n    for (const [newKeyRelease, newKeyReleaseValue] of Object.entries(this.#newKeyReleases)) {\n      if (newKeyReleaseValue) {\n        this.keyReleases[newKeyRelease] = true;\n        this.#newKeyReleases[newKeyRelease] = false;\n      }\n    }\n  }\n\n  click() {\n    return (this.mouse && this.release) || (!this.mouse && this.press);\n  }\n}\n","export default class {\n  constructor(x, y, size, type, color) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.type = type;\n    this.angle = 0.0;\n    this.enabled = true;\n    this.hidden = false;\n    this.a = 1.0;\n\n    this.setColor(color);\n  }\n\n  attributes() {\n    return [this.x, this.y, this.size, this.type, this.r, this.g, this.b, this.hidden ? 0 : this.a, this.angle];\n  }\n\n  setBaseColor(color) {\n    this.baseColor = color;\n    this.setColor(color);\n  }\n\n  setColor(color) {\n    switch (color) {\n    case 'primary':\n      this.r = 0.85;\n      this.g = 0.86;\n      this.b = 1.0;\n      break;\n    case 'background':\n      this.r = 0.68;\n      this.g = 0.68;\n      this.b = 0.94;\n    case 'highlight':\n      this.r = 0.76;\n      this.g = 0.55;\n      this.b = 0.58;\n      break;\n    case 'active':\n      this.r = 0.65;\n      this.g = 0.4;\n      this.b = 0.44;\n      break;\n    case 'inactive':\n      this.r = 0.34;\n      this.g = 0.34;\n      this.b = 0.46;\n      break;\n\n    case 'blackcat':\n      this.r = 0.33;\n      this.g = 0.33;\n      this.b = 0.33;\n      break;\n    case 'orangecat':\n      this.r = 0.7;\n      this.g = 0.45;\n      this.b = 0.08;\n      break;\n    case 'whitecat':\n      this.r = 0.9;\n      this.g = 0.9;\n      this.b = 0.9;\n      break;\n    case 'tabbycat':\n      this.r = 0.64;\n      this.g = 0.56;\n      this.b = 0.38;\n      break;\n    case 'silvercat':\n      this.r = 0.6;\n      this.g = 0.6;\n      this.b = 0.6;\n      break;\n\n    case 'black':\n      this.r = 0.0;\n      this.g = 0.0;\n      this.b = 0.0;\n      break;\n\n    // TODO: Choose darker primary colors that are easily readable on the primary background\n    case 'primary1':\n      this.#fromRGB(144, 168, 195);\n      break;\n    case 'primary2':\n      this.#fromRGB(70, 157, 137);\n      break;\n    case 'primary3':\n      this.#fromRGB(181, 201, 154);\n      break;\n    case 'primary4':\n      this.#fromRGB(0, 166, 251);\n      break;\n    case 'primary5':\n      this.#fromRGB(76, 201, 240);\n      break;\n    case 'primary6':\n      this.#fromRGB(244, 202, 224);\n      break;\n    case 'primary7':\n      this.#fromRGB(229, 0, 164);\n      break;\n    case 'primary8':\n      this.#fromRGB(242, 0, 137);\n      break;\n    case 'primary9':\n      this.#fromRGB(255, 255, 255);\n      break;\n    case 'primary10':\n      this.r = 1.0;\n      this.g = 0.8;\n      this.b = 0.94;\n      break;\n\n    case 'inactive1':\n      this.#fromRGB(144, 168, 195);\n      break;\n    case 'inactive2':\n      this.#fromRGB(70, 157, 137);\n      break;\n    case 'inactive3':\n      this.#fromRGB(181, 201, 154);\n      break;\n    case 'inactive4':\n      this.#fromRGB(0, 166, 251);\n      break;\n    case 'inactive5':\n      this.#fromRGB(76, 201, 240);\n      break;\n    case 'inactive6':\n      this.#fromRGB(244, 202, 224);\n      break;\n    case 'inactive7':\n      this.#fromRGB(229, 0, 164);\n      break;\n    case 'inactive8':\n      this.#fromRGB(242, 0, 137);\n      break;\n    case 'inactive9':\n      this.#fromRGB(255, 255, 255);\n      break;\n    case 'inactive10':\n      this.r = 1.0;\n      this.g = 0.8;\n      this.b = 0.94;\n      break;\n\n    default:\n      this.r = 1.0;\n      this.g = 1.0;\n      this.b = 1.0;\n      break;\n    }\n  }\n\n  activate(active) {\n    this.inactive = !active;\n    this.setColor(active ? (this.baseColor || 'primary') : 'inactive');\n  }\n\n  write(text, content, size, color = 'active') {\n    (this.content || {}).enabled = false;\n    this.content = text.write(content.toString(), this.x + (this.size - size) / 2, this.y + (this.size - size) / 2, size, color);\n  }\n\n  draw(spriteBatch, size, type, color) {\n    (this.content || {}).enabled = false;\n    this.content = spriteBatch.add(this.x + (this.size - size) / 2, this.y + (this.size - size) / 2, size, type, color);\n  }\n\n  #fromRGB(r, g, b) {\n    this.r = r / 255.0;\n    this.g = g / 255.0;\n    this.b = b / 255.0;\n  }\n}\n","import vertexShaderSource from '../shaders/sprite.vert';\nimport fragmentShaderSource from '../shaders/sprite.frag';\n\nimport Sprite from './Sprite';\n\nexport default class {\n  #game;\n  #imageSize;\n  #shader;\n  #vao;\n  #instanceBuffer;\n  #texture;\n  #spritesChanged;\n\n  constructor(game, texturePath, imageSize, smooth) {\n    this.#game = game;\n    this.#imageSize = imageSize;\n\n    this.#shader = this.#game.renderer.createShader('sprite', vertexShaderSource, fragmentShaderSource);\n\n    this.#vao = this.#game.renderer.createVao();\n\n    this.#game.renderer.useBuffer(this.#game.renderer.quadBuffer);\n\n    this.#game.renderer.setAttribute(POSITION_ATTRIBUTE_LOCATION, 2, 16, 0);\n    this.#game.renderer.setAttribute(TEX_COORD_ATTRIBUTE_LOCATION, 2, 16, 8);\n\n    this.#instanceBuffer = this.#game.renderer.createBuffer(new Float32Array(), true);\n\n    this.#game.renderer.setAttribute(SPRITE_POSITION_ATTRIBUTE_LOCATION, 2, 36, 0, 1);\n    this.#game.renderer.setAttribute(SPRITE_SIZE_ATTRIBUTE_LOCATION, 1, 36, 8, 1);\n    this.#game.renderer.setAttribute(SPRITE_TYPE_ATTRIBUTE_LOCATION, 1, 36, 12, 1);\n    this.#game.renderer.setAttribute(SPRITE_COLOR_ATTRIBUTE_LOCATION, 4, 36, 16, 1);\n    this.#game.renderer.setAttribute(SPRITE_ANGLE_ATTRIBUTE_LOCATION, 1, 36, 32, 1);\n\n    this.#texture = this.#game.renderer.loadTexture(texturePath, smooth);\n\n    this.sprites = [];\n    this.changed();\n  }\n\n  add(x, y, size, type, color) {\n    if (x === 'center') {\n      x = this.#game.renderer.width / 2 - size / 2;\n    }\n\n    if (y === 'center') {\n      y = this.#game.renderer.height / 2 - size / 2;\n    }\n\n    const sprite = new Sprite(x, y, size, type, color);\n\n    this.sprites.push(sprite);\n    this.changed();\n\n    return sprite;\n  }\n\n  changed() {\n    this.#spritesChanged = true;\n  }\n\n  update() {\n    if (this.#spritesChanged) {\n      this.sprites = this.sprites.filter(sprite => sprite.enabled);\n\n      this.#game.renderer.updateBuffer(this.#instanceBuffer, new Float32Array(\n        this.sprites\n            .map(sprite => sprite.attributes())\n            .flat()\n      ), true);\n\n      this.#spritesChanged = false;\n    }\n  }\n\n  draw() {\n    this.#shader.imageSize = this.#imageSize;\n    this.#game.renderer.draw(this.#shader, this.#vao, this.#texture, 6, this.sprites.length);\n  }\n}\n","#version 300 es\n\nuniform mat3 view;\nuniform mat3 projection;\nuniform float imageSize;\n\nuniform sampler2D tex;\n\nin vec2 vertexPosition;\nin vec2 vertexTexCoord;\n\nin vec2 spritePosition;\nin float spriteSize;\nin float spriteType;\nin vec4 spriteColor;\nin float spriteAngle;\n\nout vec2 texCoord;\nout vec4 tint;\n\nvoid main() {\n  vec2 texOffset = vec2(imageSize / float(textureSize(tex, 0)),\n                        imageSize / float(textureSize(tex, 0).y));\n\n  texCoord = vec2(texOffset.x, 0.0) * spriteType + vertexTexCoord * texOffset;\n  tint = spriteColor;\n  // TODO: Calculate rotation based on spriteAngle\n  gl_Position = vec4(projection * view * vec3(vertexPosition * spriteSize + spritePosition, 1.0), 1.0);\n}\n","#version 300 es\n\nprecision highp float;\n\nuniform sampler2D tex;\n\nin vec2 texCoord;\nin vec4 tint;\n\nout vec4 fragmentColor;\n\nvoid main() {\n  fragmentColor = texture(tex, texCoord) * tint;\n}\n","export default class {\n  constructor(text, x, y, size, color, animations, delay) {\n    this.text = text;\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.color = color;\n    this.animations = animations ?? [];\n    this.delay = delay ?? 0;\n\n    this.sprites = [];\n    this.enabled = true;\n\n    this.time = 0;\n    this.begin = null;\n  }\n\n  setColor(color) {\n    for (const sprite of this.sprites) {\n      sprite.setColor(color);\n    }\n  }\n\n  update(timestamp) {\n    let updated = false;\n\n    for (const animation of this.animations) {\n      switch (animation) {\n      case 'sine':\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.y = sprite.baseY + Math.sin(i + timestamp / 200) * 10;\n        }\n        updated = true;\n        break;\n      case 'shake':\n        this.time += 1;\n\n        if (this.time === 7) {\n          this.time = 0;\n          for (let i = 0; i < this.sprites.length; i++) {\n            const sprite = this.sprites[i];\n            sprite.x = sprite.baseX + Math.random() * 5;\n            sprite.y = sprite.baseY + Math.random() * 5;\n          }\n        }\n        updated = true;\n        break;\n      case 'typing':\n        if (!this.begin) {\n          this.begin = timestamp;\n        }\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.hidden = (timestamp - this.begin - this.delay) / 150 < i;\n        }\n        updated = true;\n        break;\n      }\n    }\n\n    return updated;\n  }\n}\n","import SpriteBatch from './SpriteBatch';\nimport TextSegment from './TextSegment';\n\nexport default class extends SpriteBatch {\n  #game;\n  #segments;\n\n  constructor(game) {\n    super(game, 'textures/font.png', LETTER_SIZE);\n\n    this.#game = game;\n    this.#segments = [];\n  }\n\n  write(text, x, y, size, color = 'active', animations, delay) {\n    if (x === 'center') {\n      x = Math.floor(this.#game.renderer.width / 2 - (Math.max(...text.split('\\n').map(s => s.length)) * size) / 2);\n    }\n\n    if (y === 'center') {\n      y = Math.floor(this.#game.renderer.height / 2 - (text.split('\\n').length * size) / 2);\n    }\n\n    const segment = new TextSegment(text, x, y, size, color, animations, delay);\n\n    let currX = x;\n    let currY = y;\n\n    for (const c of text) {\n      let type;\n\n      if (c === '\\n') {\n        currY += size;\n        currX = x;\n\n        continue;\n      }\n\n      if (c >= 'A' && c <= 'Z') {\n        type = c.charCodeAt(0) - 'A'.charCodeAt(0);\n      } else if (c >= '0' && c <= '9') {\n        type = 26 + c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if (c === '?') {\n        type = 36;\n      } else if (c === '!') {\n        type = 37;\n      } else if (c === ',') {\n        type = 38;\n      } else if (c === '.') {\n        type = 39;\n      } else if (c === \"'\") {\n        type = 40;\n      }\n\n      if (type != null) {\n        const sprite = this.add(currX, currY, size, type, color);\n        sprite.baseX = currX;\n        sprite.baseY = currY;\n        segment.sprites.push(sprite);\n      }\n\n      currX += size;\n    }\n\n    this.#segments.push(segment);\n    this.changed();\n\n    return segment;\n  }\n\n  clear() {\n    for (const segment of this.#segments) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = [];\n    this.changed();\n  }\n\n  update(timestamp) {\n    for (const segment of this.#segments.filter(segment => !segment.enabled)) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = this.#segments.filter(segment => segment.enabled);\n\n    for (const segment of this.#segments) {\n      if (segment.update(timestamp)) {\n        this.changed();\n      }\n    }\n\n    super.update();\n  }\n}\n","import SpriteBatch from './SpriteBatch';\n\nexport default class extends SpriteBatch {\n  #game;\n  #cellSize;\n  #spacingX;\n  #spacingY;\n  #onclick;\n  #color;\n  #active;\n  #pressed;\n\n  constructor(game, x, y, width, height, cellSize, spacingX, spacingY, onclick, color = 'primary', type = 0) {\n    super(game, 'textures/cells.png', CELL_SIZE, false);\n\n    this.#game = game;\n\n    if (x === 'center') {\n      x = this.#game.renderer.width / 2 - width * (cellSize + (spacingX ?? 0) * (width - 1) / width) / 2;\n    }\n\n    if (y === 'center') {\n      y = this.#game.renderer.height / 2 - height * (cellSize + (spacingY ?? 0) * (height - 1) / height) / 2;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height\n    this.#cellSize = cellSize;\n    this.#spacingX = spacingX ?? 0;\n    this.#spacingY = spacingY ?? 0;\n    this.#onclick = onclick;\n    this.#color = color;\n\n    for (let gridY = 0; gridY < height; gridY++) {\n      for (let gridX = 0; gridX < width; gridX++) {\n        const cell = this.add(this.x + gridX * this.#fullW, this.y + gridY * this.#fullH, this.#cellSize, type, color);\n        cell.setColor(color);\n        cell.gridX = gridX;\n        cell.gridY = gridY;\n      }\n    }\n  }\n\n  update() {\n    if (!this.disabled) {\n      if (this.#game.input.moved) {\n        let newActive = this.#cellAtPosition(this.#game.input.x, this.#game.input.y);\n        if (newActive?.inactive) {\n          newActive = null;\n        }\n\n        if (newActive !== this.#active && !this.#pressed) {\n          if (this.onactivate || this.#onclick) {\n            if (this.#game.input.mouse) {\n              if (!this.#active?.inactive) {\n                this.#active?.setColor(this.#active?.baseColor || this.#color);\n              }\n\n              newActive?.setColor('highlight');\n              this.changed();\n            }\n          }\n\n          // if (this.onactivate) {\n          //   this.onactivate(newActive, this.#active);\n          //   this.changed();\n          // }\n        }\n\n        this.#active = newActive;\n      }\n\n      if (this.#game.input.press) {\n        this.#pressed = this.#active;\n\n        if (this.onpress || this.#onclick) {\n          this.#pressed?.setColor('active');\n          this.changed();\n        }\n\n        // if (this.onpress) {\n        //   this.onpress(this.#pressed);\n        //   this.changed();\n        // }\n      }\n\n      if (this.#game.input.click()) {\n        if (this.#onclick) {\n          this.#pressed?.setColor(this.#pressed?.baseColor || this.#color);\n          this.#onclick(this.#active === this.#pressed ? this.#pressed : null, this.#pressed);\n          this.changed();\n        }\n\n        this.#pressed = null;\n      }\n    }\n\n    super.update();\n  }\n\n  cellAt(x, y) {\n    if (x >= 0 && x < this.width && y >= 0 && y < this.height) {\n      return this.sprites[this.width * y + x];\n    }\n  }\n\n  #cellAtPosition(x, y) {\n    const index = this.#indexAtPosition(x, y);\n\n    if (index) {\n      return this.cellAt(index[0], index[1]);\n    }\n  }\n\n  #indexAtPosition(x, y) {\n    const relX = x - this.x;\n    const relY = y - this.y;\n    const indexX = Math.trunc(relX / this.#fullW);\n    const indexY = Math.trunc(relY / this.#fullH);\n\n    if (relX >= 0 && relY >= 0 &&\n        relX - indexX * this.#fullW < this.#cellSize &&\n        relY - indexY * this.#fullH < this.#cellSize &&\n        indexX >= 0 && indexX < this.width && indexY >= 0 && indexY < this.height) {\n      return [indexX, indexY];\n    }\n  }\n\n  get #fullW() {\n    return this.#cellSize + this.#spacingX;\n  }\n\n  get #fullH() {\n    return this.#cellSize + this.#spacingY;\n  }\n}\n","import Grid from '../Grid';\nimport Select from './Select';\n\nexport default class {\n  #game;\n  #minigameClass;\n  #minigame;\n  #buttons;\n  #exitButton;\n  #exit;\n\n  constructor(game, minigameClass) {\n    this.#game = game;\n    this.#minigameClass = minigameClass;\n\n    this.#buttons = new Grid(this.#game, this.#game.renderer.width - 74, 10, 1, 1, 64, 0, 0, (button) => this.#buttonClick(button));\n\n    this.#exitButton = this.#buttons.sprites[0];\n\n    this.#setup();\n  }\n\n  update() {\n    if (this.#exit) {\n      this.#game.text.clear();\n      this.#exitButton.content.enabled = false;\n\n      return new Select(this.#game);\n    } else {\n      this.#minigame.update();\n      this.#buttons.update();\n\n      return this;\n    }\n  }\n\n  draw() {\n    this.#minigame.draw();\n    this.#buttons.draw();\n  }\n\n  #setup() {\n    this.#game.text.clear();\n    this.#minigame = new this.#minigameClass(this.#game, () => this.#win(), () => this.#lose());\n\n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(this.#game.text, 'X', 32, 'active');\n  }\n\n  #win() {\n    this.#game.scheduleTimer(500, () => {\n      this.#game.minigamesWon.add(this.#minigameClass);\n      this.#exit = true;\n    });\n  }\n\n  #lose() {\n    this.#game.scheduleTimer(500, () => { this.#setup(); });\n  }\n\n  #buttonClick(button) {\n    if (button === this.#exitButton) {\n      this.#exit = true;\n    }\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #width;\n  #height;\n  #mines;\n  #fontSize;\n  #grid;\n  #buttons;\n  #digButton;\n  #flagButton;\n  #mode;\n  #started;\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#width = this.#game.renderer.horizontal ? 20 : 10;\n    this.#height = this.#game.renderer.horizontal ? 10 : 20;\n    this.#mines = 10;\n\n    this.#fontSize = 26;\n\n    const spacing = 4;\n\n    const cellSize = Math.floor(Math.min((this.#game.renderer.width - 20) / this.#width - (spacing * (this.#width - 1) / this.#width), (this.#game.renderer.height - 110) / this.#height - (spacing * (this.#height - 1) / this.#height)));\n\n    this.#grid = new Grid(this.#game, 'center', 100, this.#width, this.#height, cellSize, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#buttons = new Grid(this.#game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#digButton = this.#buttons.sprites[0];\n    this.#digButton.write(this.#game.text, 'O', 30, 'active');\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(this.#game.text, 'X', 30, 'active');\n\n    this.#setMode('dig');\n\n    this.#game.text.write('MEOWSWEEPER', 'center', 10, 48, 'inactive', ['sine']);\n    // this.#game.text.write('SCRATCH MY BACK, BUT\\nONLY WHERE I LIKE IT!', 50, 525, 32, 'active', ['typing', 'shake']);\n  }\n\n  update() {\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      this.#setMode('dig');\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      this.#setMode('flag');\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    if (cell) {\n      switch (this.#mode) {\n      case 'dig':\n        if (!this.#started) {\n          this.#start(cell);\n        }\n\n        this.#open(cell.gridX, cell.gridY);\n\n        if (cell.mine) {\n          this.#grid.disabled = true;\n\n          this.#game.scheduleTimer(2000, () => {\n            for (const cell of this.#grid.sprites) {\n              (cell.content || {}).enabled = false;\n            }\n\n            this.#game.text.changed();\n\n            if (this.#onlose) {\n              this.#onlose();\n            }\n          });\n        }\n\n        break;\n      case 'flag':\n        if (cell.flagged) {\n          cell.flagged = false;\n          cell.content.enabled = false;\n          this.#game.text.changed();\n        } else {\n          cell.flagged = true;\n          cell.write(this.#game.text, 'X', this.#fontSize, 'highlight');\n        }\n        break;\n      }\n    }\n  }\n\n  #start(cell) {\n    const available = this.#grid.sprites.filter(availableCell => availableCell !== cell && (Math.abs(availableCell.gridX - cell.gridX) > 1 || Math.abs(availableCell.gridY - cell.gridY) > 1));\n\n    for (let i = 0; i < this.#mines; i++) {\n      const index = Math.floor(Math.random() * available.length);\n      const mineCell = available[index];\n      available.splice(index, 1);\n\n      mineCell.mine = true;\n    }\n\n    for (let y = 0; y < this.#grid.height; y++) {\n      for (let x = 0; x < this.#grid.width; x++) {\n        let cell = this.#grid.cellAt(x, y);\n        if (!cell.mine) {\n          cell.mines = 0;\n          for (let dy = -1; dy <= 1; dy++) {\n            for (let dx = -1; dx <= 1; dx++) {\n              if (this.#grid.cellAt(x + dx, y + dy)?.mine) {\n                cell.mines += 1;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.#started = true;\n  }\n\n  #open(x, y) {\n    this.#game.shake(200);\n    const cell = this.#grid.cellAt(x, y);\n\n    if (cell?.flagged) {\n      cell.flagged = false;\n      cell.content.enabled = false;\n    }\n\n    if (cell?.enabled && !cell?.opened) {\n      cell.opened = true;\n\n      cell.activate(false);\n\n      if (cell.mines === 0) {\n        cell.hidden = true;\n\n        this.#open(x, y - 1);\n        this.#open(x, y + 1);\n        this.#open(x - 1, y);\n        this.#open(x + 1, y);\n      } else {\n        if (cell.mine) {\n          for (const mineCell of this.#grid.sprites.filter(cell => cell.mine)) {\n            mineCell.activate(false);\n            mineCell.write(this.#game.text, 'X', this.#fontSize, 'inactive10');\n          }\n        } else {\n          cell.write(this.#game.text, cell.mines, this.#fontSize, `inactive${cell.mines}`);\n        }\n      }\n    }\n\n    if (this.#grid.sprites.filter(cell => !cell.opened).every(cell => cell.mine)) {\n      if (this.#onwin) {\n        this.#onwin();\n      }\n    }\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode('flag');\n    } else if (button === this.#digButton) {\n      this.#setMode('dig');\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#digButton.activate(this.#mode !== 'dig');\n    this.#flagButton.activate(this.#mode !== 'flag');\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #grid;\n  #spriteBatch;\n  #timer;\n  #over;\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#grid = new Grid(this.#game, 'center', 'center', 3, 3, 96, 20, 20, (cell) => this.#click(cell));\n    this.#spriteBatch = new SpriteBatch(this.#game, 'textures/sprites.png', 16, false);\n\n    this.#game.text.write('PAW PAW TOE', 'center', 10, 48, 'inactive', ['sine']);\n    // this.#game.text.write(\"BET YOU CAN'T BEAT ME!!\", 50, 400, 32, 'active', ['typing', 'shake']);\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (cell && !cell.symbol) {\n      this.#mark(cell, 'X');\n\n      this.#grid.disabled = true;\n\n      this.#timer = this.#game.scheduleTimer(1000, () => {\n        if (!this.#over) {\n          const available = this.#grid.sprites.filter(sprite => !sprite.symbol);\n\n          if (available.length > 0) {\n            this.#mark(available[Math.floor(Math.random() * available.length)], 'O');\n\n            this.#grid.disabled = false;\n            this.#grid.changed();\n          }\n        }\n      });\n    }\n  }\n\n  #mark(cell, symbol) {\n    if (!this.#over) {\n      cell.symbol = symbol;\n\n      cell.activate(false);\n\n      cell.draw(this.#spriteBatch, 42, 0, symbol === 'X' ? 'blackcat' : 'orangecat');\n\n      this.#checkGrid();\n    }\n  }\n\n  #checkGrid() {\n    for (let y = 0; y < 3; y++) {\n      const symbolCounts = new Map();\n\n      for (let x = 0; x < 3; x++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    for (let x = 0; x < 3; x++) {\n      const symbolCounts = new Map();\n\n      for (let y = 0; y < 3; y++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(2, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(2, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(0, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(0, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n  }\n\n  #win(symbol) {\n    this.#over = true;\n    this.#grid.disabled = true;\n    (this.#timer || {}).disabled = true;\n\n    if (symbol === 'X') {\n      if (this.#onwin) {\n        this.#onwin();\n      }\n    } else if (symbol === 'O') {\n      if (this.#onlose) {\n        this.#onlose();\n      }\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #spriteBatch;\n  #grids;\n  #cellSize;\n  #buttons;\n  #digit;\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#spriteBatch = new SpriteBatch(this.#game, 'textures/sprites.png', 16, true);\n\n    this.#grids = [];\n\n    const gridSpacing = 16;\n\n    const gridSize = Math.floor(Math.min((this.#game.renderer.width - 20) / 3 - (gridSpacing * (3 - 1) / 3), (this.#game.renderer.height - 200) / 3 - (gridSpacing * (3 - 1) / 3)));\n\n    const spacing = 5;\n\n    this.#cellSize = Math.floor(Math.min((gridSize - 0) / 3 - (spacing * (3 - 1) / 3), (gridSize - 0) / 3 - (spacing * (3 - 1) / 3)));\n\n    const startX = this.#game.renderer.width / 2 - 3 * (gridSize + gridSpacing * (3 - 1) / 3) / 2;\n\n    for (let y = 0; y < 3; y++) {\n      for (let x = 0; x < 3; x++) {\n        const grid = new Grid(this.#game, startX + x * (gridSize + gridSpacing), 100 + y * (gridSize + gridSpacing), 3, 3, this.#cellSize, spacing, spacing, (cell) => this.#click(cell));\n        this.#grids.push(grid);\n      }\n    }\n\n    this.#buttons = new Grid(this.#game, 'center', this.#game.renderer.height - 74, 10, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    for (let digit = 1; digit <= 10; digit++) {\n      const button = this.#buttons.sprites[digit - 1];\n      button.draw(this.#spriteBatch, this.#cellSize * 2 / 3, digit + 5);\n      button.digit = digit <= 9 ? digit : null;\n    }\n\n    this.#setGrid();\n    this.#selectDigit(1);\n\n    this.#game.text.write('SUDOCAT', 'center', 10, 48, 'inactive', ['sine']);\n  }\n\n  update() {\n    for (let digit = 1; digit <= 9; digit++) {\n      if (this.#game.input.keyPresses[`Digit${digit}`]) {\n        this.#selectDigit(digit);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      if (this.#digit > 1) {\n        this.#selectDigit(this.#digit - 1);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      if (this.#digit < 9) {\n        this.#selectDigit(this.#digit + 1);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyX'] || this.#game.input.keyPresses['Digit0']) {\n      this.#selectDigit(null);\n    }\n\n    this.#spriteBatch.update();\n\n    for (const grid of this.#grids) {\n      grid.update();\n    }\n\n    this.#buttons.update();\n  }\n\n  draw() {\n    for (const grid of this.#grids) {\n      grid.draw();\n    }\n\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #gridAt(x, y) {\n    return this.#grids[Math.floor(y / 3) * 3 + Math.floor(x / 3)];\n  }\n\n  #cellAt(x, y) {\n    return this.#gridAt(x, y).cellAt(x % 3, y % 3);\n  }\n\n  #setGrid() {\n    const starts = [\n      [\n        6, 8, 0, 1, 0, 0, 0, 9, 0,\n        0, 3, 4, 5, 0, 8, 0, 2, 0,\n        2, 1, 0, 0, 6, 0, 3, 0, 0,\n        5, 0, 0, 4, 0, 7, 0, 0, 9,\n        3, 4, 2, 9, 0, 0, 0, 0, 6,\n        0, 0, 7, 0, 8, 0, 5, 0, 0,\n        9, 2, 0, 8, 0, 0, 0, 5, 3,\n        0, 0, 3, 2, 0, 0, 9, 1, 8,\n        0, 0, 0, 3, 0, 0, 0, 6, 7,\n      ]\n    ];\n\n    const start = starts[Math.floor(Math.random() * starts.length)];\n\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const digit = start[y * 9 + x];\n        if (digit !== 0) {\n          const cell = this.#cellAt(x, y);\n          cell.activate(false);\n          cell.digit = digit;\n          cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, digit + 5);\n        }\n      }\n    }\n  }\n\n  #click(cell) {\n    if (cell) {\n      cell.digit = this.#digit;\n      (cell.content || {}).enabled = false;\n\n      if (this.#digit) {\n        cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, this.#digit + 5);\n      }\n\n      if (this.#checkCells()) {\n        if (this.#onwin) {\n          this.#onwin();\n        }\n      }\n\n      this.#game.text.changed();\n      this.#spriteBatch.changed();\n    }\n  }\n\n  #checkCells() {\n    let valid = true;\n\n    this.#resetCells();\n\n    for (let i = 0; i < 9; i++) {\n      valid &= this.#checkRow(i);\n      valid &= this.#checkColumn(i);\n      valid &= this.#checkGrid(i);\n    }\n\n    return valid;\n  }\n\n  #resetCells() {\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const cell = this.#cellAt(x, y);\n        if (!cell.inactive) {\n          cell.setBaseColor('primary');\n        }\n      }\n    }\n\n    for (let i = 0; i < 9; i++) {\n      this.#grids[i].changed();\n    }\n  }\n\n  #checkRow(x) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let y = 0; y < 9; y++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let y = 0; y < 9; y++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor('active');\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkColumn(y) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let x = 0; x < 9; x++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let x = 0; x < 9; x++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor('active');\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkGrid(index) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    const grid = this.#grids[index];\n\n    for (let i = 0; i < 9; i++) {\n      const cell = grid.sprites[i];\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let i = 0; i < 9; i++) {\n          const cell = grid.sprites[i];\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor('active');\n            grid.changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#selectDigit(button.digit);\n    }\n  }\n\n  #selectDigit(digit) {\n    this.#digit = digit;\n\n    for (const button of this.#buttons.sprites) {\n      button.activate(true);\n    }\n\n    this.#buttons.sprites[digit != null ? digit - 1 : 9].activate(false);\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #cellSize;\n  #grid;\n  #spriteBatch;\n  #opened;\n  #showingA;\n  #showingB;\n  #timer;\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    const width = 6;\n    const height = 5;\n\n    const spacing = 16;\n\n    this.#cellSize = Math.floor(Math.min((this.#game.renderer.width - 20) / width - (spacing * (width - 1) / width), (this.#game.renderer.height - 110) / height - (spacing * (height - 1) / height)));\n\n    this.#grid = new Grid(this.#game, 'center', 100, width, height, this.#cellSize, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#spriteBatch = new SpriteBatch(this.#game, 'textures/sprites.png', 16, true);\n\n    const available = this.#grid.sprites.slice();\n\n    for (let i = 0; i < (width * height) / 2; i++) {\n      const indexA = Math.floor(Math.random() * available.length);\n      const cellA = available[indexA];\n      available.splice(indexA, 1);\n\n      const indexB = Math.floor(Math.random() * available.length);\n      const cellB = available[indexB];\n      available.splice(indexB, 1);\n\n      cellA.secret = i;\n      cellB.secret = i;\n    }\n\n    this.#game.text.write('MEOWMORY', 'center', 10, 48, 'inactive', ['sine']);\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (cell && !cell.open) {\n      if (this.#showingA && this.#showingB) {\n        this.#cancelShowing();\n      }\n\n      cell.open = true;\n      cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, cell.secret, cell.secret < 5 ? 'tabbycat' : null);\n      cell.setBaseColor('active');\n\n      if (this.#opened) {\n        if (cell.secret === this.#opened.secret) {\n          cell.found = true;\n          cell.activate(false);\n\n          this.#opened.found = true;\n          this.#opened.activate(false);\n\n          if (this.#grid.sprites.every(cell => cell.found)) {\n            if (this.#onwin) {\n              this.#onwin();\n            }\n          }\n        } else {\n          this.#showingA = this.#opened;\n          this.#showingB = cell;\n\n          this.#timer = this.#game.scheduleTimer(1000, () => this.#cancelShowing());\n        }\n\n        this.#opened = false;\n      } else {\n        this.#opened = cell;\n      }\n    }\n  }\n\n  #cancelShowing() {\n    (this.#timer || {}).disabled = true;\n\n    this.#showingA.open = false;\n    this.#showingA.content.enabled = false;\n    this.#showingA.setBaseColor('primary');\n\n    this.#showingB.open = false;\n    this.#showingB.content.enabled = false;\n    this.#showingB.setBaseColor('primary');\n\n    this.#grid.changed();\n    this.#game.text.changed();\n    this.#spriteBatch.changed();\n\n    this.#showingA = null;\n    this.#showingB = null;\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #width;\n  #height;\n  #grid;\n  #selected;\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#width = 10;\n    this.#height = 10;\n\n    const cellSize = Math.floor(Math.min((this.#game.renderer.width - 20) / this.#width, (this.#game.renderer.height - 110) / this.#height));\n\n    this.#grid = new Grid(this.#game, 'center', 100, this.#width, this.#height, cellSize, 0, 0, (cell) => this.#click(cell));\n\n    for (let i = 0; i < this.#width * this.#height; i++) {\n      const cell = this.#grid.sprites[i];\n      cell.index = i;\n      cell.write(this.#game.text, i, 12, 'highlight');\n    }\n\n    for (let i = 0; i < (this.#width * this.#height) / 2; i++) {\n      const cellA = this.#grid.sprites[Math.floor(Math.random() * this.#grid.sprites.length)];\n      const cellB = this.#grid.sprites[Math.floor(Math.random() * this.#grid.sprites.length)];\n\n      this.#swap(cellA, cellB);\n    }\n\n    this.#game.text.write('JIGSPAW', 'center', 10, 48, 'inactive', ['sine']);\n  }\n\n  update() {\n    this.#grid.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n  }\n\n  #click(cell) {\n    if (cell) {\n      if (this.#selected) {\n        this.#selected.activate(true);\n        this.#swap(this.#selected, cell);\n        this.#selected = null;\n        this.#checkGrid();\n      } else {\n        cell.activate(false);\n        this.#selected = cell;\n      }\n    }\n  }\n\n  #swap(cellA, cellB) {\n    const index = cellA.index;\n    cellA.index = cellB.index;\n    cellB.index = index;\n\n    cellA.write(this.#game.text, cellA.index, 12, 'highlight');\n    cellB.write(this.#game.text, cellB.index, 12, 'highlight');\n  }\n\n  #checkGrid() {\n    for (let i = 0; i < this.#width * this.#height; i++) {\n      if (this.#grid.sprites[i].index !== i) {\n        return;\n      }\n    }\n\n    this.#grid.disabled = true;\n\n    if (this.#onwin) {\n      this.#onwin();\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #rows;\n  #columns;\n  #maxRows;\n  #maxColumns;\n  #width;\n  #height;\n  #cellSize;\n  #grid;\n  #buttons;\n  #markButton;\n  #flagButton;\n  #mode;\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#rows = [[0], [1, 1], [2, 2], [5], [2, 1, 2, 1], [5, 2], [3, 1], [6, 2], [1, 5, 1], [8], [2, 4]];\n    this.#columns = [[1, 2], [4, 1, 1], [3, 6], [7], [3, 6], [4, 4], [1, 3], [2], [3, 1], [2, 3]];\n\n    this.#maxRows = Math.max(...this.#rows.map(row => row.length));\n    this.#maxColumns = Math.max(...this.#columns.map(column => column.length));\n\n    this.#width = this.#columns.length + this.#maxRows;\n    this.#height = this.#rows.length + this.#maxColumns;\n\n    const spacing = 2;\n\n    this.#cellSize = Math.floor(Math.min((this.#game.renderer.width - 20) / this.#width - (spacing * (this.#width - 1) / this.#width), (this.#game.renderer.height - 110) / this.#height - (spacing * (this.#height - 1) / this.#height)));\n\n    this.#grid = new Grid(this.#game, 'center', 100, this.#width, this.#height, this.#cellSize, spacing, spacing, (cell) => this.#click(cell));\n\n    for (let x = 0; x < this.#width; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (x < this.#maxRows || y < this.#maxColumns - this.#columns[x - this.#maxRows].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(this.#game.text, this.#columns[x - this.#maxRows][y - (this.#maxColumns - this.#columns[x - this.#maxRows].length)], this.#cellSize * 2 / 3, 'highlight');\n          cell.activate(false);\n        }\n      }\n    }\n\n    for (let y = 0; y < this.#width; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (y < this.#maxColumns || x < this.#maxRows - this.#rows[y - this.#maxColumns].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(this.#game.text, this.#rows[y - this.#maxColumns][x - (this.#maxRows - this.#rows[y - this.#maxColumns].length)], this.#cellSize * 2 / 3, 'highlight');\n          cell.activate(false);\n        }\n      }\n    }\n\n    this.#buttons = new Grid(this.#game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#markButton = this.#buttons.sprites[0];\n    this.#markButton.write(this.#game.text, 'O', 30, 'active');\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(this.#game.text, 'X', 30, 'active');\n\n    this.#setMode('mark');\n\n    this.#grid.changed();\n\n    this.#game.text.write('MEOWSTERPIECE', 'center', 10, 48, 'inactive', ['sine']);\n  }\n\n  update() {\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      this.#setMode('mark');\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      this.#setMode('flag');\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    if (cell) {\n      (cell.content || {}).enabled = false;\n\n      switch (this.#mode) {\n      case 'mark':\n        if (cell.state !== 'marked') {\n          cell.state = 'marked';\n          cell.setBaseColor('active');\n        } else {\n          cell.state = null;\n          cell.setBaseColor('primary');\n        }\n        break;\n\n      case 'flag':\n        cell.setBaseColor('primary');\n        if (cell.state !== 'flagged') {\n          cell.state = 'flagged';\n          cell.write(this.#game.text, 'X', this.#cellSize * 2 / 3, 'highlight');\n        } else {\n          cell.state = null;\n        }\n        break;\n      }\n\n      this.#game.text.changed();\n\n      this.#checkGrid();\n    }\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode('flag');\n    } else if (button === this.#markButton) {\n      this.#setMode('mark');\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#markButton.activate(this.#mode !== 'mark');\n    this.#flagButton.activate(this.#mode !== 'flag');\n\n    this.#buttons.changed();\n  }\n\n  #checkGrid() {\n    let gridCorrect = 0;\n\n    for (let x = this.#maxRows; x < this.#width; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        this.#grid.cellAt(x, y).setBaseColor('inactive');\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let y = this.#maxColumns; y < this.#height; y++) {\n        if (this.#grid.cellAt(x, y).state === 'marked') {\n          current += 1;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== 'marked' || y === this.#height - 1) {\n          if ((current > 0 || y === this.#height - 1) && index < this.#columns[x - this.#maxRows].length) {\n            if (current > this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor('highlight');\n            } else if (current === this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor('primary3');\n              correct += 1;\n            }\n\n            index += 1;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#columns[x - this.#maxRows].length) {\n        gridCorrect += 1;\n      }\n    }\n\n    for (let y = this.#maxColumns; y < this.#height; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        this.#grid.cellAt(x, y).setBaseColor('inactive');\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let x = this.#maxRows; x < this.#width; x++) {\n        if (this.#grid.cellAt(x, y).state === 'marked') {\n          current += 1;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== 'marked' || x === this.#width - 1) {\n          if ((current > 0 || x === this.#width - 1) && index < this.#rows[y - this.#maxColumns].length) {\n            if (current > this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor('highlight');\n            } else if (current === this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor('primary3');\n              correct += 1;\n            }\n\n            index += 1;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#rows[y - this.#maxColumns].length) {\n        gridCorrect += 1;\n      }\n    }\n\n    if (gridCorrect === (this.#width - this.#maxRows) + (this.#height - this.#maxColumns)) {\n      if (this.#onwin) {\n        this.#onwin();\n      }\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nimport Minigame from './Minigame';\nimport Meowsweeper from '../minigames/Meowsweeper';\nimport PawPawToe from '../minigames/PawPawToe';\nimport Sudocat from '../minigames/Sudocat';\nimport Meowmory from '../minigames/Meowmory';\nimport Jigspaw from '../minigames/Jigspaw';\nimport Meowsterpiece from '../minigames/Meowsterpiece';\n\nexport default class {\n  #game;\n  #grid;\n  #buttons;\n  #spriteBatch;\n  #minigameState;\n\n  constructor(game) {\n    this.#game = game;\n\n    this.#grid = new Grid(this.#game, 'center', 100, 6, 12, 128, 0, 0, null, '', 2);\n\n    this.#buttons = new Grid(this.#game, 'center', 132, 3, 4, 128, 64, 64, (button) => this.#buttonClick(button), '', 1);\n\n    this.#spriteBatch = new SpriteBatch(this.#game, 'textures/sprites.png', 16, false);\n\n    const minigames = [PawPawToe, Meowsweeper, Meowmory, Sudocat, Jigspaw, Meowsterpiece];\n    const xs = [73, 8, 73, 8, 73, 73];\n    const ys = [73, 73, 73, 73, 73, 73];\n    const types = [4, 2, 3, 3, 4, 2];\n    const colors = ['orangecat', 'whitecat', 'tabbycat', 'silvercat', 'blackcat', 'orangecat'];\n\n    for (let i = 0; i < 12; i++) {\n      if (minigames[i]) {\n        this.#buttons.sprites[i].minigame = minigames[i];\n        if (this.#game.minigamesWon.has(minigames[i])) {\n          this.#buttons.sprites[i].activate(false);\n          xs[i] = 39;\n          ys[i] = 39;\n          types[i] = 1;\n        }\n        this.#spriteBatch.add(this.#buttons.sprites[i].x + xs[i], this.#buttons.sprites[i].y + ys[i], 50, types[i], colors[i]);\n      } else {\n        this.#buttons.sprites[i].activate(false);\n      }\n    }\n\n    this.#game.text.write('HELP THE OTHER CATS\\nIN THE BUILDING!', 'center', 10, 32, 'active', ['typing', 'shake']);\n\n    for (let i = 0; i < this.#buttons.sprites.length; i++) {\n      const button = this.#buttons.sprites[i];\n      if (this.#game.minigamesWon.has(button.minigame)) {\n        button.activate(false);\n      }\n    }\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n    if (this.#minigameState) {\n      return this.#minigameState;\n    } else {\n      this.#buttons.update();\n\n      return this;\n    }\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#minigameState = new Minigame(this.#game, button.minigame);\n    }\n  }\n}\n","import Game from \"./Game\";\n\nconst game = new Game();\n\nfunction step(timestamp) {\n  requestAnimationFrame(step);\n  game.step(timestamp);\n}\n\nrequestAnimationFrame(step);\n","import Renderer from './Renderer';\nimport Input from './Input';\n\nimport Text from './Text';\nimport SpriteBatch from './SpriteBatch';\nimport Select from './states/Select';\n\nexport default class {\n  #started;\n  #timers;\n  #spriteBatch;\n  #cursor;\n  #state;\n  #shakeScreen;\n\n  constructor() {\n    this.renderer = new Renderer(() => {\n      if (!this.#started) {\n        this.#state = new Select(this);\n        this.#started = true;\n      }\n    });\n\n    this.input = new Input(this);\n    this.#timers = [];\n\n    this.text = new Text(this);\n    this.#spriteBatch = new SpriteBatch(this, 'textures/sprites.png', 16);\n    this.#cursor = this.#spriteBatch.add(0, 0, 26, 0, 'blackcat');\n    this.#cursor.hidden = true;\n\n    this.minigamesWon = new Set();\n  }\n\n  step(timestamp) {\n    this.timestamp = timestamp;\n    this.#update(timestamp);\n    this.#draw();\n  }\n\n  scheduleTimer(delay, onexpire, repeat) {\n    const timer = { start: this.timestamp ?? 0, delay: delay, onexpire: onexpire, repeat: repeat };\n    this.#timers.push(timer);\n    return timer;\n  }\n\n  shake(length) {\n    navigator.vibrate(length);\n    this.#shakeScreen = true;\n    this.scheduleTimer(length, () => this.#shakeScreen = false);\n  }\n\n  #update(timestamp) {\n    if (this.#shakeScreen) {\n      this.renderer.view[6] = Math.random() * 5;\n      this.renderer.view[7] = Math.random() * 5;\n    }\n\n    this.input.update();\n\n    if (this.input.mouse && this.#cursor.hidden) {\n      this.#cursor.hidden = false;\n      this.#spriteBatch.changed();\n    }\n\n    if (this.input.moved) {\n      this.#cursor.x = this.input.x - 6;\n      this.#cursor.y = this.input.y - 6;\n\n      this.#spriteBatch.changed();\n    }\n\n    this.#updateTimers(timestamp);\n\n    if (this.#state) {\n      this.#state = this.#state.update();\n    }\n\n    this.text.update(timestamp);\n    this.#spriteBatch.update();\n  }\n\n  #updateTimers(timestamp) {\n    for (const timer of this.#timers) {\n      if (timestamp >= timer.start + timer.delay && !timer.disabled) {\n        if (timer.repeat) {\n          timer.start = timestamp;\n        } else {\n          timer.expired = true;\n        }\n\n        if (timer.onexpire) {\n          timer.onexpire();\n        }\n      }\n    }\n\n    if (this.#timers.some(timer => timer.expired || timer.disabled)) {\n      this.#timers = this.#timers.filter(timer => !timer.expired && !timer.disabled);\n    }\n  }\n\n  #draw() {\n    this.renderer.clear();\n\n    if (this.#state) {\n      this.#state.draw();\n    }\n\n    this.text.draw();\n\n    this.#spriteBatch.draw();\n  }\n}\n"],"names":["Matrix3","Float32Array","identity","projection","width","height","Shader","program","viewUniformLocation","projectionUniformLocation","texUniformLocation","imageSizeUniformLocation","constructor","gl","vertexShaderSource","fragmentShaderSource","vertexShader","this","compileShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","bindAttribLocation","linkProgram","getUniformLocation","console","log","getProgramInfoLog","use","view","useProgram","setUniforms","uniformMatrix3fv","uniform1i","uniform1f","imageSize","type","source","shader","createShader","shaderSource","getShaderInfoLog","Renderer","onresize","shaders","textures","images","currentShader","currentVao","currentTexture","document","body","style","margin","padding","canvas","createElement","display","cursor","touchAction","ResizeObserver","clientWidth","clientHeight","horizontal","viewport","observe","box","appendChild","getContext","clearColor","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","quadBuffer","createQuadBuffer","Map","name","cachedShader","get","set","createVao","vao","createVertexArray","bindVertexArray","createBuffer","data","dynamic","buffer","updateBuffer","useBuffer","bufferData","ARRAY_BUFFER","DYNAMIC_DRAW","STATIC_DRAW","bindBuffer","setAttribute","location","size","stride","offset","divisor","vertexAttribPointer","FLOAT","enableVertexAttribArray","vertexAttribDivisor","loadTexture","path","smooth","cachedTexture","texture","createTexture","prepareTexture","imageIndex","length","image","Image","src","onload","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","draw","vertexCount","instanceCount","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","drawArraysInstanced","TRIANGLES","drawArrays","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","Uint8Array","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","NEAREST","TEXTURE_MAG_FILTER","Input","newKeyPresses","newKeyReleases","newPress","newRelease","lastX","lastY","game","renderer","addEventListener","event","mouse","pointerType","x","offsetX","y","offsetY","code","update","moved","press","release","keyPresses","newKeyPress","newKeyPressValue","Object","entries","keyReleases","newKeyRelease","newKeyReleaseValue","click","Sprite","color","angle","enabled","hidden","a","setColor","attributes","r","g","b","setBaseColor","baseColor","fromRGB","activate","active","inactive","write","text","content","toString","spriteBatch","add","SpriteBatch","instanceBuffer","spritesChanged","texturePath","sprites","changed","sprite","push","filter","map","flat","TextSegment","animations","delay","time","begin","timestamp","updated","animation","i","baseY","Math","sin","baseX","random","Text","segments","super","floor","max","split","s","segment","currX","currY","c","charCodeAt","Grid","cellSize","spacingX","spacingY","onclick","pressed","gridY","gridX","cell","fullW","fullH","disabled","input","newActive","cellAtPosition","onactivate","onpress","cellAt","index","indexAtPosition","relX","relY","indexX","trunc","indexY","Minigame","minigameClass","minigame","buttons","exitButton","exit","button","buttonClick","setup","Select","win","lose","scheduleTimer","minigamesWon","Meowsweeper","onwin","onlose","mines","fontSize","grid","digButton","flagButton","mode","started","min","setMode","start","open","mine","flagged","available","availableCell","abs","mineCell","splice","dy","dx","shake","opened","every","PawPawToe","timer","over","symbol","mark","checkGrid","symbolCounts","Sudocat","grids","digit","gridSize","gridSpacing","spacing","startX","setGrid","selectDigit","gridAt","starts","checkCells","valid","resetCells","checkRow","checkColumn","digitCounts","digitCount","Meowmory","showingA","showingB","slice","indexA","cellA","indexB","cellB","secret","cancelShowing","found","Jigspaw","selected","swap","Meowsterpiece","rows","columns","maxRows","maxColumns","markButton","row","column","state","gridCorrect","current","correct","minigameState","minigames","xs","ys","types","colors","has","timers","shakeScreen","Set","step","onexpire","repeat","navigator","vibrate","updateTimers","expired","some","requestAnimationFrame"],"mappings":"yBAAe,MAAMA,UAAgBC,aACnC,eAAOC,GACL,OAAO,IAAIF,EAAQ,CACjB,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,GAEd,CAEA,iBAAOG,CAAWC,EAAOC,GACvB,OAAO,IAAIL,EAAQ,CACjB,EAAMI,EAAO,EAAK,EAClB,GAAK,EAAOC,EAAQ,GACpB,EAAM,EAAK,GAEf,ECfa,MAAAC,EACbC,GACAC,GACAC,GACAC,GACAC,GAEA,WAAAC,CAAYC,EAAIC,EAAoBC,GAClC,MAAMC,EAAeC,MAAKC,EAAeL,EAAIA,EAAGM,cAAeL,GACzDM,EAAiBH,MAAKC,EAAeL,EAAIA,EAAGQ,gBAAiBN,GAEnEE,MAAKV,EAAWM,EAAGS,gBAEnBT,EAAGU,aAAaN,MAAKV,EAAUS,GAC/BH,EAAGU,aAAaN,MAAKV,EAAUa,GAE/BP,EAAGW,mBAAmBP,MAAKV,EAAU,EAA6B,kBAClEM,EAAGW,mBAAmBP,MAAKV,EAAU,EAA0B,eAC/DM,EAAGW,mBAAmBP,MAAKV,EAAU,EAA8B,kBAEnEM,EAAGW,mBAAmBP,MAAKV,EAAU,EAAoC,kBACzEM,EAAGW,mBAAmBP,MAAKV,EAAU,EAAgC,cACrEM,EAAGW,mBAAmBP,MAAKV,EAAU,EAAgC,cACrEM,EAAGW,mBAAmBP,MAAKV,EAAU,EAAiC,eACtEM,EAAGW,mBAAmBP,MAAKV,EAAU,EAAiC,eAEtEM,EAAGY,YAAYR,MAAKV,GAEpBU,MAAKT,EAAuBK,EAAGa,mBAAmBT,MAAKV,EAAU,QACjEU,MAAKR,EAA6BI,EAAGa,mBAAmBT,MAAKV,EAAU,cACvEU,MAAKP,EAAsBG,EAAGa,mBAAmBT,MAAKV,EAAU,OAChEU,MAAKN,EAA4BE,EAAGa,mBAAmBT,MAAKV,EAAU,aAEtEoB,QAAQC,IAAIf,EAAGgB,kBAAkBZ,MAAKV,GACxC,CAEA,GAAAuB,CAAIjB,EAAIkB,EAAM5B,GACZU,EAAGmB,WAAWf,MAAKV,GAEnBU,KAAKgB,YAAYpB,EAAIkB,EAAM5B,EAC7B,CAEA,WAAA8B,CAAYpB,EAAIkB,EAAM5B,GACa,MAA7Bc,MAAKT,GACPK,EAAGqB,iBAAiBjB,MAAKT,GAAsB,EAAOuB,GAGjB,MAAnCd,MAAKR,GACPI,EAAGqB,iBAAiBjB,MAAKR,GAA4B,EAAON,GAG9B,MAA5Bc,MAAKP,GACPG,EAAGsB,UAAUlB,MAAKP,EAAqB,GAGH,MAAlCO,MAAKN,GACPE,EAAGuB,UAAUnB,MAAKN,EAA2BM,KAAKoB,UAEtD,CAEA,EAAAnB,CAAeL,EAAIyB,EAAMC,GACvB,MAAMC,EAAS3B,EAAG4B,aAAaH,GAM/B,OALAzB,EAAG6B,aAAaF,EAAQD,GACxB1B,EAAGK,cAAcsB,GAEjBb,QAAQC,IAAIf,EAAG8B,iBAAiBH,IAEzBA,CACT,EChEa,MAAAI,EACbC,GACAhC,GACAiC,GACAC,GACAC,GACA7C,GACA8C,GACAC,GACAC,GAEA,WAAAvC,CAAYiC,GACV5B,MAAK4B,EAAYA,EAEjBO,SAASC,KAAKC,MAAMC,OAAS,IAC7BH,SAASC,KAAKC,MAAME,QAAU,IAE9BvC,KAAKwC,OAASL,SAASM,cAAc,UACrCzC,KAAKwC,OAAOH,MAAMK,QAAU,QAC5B1C,KAAKwC,OAAOH,MAAMlD,MAAQ,SAC1Ba,KAAKwC,OAAOH,MAAMjD,OAAS,SAC3BY,KAAKwC,OAAOH,MAAMM,OAAS,OAC3B3C,KAAKwC,OAAOH,MAAMO,YAAc,OAEhC,IAAIC,eAAe,KACjB7C,KAAKb,MAAQa,KAAKwC,OAAOM,YACzB9C,KAAKZ,OAASY,KAAKwC,OAAOO,aAE1B/C,KAAKwC,OAAOrD,MAAQa,KAAKb,MACzBa,KAAKwC,OAAOpD,OAASY,KAAKZ,OAE1BY,KAAKgD,WAAahD,KAAKb,MAAQa,KAAKZ,OAEpCY,MAAKJ,EAAIqD,SAAS,EAAG,EAAGjD,KAAKwC,OAAOrD,MAAOa,KAAKwC,OAAOpD,QACvDY,MAAKd,EAAcH,EAAQG,WAAWc,KAAKwC,OAAOrD,MAAOa,KAAKwC,OAAOpD,QAEjEY,MAAK4B,GACP5B,MAAK4B,MAENsB,QAAQlD,KAAKwC,OAAQ,CAAEW,IAAK,gBAE/BhB,SAASC,KAAKgB,YAAYpD,KAAKwC,QAE/BxC,MAAKJ,EAAMI,KAAKwC,OAAOa,WAAW,UAElCrD,MAAKJ,EAAIqD,SAAS,EAAG,EAAGjD,KAAKwC,OAAOrD,MAAOa,KAAKwC,OAAOpD,QACvDY,MAAKJ,EAAI0D,WAAW,IAAM,IAAM,IAAM,GAEtCtD,MAAKJ,EAAI2D,OAAOvD,MAAKJ,EAAI4D,OACzBxD,MAAKJ,EAAI6D,UAAUzD,MAAKJ,EAAI8D,UAAW1D,MAAKJ,EAAI+D,qBAEhD3D,KAAK4D,WAAa5D,MAAK6D,IAEvB7D,MAAK6B,EAAW,IAAIiC,IACpB9D,MAAK8B,EAAY,IAAIgC,IACrB9D,MAAK+B,EAAU,GAEf/B,KAAKc,KAAO/B,EAAQE,WACpBe,MAAKd,EAAcH,EAAQG,WAAWc,KAAKwC,OAAOrD,MAAOa,KAAKwC,OAAOpD,OACvE,CAEA,YAAAoC,CAAauC,EAAMlE,EAAoBC,GACrC,MAAMkE,EAAehE,MAAK6B,EAASoC,IAAIF,GAEvC,GAAIC,EACF,OAAOA,EAGT,MAAMzC,EAAS,IAAIlC,EAAOW,MAAKJ,EAAKC,EAAoBC,GAGxD,OAFAE,MAAK6B,EAASqC,IAAIH,EAAMxC,GAEjBA,CACT,CAEA,SAAA4C,GACE,MAAMC,EAAMpE,MAAKJ,EAAIyE,oBAIrB,OAFArE,MAAKJ,EAAI0E,gBAAgBF,GAElBA,CACT,CAEA,YAAAG,CAAaC,EAAMC,GACjB,MAAMC,EAAS1E,MAAKJ,EAAI2E,eAIxB,OAFAvE,KAAK2E,aAAaD,EAAQF,EAAMC,GAEzBC,CACT,CAEA,YAAAC,CAAaD,EAAQF,EAAMC,GACzBzE,KAAK4E,UAAUF,GAEf1E,MAAKJ,EAAIiF,WAAW7E,MAAKJ,EAAIkF,aAAcN,EAAMC,EAAUzE,MAAKJ,EAAImF,aAAe/E,MAAKJ,EAAIoF,YAC9F,CAEA,SAAAJ,CAAUF,GACR1E,MAAKJ,EAAIqF,WAAWjF,MAAKJ,EAAIkF,aAAcJ,EAC7C,CAEA,YAAAQ,CAAaC,EAAUC,EAAMC,EAAQC,EAAQC,GAC3CvF,MAAKJ,EAAI4F,oBAAoBL,EAAUC,EAAMpF,MAAKJ,EAAI6F,OAAO,EAAOJ,EAAQC,GAC5EtF,MAAKJ,EAAI8F,wBAAwBP,GAElB,MAAXI,GACFvF,MAAKJ,EAAI+F,oBAAoBR,EAAUI,EAE3C,CAEA,WAAAK,CAAYC,EAAMC,GAChB,MAAMC,EAAgB/F,MAAK8B,EAAUmC,IAAI4B,GAEzC,GAAIE,EACF,OAAOA,EAGT,MAAMC,EAAUhG,MAAKJ,EAAIqG,gBACzBjG,MAAKkG,EAAgBF,EAAS,KAAMF,GAEpC,MAAMK,EAAanG,MAAK+B,EAAQqE,OAC1BC,EAAQ,IAAIC,MAQlB,OANAD,EAAME,IAAMV,EACZQ,EAAMG,OAAS,IAAMxG,MAAKkG,EAAgBF,EAASG,EAAYL,GAE/D9F,MAAK8B,EAAUoC,IAAI2B,EAAMG,GACzBhG,MAAK+B,EAAQoE,GAAcE,EAEpBL,CACT,CAEA,KAAAS,GACEzG,MAAKJ,EAAI6G,MAAMzG,MAAKJ,EAAI8G,iBAAmB1G,MAAKJ,EAAI+G,iBACtD,CAEA,IAAAC,CAAKrF,EAAQ6C,EAAK4B,EAASa,EAAaC,GAClCvF,IAAWvB,MAAKgC,GAClBT,EAAOV,IAAIb,MAAKJ,EAAKI,KAAKc,KAAMd,MAAKd,GACrCc,MAAKgC,EAAiBT,GAEtBvB,MAAKgC,EAAehB,YAAYhB,MAAKJ,EAAKI,KAAKc,KAAMd,MAAKd,GAGxDkF,IAAQpE,MAAKiC,IACfjC,MAAKJ,EAAI0E,gBAAgBF,GACzBpE,MAAKiC,EAAcmC,GAGjB4B,IAAYhG,MAAKkC,IACnBlC,MAAKJ,EAAImH,cAAc/G,MAAKJ,EAAIoH,UAChChH,MAAKJ,EAAIqH,YAAYjH,MAAKJ,EAAIsH,WAAYlB,GAC1ChG,MAAKkC,EAAkB8D,GAGJ,MAAjBc,EACF9G,MAAKJ,EAAIuH,oBAAoBnH,MAAKJ,EAAIwH,UAAW,EAAGP,EAAaC,GAEjE9G,MAAKJ,EAAIyH,WAAWrH,MAAKJ,EAAIwH,UAAW,EAAGP,EAE/C,CAEA,EAAAhD,GACE,OAAO7D,KAAKuE,aAAa,IAAIvF,aAAa,CACxC,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,EAEf,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,KACb,EACN,CAEA,EAAAkH,CAAgBF,EAASG,EAAYL,GACnC9F,MAAKJ,EAAImH,cAAc/G,MAAKJ,EAAIoH,UAChChH,MAAKJ,EAAIqH,YAAYjH,MAAKJ,EAAIsH,WAAYlB,GAE1ChG,MAAKJ,EAAI0H,YAAYtH,MAAKJ,EAAI2H,gCAAgC,GAE5C,MAAdpB,EACFnG,MAAKJ,EAAI4H,WAAWxH,MAAKJ,EAAIsH,WAAY,EAAGlH,MAAKJ,EAAI6H,KAAMzH,MAAKJ,EAAI6H,KAAMzH,MAAKJ,EAAI8H,cAAe1H,MAAK+B,EAAQoE,IAE/GnG,MAAKJ,EAAI4H,WAAWxH,MAAKJ,EAAIsH,WAAY,EAAGlH,MAAKJ,EAAI6H,KAAM,EAAG,EAAG,EAAGzH,MAAKJ,EAAI6H,KAAMzH,MAAKJ,EAAI8H,cAAe,IAAIC,WAAW,CAAC,IAAK,EAAG,IAAK,OAG1I3H,MAAKJ,EAAIgI,cAAc5H,MAAKJ,EAAIsH,WAAYlH,MAAKJ,EAAIiI,eAAgB7H,MAAKJ,EAAIkI,eAC9E9H,MAAKJ,EAAIgI,cAAc5H,MAAKJ,EAAIsH,WAAYlH,MAAKJ,EAAImI,eAAgB/H,MAAKJ,EAAIkI,eAC9E9H,MAAKJ,EAAIgI,cAAc5H,MAAKJ,EAAIsH,WAAYlH,MAAKJ,EAAIoI,mBAAoBlC,EAAS9F,MAAKJ,EAAIqI,OAASjI,MAAKJ,EAAIsI,SAC7GlI,MAAKJ,EAAIgI,cAAc5H,MAAKJ,EAAIsH,WAAYlH,MAAKJ,EAAIuI,mBAAoBrC,EAAS9F,MAAKJ,EAAIqI,OAASjI,MAAKJ,EAAIsI,QAC/G,ECjMa,MAAAE,EACbC,GACAC,GACAC,GACAC,GACAC,GACAC,GAEA,WAAA/I,CAAYgJ,GACV3I,MAAKqI,EAAiB,CAAA,EACtBrI,MAAKsI,EAAkB,CAAA,EAEvBK,EAAKC,SAASpG,OAAOqG,iBAAiB,cAAeC,IACnD9I,KAAK+I,MAA8B,UAAtBD,EAAME,YAEnBhJ,KAAKiJ,EAAIH,EAAMI,QACflJ,KAAKmJ,EAAIL,EAAMM,UAGjBT,EAAKC,SAASpG,OAAOqG,iBAAiB,cAAeC,IACnD9I,KAAK+I,MAA8B,UAAtBD,EAAME,YAEnBhJ,KAAKiJ,EAAIH,EAAMI,QACflJ,KAAKmJ,EAAIL,EAAMM,QAEfpJ,MAAKuI,GAAY,IAGnBI,EAAKC,SAASpG,OAAOqG,iBAAiB,YAAaC,IACjD9I,KAAK+I,MAA8B,UAAtBD,EAAME,YAEnBhJ,KAAKiJ,EAAIH,EAAMI,QACflJ,KAAKmJ,EAAIL,EAAMM,QAEfpJ,MAAKwI,GAAc,IAGrBK,iBAAiB,UAAWC,IAC1B9I,MAAKqI,EAAeS,EAAMO,OAAQ,IAGpCR,iBAAiB,QAASC,IACxB9I,MAAKsI,EAAgBQ,EAAMO,OAAQ,GAEvC,CAEA,MAAAC,GACMtJ,KAAKiJ,IAAMjJ,MAAKyI,GAAUzI,KAAKmJ,IAAMnJ,MAAK0I,IAC5C1I,MAAKyI,EAASzI,KAAKiJ,EACnBjJ,MAAK0I,EAAS1I,KAAKmJ,EACnBnJ,KAAKuJ,OAAQ,GAGfvJ,KAAKwJ,OAAQ,EAETxJ,MAAKuI,IACPvI,KAAKwJ,OAAQ,EACbxJ,MAAKuI,GAAY,GAGnBvI,KAAKyJ,SAAU,EAEXzJ,MAAKwI,IACPxI,KAAKyJ,SAAU,EACfzJ,MAAKwI,GAAc,GAGrBxI,KAAK0J,WAAa,CAAA,EAElB,IAAK,MAAOC,EAAaC,KAAqBC,OAAOC,QAAQ9J,MAAKqI,GAC5DuB,IACF5J,KAAK0J,WAAWC,IAAe,EAC/B3J,MAAKqI,EAAesB,IAAe,GAIvC3J,KAAK+J,YAAc,CAAA,EAEnB,IAAK,MAAOC,EAAeC,KAAuBJ,OAAOC,QAAQ9J,MAAKsI,GAChE2B,IACFjK,KAAK+J,YAAYC,IAAiB,EAClChK,MAAKsI,EAAgB0B,IAAiB,EAG5C,CAEA,KAAAE,GACE,OAAQlK,KAAK+I,OAAS/I,KAAKyJ,UAAczJ,KAAK+I,OAAS/I,KAAKwJ,KAC9D,ECxFa,MAAAW,EACb,WAAAxK,CAAYsJ,EAAGE,EAAG/D,EAAM/D,EAAM+I,GAC5BpK,KAAKiJ,EAAIA,EACTjJ,KAAKmJ,EAAIA,EACTnJ,KAAKoF,KAAOA,EACZpF,KAAKqB,KAAOA,EACZrB,KAAKqK,MAAQ,EACbrK,KAAKsK,SAAU,EACftK,KAAKuK,QAAS,EACdvK,KAAKwK,EAAI,EAETxK,KAAKyK,SAASL,EAChB,CAEA,UAAAM,GACE,MAAO,CAAC1K,KAAKiJ,EAAGjJ,KAAKmJ,EAAGnJ,KAAKoF,KAAMpF,KAAKqB,KAAMrB,KAAK2K,EAAG3K,KAAK4K,EAAG5K,KAAK6K,EAAG7K,KAAKuK,OAAS,EAAIvK,KAAKwK,EAAGxK,KAAKqK,MACvG,CAEA,YAAAS,CAAaV,GACXpK,KAAK+K,UAAYX,EACjBpK,KAAKyK,SAASL,EAChB,CAEA,QAAAK,CAASL,GACP,OAAQA,GACR,IAAK,UACHpK,KAAK2K,EAAI,IACT3K,KAAK4K,EAAI,IACT5K,KAAK6K,EAAI,EACT,MACF,IAAK,aACH7K,KAAK2K,EAAI,IACT3K,KAAK4K,EAAI,IACT5K,KAAK6K,EAAI,IACX,IAAK,YACH7K,KAAK2K,EAAI,IACT3K,KAAK4K,EAAI,IACT5K,KAAK6K,EAAI,IACT,MACF,IAAK,SACH7K,KAAK2K,EAAI,IACT3K,KAAK4K,EAAI,GACT5K,KAAK6K,EAAI,IACT,MACF,IAAK,WACH7K,KAAK2K,EAAI,IACT3K,KAAK4K,EAAI,IACT5K,KAAK6K,EAAI,IACT,MAEF,IAAK,WACH7K,KAAK2K,EAAI,IACT3K,KAAK4K,EAAI,IACT5K,KAAK6K,EAAI,IACT,MACF,IAAK,YACH7K,KAAK2K,EAAI,GACT3K,KAAK4K,EAAI,IACT5K,KAAK6K,EAAI,IACT,MACF,IAAK,WACH7K,KAAK2K,EAAI,GACT3K,KAAK4K,EAAI,GACT5K,KAAK6K,EAAI,GACT,MACF,IAAK,WACH7K,KAAK2K,EAAI,IACT3K,KAAK4K,EAAI,IACT5K,KAAK6K,EAAI,IACT,MACF,IAAK,YACH7K,KAAK2K,EAAI,GACT3K,KAAK4K,EAAI,GACT5K,KAAK6K,EAAI,GACT,MAEF,IAAK,QACH7K,KAAK2K,EAAI,EACT3K,KAAK4K,EAAI,EACT5K,KAAK6K,EAAI,EACT,MAGF,IAAK,WACH7K,MAAKgL,EAAS,IAAK,IAAK,KACxB,MACF,IAAK,WACHhL,MAAKgL,EAAS,GAAI,IAAK,KACvB,MACF,IAAK,WACHhL,MAAKgL,EAAS,IAAK,IAAK,KACxB,MACF,IAAK,WACHhL,MAAKgL,EAAS,EAAG,IAAK,KACtB,MACF,IAAK,WACHhL,MAAKgL,EAAS,GAAI,IAAK,KACvB,MACF,IAAK,WACHhL,MAAKgL,EAAS,IAAK,IAAK,KACxB,MACF,IAAK,WACHhL,MAAKgL,EAAS,IAAK,EAAG,KACtB,MACF,IAAK,WACHhL,MAAKgL,EAAS,IAAK,EAAG,KACtB,MACF,IAAK,WACHhL,MAAKgL,EAAS,IAAK,IAAK,KACxB,MACF,IAAK,YACHhL,KAAK2K,EAAI,EACT3K,KAAK4K,EAAI,GACT5K,KAAK6K,EAAI,IACT,MAEF,IAAK,YACH7K,MAAKgL,EAAS,IAAK,IAAK,KACxB,MACF,IAAK,YACHhL,MAAKgL,EAAS,GAAI,IAAK,KACvB,MACF,IAAK,YACHhL,MAAKgL,EAAS,IAAK,IAAK,KACxB,MACF,IAAK,YACHhL,MAAKgL,EAAS,EAAG,IAAK,KACtB,MACF,IAAK,YACHhL,MAAKgL,EAAS,GAAI,IAAK,KACvB,MACF,IAAK,YACHhL,MAAKgL,EAAS,IAAK,IAAK,KACxB,MACF,IAAK,YACHhL,MAAKgL,EAAS,IAAK,EAAG,KACtB,MACF,IAAK,YACHhL,MAAKgL,EAAS,IAAK,EAAG,KACtB,MACF,IAAK,YACHhL,MAAKgL,EAAS,IAAK,IAAK,KACxB,MACF,IAAK,aACHhL,KAAK2K,EAAI,EACT3K,KAAK4K,EAAI,GACT5K,KAAK6K,EAAI,IACT,MAEF,QACE7K,KAAK2K,EAAI,EACT3K,KAAK4K,EAAI,EACT5K,KAAK6K,EAAI,EAGb,CAEA,QAAAI,CAASC,GACPlL,KAAKmL,UAAYD,EACjBlL,KAAKyK,SAASS,EAAUlL,KAAK+K,WAAa,UAAa,WACzD,CAEA,KAAAK,CAAMC,EAAMC,EAASlG,EAAMgF,EAAQ,WAChCpK,KAAKsL,SAAW,CAAA,GAAIhB,SAAU,EAC/BtK,KAAKsL,QAAUD,EAAKD,MAAME,EAAQC,WAAYvL,KAAKiJ,GAAKjJ,KAAKoF,KAAOA,GAAQ,EAAGpF,KAAKmJ,GAAKnJ,KAAKoF,KAAOA,GAAQ,EAAGA,EAAMgF,EACxH,CAEA,IAAAxD,CAAK4E,EAAapG,EAAM/D,EAAM+I,IAC3BpK,KAAKsL,SAAW,CAAA,GAAIhB,SAAU,EAC/BtK,KAAKsL,QAAUE,EAAYC,IAAIzL,KAAKiJ,GAAKjJ,KAAKoF,KAAOA,GAAQ,EAAGpF,KAAKmJ,GAAKnJ,KAAKoF,KAAOA,GAAQ,EAAGA,EAAM/D,EAAM+I,EAC/G,CAEA,EAAAY,CAASL,EAAGC,EAAGC,GACb7K,KAAK2K,EAAIA,EAAI,IACb3K,KAAK4K,EAAIA,EAAI,IACb5K,KAAK6K,EAAIA,EAAI,GACf,EC3Ka,MAAAa,EACb/C,GACAvH,GACAG,GACA6C,GACAuH,GACA3F,GACA4F,GAEA,WAAAjM,CAAYgJ,EAAMkD,EAAazK,EAAW0E,GACxC9F,MAAK2I,EAAQA,EACb3I,MAAKoB,EAAaA,EAElBpB,MAAKuB,EAAUvB,MAAK2I,EAAMC,SAASpH,aAAa,SClBrC,2jBCAA,4KFoBXxB,MAAKoE,EAAOpE,MAAK2I,EAAMC,SAASzE,YAEhCnE,MAAK2I,EAAMC,SAAShE,UAAU5E,MAAK2I,EAAMC,SAAShF,YAElD5D,MAAK2I,EAAMC,SAAS1D,aAAa,EAA6B,EAAG,GAAI,GACrElF,MAAK2I,EAAMC,SAAS1D,aAAa,EAA8B,EAAG,GAAI,GAEtElF,MAAK2L,EAAkB3L,MAAK2I,EAAMC,SAASrE,aAAa,IAAIvF,cAAgB,GAE5EgB,MAAK2I,EAAMC,SAAS1D,aAAa,EAAoC,EAAG,GAAI,EAAG,GAC/ElF,MAAK2I,EAAMC,SAAS1D,aAAa,EAAgC,EAAG,GAAI,EAAG,GAC3ElF,MAAK2I,EAAMC,SAAS1D,aAAa,EAAgC,EAAG,GAAI,GAAI,GAC5ElF,MAAK2I,EAAMC,SAAS1D,aAAa,EAAiC,EAAG,GAAI,GAAI,GAC7ElF,MAAK2I,EAAMC,SAAS1D,aAAa,EAAiC,EAAG,GAAI,GAAI,GAE7ElF,MAAKgG,EAAWhG,MAAK2I,EAAMC,SAAShD,YAAYiG,EAAa/F,GAE7D9F,KAAK8L,QAAU,GACf9L,KAAK+L,SACP,CAEA,GAAAN,CAAIxC,EAAGE,EAAG/D,EAAM/D,EAAM+I,GACV,WAANnB,IACFA,EAAIjJ,MAAK2I,EAAMC,SAASzJ,MAAQ,EAAIiG,EAAO,GAGnC,WAAN+D,IACFA,EAAInJ,MAAK2I,EAAMC,SAASxJ,OAAS,EAAIgG,EAAO,GAG9C,MAAM4G,EAAS,IAAI7B,EAAOlB,EAAGE,EAAG/D,EAAM/D,EAAM+I,GAK5C,OAHApK,KAAK8L,QAAQG,KAAKD,GAClBhM,KAAK+L,UAEEC,CACT,CAEA,OAAAD,GACE/L,MAAK4L,GAAkB,CACzB,CAEA,MAAAtC,GACMtJ,MAAK4L,IACP5L,KAAK8L,QAAU9L,KAAK8L,QAAQI,OAAOF,GAAUA,EAAO1B,SAEpDtK,MAAK2I,EAAMC,SAASjE,aAAa3E,MAAK2L,EAAiB,IAAI3M,aACzDgB,KAAK8L,QACAK,IAAIH,GAAUA,EAAOtB,cACrB0B,SACJ,GAEHpM,MAAK4L,GAAkB,EAE3B,CAEA,IAAAhF,GACE5G,MAAKuB,EAAQH,UAAYpB,MAAKoB,EAC9BpB,MAAK2I,EAAMC,SAAShC,KAAK5G,MAAKuB,EAASvB,MAAKoE,EAAMpE,MAAKgG,EAAU,EAAGhG,KAAK8L,QAAQ1F,OACnF,EG/Ea,MAAAiG,EACb,WAAA1M,CAAY0L,EAAMpC,EAAGE,EAAG/D,EAAMgF,EAAOkC,EAAYC,GAC/CvM,KAAKqL,KAAOA,EACZrL,KAAKiJ,EAAIA,EACTjJ,KAAKmJ,EAAIA,EACTnJ,KAAKoF,KAAOA,EACZpF,KAAKoK,MAAQA,EACbpK,KAAKsM,WAAaA,GAAc,GAChCtM,KAAKuM,MAAQA,GAAS,EAEtBvM,KAAK8L,QAAU,GACf9L,KAAKsK,SAAU,EAEftK,KAAKwM,KAAO,EACZxM,KAAKyM,MAAQ,IACf,CAEA,QAAAhC,CAASL,GACP,IAAK,MAAM4B,KAAUhM,KAAK8L,QACxBE,EAAOvB,SAASL,EAEpB,CAEA,MAAAd,CAAOoD,GACL,IAAIC,GAAU,EAEd,IAAK,MAAMC,KAAa5M,KAAKsM,WAC3B,OAAQM,GACR,IAAK,OACH,IAAK,IAAIC,EAAI,EAAGA,EAAI7M,KAAK8L,QAAQ1F,OAAQyG,IAAK,CAC5C,MAAMb,EAAShM,KAAK8L,QAAQe,GAC5Bb,EAAO7C,EAAI6C,EAAOc,MAAwC,GAAhCC,KAAKC,IAAIH,EAAIH,EAAY,IACrD,CACAC,GAAU,EACV,MACF,IAAK,QAGH,GAFA3M,KAAKwM,MAAQ,EAEK,IAAdxM,KAAKwM,KAAY,CACnBxM,KAAKwM,KAAO,EACZ,IAAK,IAAIK,EAAI,EAAGA,EAAI7M,KAAK8L,QAAQ1F,OAAQyG,IAAK,CAC5C,MAAMb,EAAShM,KAAK8L,QAAQe,GAC5Bb,EAAO/C,EAAI+C,EAAOiB,MAAwB,EAAhBF,KAAKG,SAC/BlB,EAAO7C,EAAI6C,EAAOc,MAAwB,EAAhBC,KAAKG,QACjC,CACF,CACAP,GAAU,EACV,MACF,IAAK,SACE3M,KAAKyM,QACRzM,KAAKyM,MAAQC,GAEf,IAAK,IAAIG,EAAI,EAAGA,EAAI7M,KAAK8L,QAAQ1F,OAAQyG,IAAK,CAC7B7M,KAAK8L,QAAQe,GACrBtC,QAAUmC,EAAY1M,KAAKyM,MAAQzM,KAAKuM,OAAS,IAAMM,CAChE,CACAF,GAAU,EAKd,OAAOA,CACT,EC3Da,MAAAQ,UAAczB,EAC3B/C,GACAyE,GAEA,WAAAzN,CAAYgJ,GACV0E,MAAM1E,EAAM,oBAAqB,IAEjC3I,MAAK2I,EAAQA,EACb3I,MAAKoN,EAAY,EACnB,CAEA,KAAAhC,CAAMC,EAAMpC,EAAGE,EAAG/D,EAAMgF,EAAQ,SAAUkC,EAAYC,GAC1C,WAANtD,IACFA,EAAI8D,KAAKO,MAAMtN,MAAK2I,EAAMC,SAASzJ,MAAQ,EAAK4N,KAAKQ,OAAOlC,EAAKmC,MAAM,MAAMrB,IAAIsB,GAAKA,EAAErH,SAAWhB,EAAQ,IAGnG,WAAN+D,IACFA,EAAI4D,KAAKO,MAAMtN,MAAK2I,EAAMC,SAASxJ,OAAS,EAAKiM,EAAKmC,MAAM,MAAMpH,OAAShB,EAAQ,IAGrF,MAAMsI,EAAU,IAAIrB,EAAYhB,EAAMpC,EAAGE,EAAG/D,EAAMgF,EAAOkC,EAAYC,GAErE,IAAIoB,EAAQ1E,EACR2E,EAAQzE,EAEZ,IAAK,MAAM0E,KAAKxC,EAAM,CACpB,IAAIhK,EAEJ,GAAU,OAANwM,EAAJ,CAuBA,GAhBIA,GAAK,KAAOA,GAAK,IACnBxM,EAAOwM,EAAEC,WAAW,GAAK,IAAIA,WAAW,GAC/BD,GAAK,KAAOA,GAAK,IAC1BxM,EAAO,GAAKwM,EAAEC,WAAW,GAAK,IAAIA,WAAW,GAC9B,MAAND,EACTxM,EAAO,GACQ,MAANwM,EACTxM,EAAO,GACQ,MAANwM,EACTxM,EAAO,GACQ,MAANwM,EACTxM,EAAO,GACQ,MAANwM,IACTxM,EAAO,IAGG,MAARA,EAAc,CAChB,MAAM2K,EAAShM,KAAKyL,IAAIkC,EAAOC,EAAOxI,EAAM/D,EAAM+I,GAClD4B,EAAOiB,MAAQU,EACf3B,EAAOc,MAAQc,EACfF,EAAQ5B,QAAQG,KAAKD,EACvB,CAEA2B,GAASvI,CAzBT,MAJEwI,GAASxI,EACTuI,EAAQ1E,CA6BZ,CAKA,OAHAjJ,MAAKoN,EAAUnB,KAAKyB,GACpB1N,KAAK+L,UAEE2B,CACT,CAEA,KAAAjH,GACE,IAAK,MAAMiH,KAAW1N,MAAKoN,EACzB,IAAK,MAAMpB,KAAU0B,EAAQ5B,QAC3BE,EAAO1B,SAAU,EAIrBtK,MAAKoN,EAAY,GACjBpN,KAAK+L,SACP,CAEA,MAAAzC,CAAOoD,GACL,IAAK,MAAMgB,KAAW1N,MAAKoN,EAAUlB,OAAOwB,IAAYA,EAAQpD,SAC9D,IAAK,MAAM0B,KAAU0B,EAAQ5B,QAC3BE,EAAO1B,SAAU,EAIrBtK,MAAKoN,EAAYpN,MAAKoN,EAAUlB,OAAOwB,GAAWA,EAAQpD,SAE1D,IAAK,MAAMoD,KAAW1N,MAAKoN,EACrBM,EAAQpE,OAAOoD,IACjB1M,KAAK+L,UAITsB,MAAM/D,QACR,EC/Fa,MAAAyE,UAAcrC,EAC3B/C,GACAqF,GACAC,GACAC,GACAC,GACA/D,GACAc,GACAkD,GAEA,WAAAzO,CAAYgJ,EAAMM,EAAGE,EAAGhK,EAAOC,EAAQ4O,EAAUC,EAAUC,EAAUC,EAAS/D,EAAQ,UAAW/I,EAAO,GACtGgM,MAAM1E,EAAM,qBAAsB,IAAW,GAE7C3I,MAAK2I,EAAQA,EAEH,WAANM,IACFA,EAAIjJ,MAAK2I,EAAMC,SAASzJ,MAAQ,EAAIA,GAAS6O,GAAYC,GAAY,IAAM9O,EAAQ,GAAKA,GAAS,GAGzF,WAANgK,IACFA,EAAInJ,MAAK2I,EAAMC,SAASxJ,OAAS,EAAIA,GAAU4O,GAAYE,GAAY,IAAM9O,EAAS,GAAKA,GAAU,GAGvGY,KAAKiJ,EAAIA,EACTjJ,KAAKmJ,EAAIA,EACTnJ,KAAKb,MAAQA,EACba,KAAKZ,OAASA,EACdY,MAAKgO,EAAYA,EACjBhO,MAAKiO,EAAYA,GAAY,EAC7BjO,MAAKkO,EAAYA,GAAY,EAC7BlO,MAAKmO,EAAWA,EAChBnO,MAAKoK,EAASA,EAEd,IAAK,IAAIiE,EAAQ,EAAGA,EAAQjP,EAAQiP,IAClC,IAAK,IAAIC,EAAQ,EAAGA,EAAQnP,EAAOmP,IAAS,CAC1C,MAAMC,EAAOvO,KAAKyL,IAAIzL,KAAKiJ,EAAIqF,EAAQtO,MAAKwO,EAAQxO,KAAKmJ,EAAIkF,EAAQrO,MAAKyO,EAAQzO,MAAKgO,EAAW3M,EAAM+I,GACxGmE,EAAK9D,SAASL,GACdmE,EAAKD,MAAQA,EACbC,EAAKF,MAAQA,CACf,CAEJ,CAEA,MAAA/E,GACE,IAAKtJ,KAAK0O,SAAU,CAClB,GAAI1O,MAAK2I,EAAMgG,MAAMpF,MAAO,CAC1B,IAAIqF,EAAY5O,MAAK6O,EAAgB7O,MAAK2I,EAAMgG,MAAM1F,EAAGjJ,MAAK2I,EAAMgG,MAAMxF,GACtEyF,GAAWzD,WACbyD,EAAY,MAGVA,IAAc5O,MAAKkL,GAAYlL,MAAKoO,IAClCpO,KAAK8O,YAAc9O,MAAKmO,IACtBnO,MAAK2I,EAAMgG,MAAM5F,QACd/I,MAAKkL,GAASC,UACjBnL,MAAKkL,GAAST,SAASzK,MAAKkL,GAASH,WAAa/K,MAAKoK,GAGzDwE,GAAWnE,SAAS,aACpBzK,KAAK+L,WAUX/L,MAAKkL,EAAU0D,CACjB,CAEI5O,MAAK2I,EAAMgG,MAAMnF,QACnBxJ,MAAKoO,EAAWpO,MAAKkL,GAEjBlL,KAAK+O,SAAW/O,MAAKmO,KACvBnO,MAAKoO,GAAU3D,SAAS,UACxBzK,KAAK+L,YASL/L,MAAK2I,EAAMgG,MAAMzE,UACflK,MAAKmO,IACPnO,MAAKoO,GAAU3D,SAASzK,MAAKoO,GAAUrD,WAAa/K,MAAKoK,GACzDpK,MAAKmO,EAASnO,MAAKkL,IAAYlL,MAAKoO,EAAWpO,MAAKoO,EAAW,KAAMpO,MAAKoO,GAC1EpO,KAAK+L,WAGP/L,MAAKoO,EAAW,KAEpB,CAEAf,MAAM/D,QACR,CAEA,MAAA0F,CAAO/F,EAAGE,GACR,GAAIF,GAAK,GAAKA,EAAIjJ,KAAKb,OAASgK,GAAK,GAAKA,EAAInJ,KAAKZ,OACjD,OAAOY,KAAK8L,QAAQ9L,KAAKb,MAAQgK,EAAIF,EAEzC,CAEA,EAAA4F,CAAgB5F,EAAGE,GACjB,MAAM8F,EAAQjP,MAAKkP,EAAiBjG,EAAGE,GAEvC,GAAI8F,EACF,OAAOjP,KAAKgP,OAAOC,EAAM,GAAIA,EAAM,GAEvC,CAEA,EAAAC,CAAiBjG,EAAGE,GAClB,MAAMgG,EAAOlG,EAAIjJ,KAAKiJ,EAChBmG,EAAOjG,EAAInJ,KAAKmJ,EAChBkG,EAAStC,KAAKuC,MAAMH,EAAOnP,MAAKwO,GAChCe,EAASxC,KAAKuC,MAAMF,EAAOpP,MAAKyO,GAEtC,GAAIU,GAAQ,GAAKC,GAAQ,GACrBD,EAAOE,EAASrP,MAAKwO,EAASxO,MAAKgO,GACnCoB,EAAOG,EAASvP,MAAKyO,EAASzO,MAAKgO,GACnCqB,GAAU,GAAKA,EAASrP,KAAKb,OAASoQ,GAAU,GAAKA,EAASvP,KAAKZ,OACrE,MAAO,CAACiQ,EAAQE,EAEpB,CAEA,KAAIf,GACF,OAAOxO,MAAKgO,EAAYhO,MAAKiO,CAC/B,CAEA,KAAIQ,GACF,OAAOzO,MAAKgO,EAAYhO,MAAKkO,CAC/B,ECrIa,MAAAsB,EACb7G,GACA8G,GACAC,GACAC,GACAC,GACAC,GAEA,WAAAlQ,CAAYgJ,EAAM8G,GAChBzP,MAAK2I,EAAQA,EACb3I,MAAKyP,EAAiBA,EAEtBzP,MAAK2P,EAAW,IAAI5B,EAAK/N,MAAK2I,EAAO3I,MAAK2I,EAAMC,SAASzJ,MAAQ,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAI2Q,GAAW9P,MAAK+P,EAAaD,IAEvH9P,MAAK4P,EAAc5P,MAAK2P,EAAS7D,QAAQ,GAEzC9L,MAAKgQ,GACP,CAEA,MAAA1G,GACE,OAAItJ,MAAK6P,GACP7P,MAAK2I,EAAM0C,KAAK5E,QAChBzG,MAAK4P,EAAYtE,QAAQhB,SAAU,EAE5B,IAAI2F,EAAOjQ,MAAK2I,KAEvB3I,MAAK0P,EAAUpG,SACftJ,MAAK2P,EAASrG,SAEPtJ,KAEX,CAEA,IAAA4G,GACE5G,MAAK0P,EAAU9I,OACf5G,MAAK2P,EAAS/I,MAChB,CAEA,EAAAoJ,GACEhQ,MAAK2I,EAAM0C,KAAK5E,QAChBzG,MAAK0P,EAAY,IAAI1P,MAAKyP,EAAezP,MAAK2I,EAAO,IAAM3I,MAAKkQ,IAAQ,IAAMlQ,MAAKmQ,KAEnFnQ,MAAK4P,EAAc5P,MAAK2P,EAAS7D,QAAQ,GACzC9L,MAAK4P,EAAYxE,MAAMpL,MAAK2I,EAAM0C,KAAM,IAAK,GAAI,SACnD,CAEA,EAAA6E,GACElQ,MAAK2I,EAAMyH,cAAc,IAAK,KAC5BpQ,MAAK2I,EAAM0H,aAAa5E,IAAIzL,MAAKyP,GACjCzP,MAAK6P,GAAQ,GAEjB,CAEA,EAAAM,GACEnQ,MAAK2I,EAAMyH,cAAc,IAAK,KAAQpQ,MAAKgQ,KAC7C,CAEA,EAAAD,CAAaD,GACPA,IAAW9P,MAAK4P,IAClB5P,MAAK6P,GAAQ,EAEjB,EC9Da,MAAAS,EACb3H,GACA4H,GACAC,GACArR,IACAC,IACAqR,IACAC,IACAC,IACAhB,GACAiB,IACAC,IACAC,IACAC,IAEA,WAAApR,CAAYgJ,EAAM4H,EAAOC,GACvBxQ,MAAK2I,EAAQA,EACb3I,MAAKuQ,EAASA,EACdvQ,MAAKwQ,EAAUA,EAEfxQ,MAAKb,GAASa,MAAK2I,EAAMC,SAAS5F,WAAa,GAAK,GACpDhD,MAAKZ,GAAUY,MAAK2I,EAAMC,SAAS5F,WAAa,GAAK,GACrDhD,MAAKyQ,GAAS,GAEdzQ,MAAK0Q,GAAY,GAEjB,MAEM1C,EAAWjB,KAAKO,MAAMP,KAAKiE,KAAKhR,MAAK2I,EAAMC,SAASzJ,MAAQ,IAAMa,MAAKb,GAF7D,GAEkFa,MAAKb,GAAS,GAAKa,MAAKb,IAAUa,MAAK2I,EAAMC,SAASxJ,OAAS,KAAOY,MAAKZ,GAF7J,GAEmLY,MAAKZ,GAAU,GAAKY,MAAKZ,KAE5NY,MAAK2Q,GAAQ,IAAI5C,EAAK/N,MAAK2I,EAAO,SAAU,IAAK3I,MAAKb,GAAQa,MAAKZ,GAAS4O,EAJ5D,IAIyFO,GAASvO,MAAKkK,GAAOqE,IAE9HvO,MAAK2P,EAAW,IAAI5B,EAAK/N,MAAK2I,EAAO,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAImH,GAAW9P,MAAK+P,EAAaD,IAE5F9P,MAAK4Q,GAAa5Q,MAAK2P,EAAS7D,QAAQ,GACxC9L,MAAK4Q,GAAWxF,MAAMpL,MAAK2I,EAAM0C,KAAM,IAAK,GAAI,UAEhDrL,MAAK6Q,GAAc7Q,MAAK2P,EAAS7D,QAAQ,GACzC9L,MAAK6Q,GAAYzF,MAAMpL,MAAK2I,EAAM0C,KAAM,IAAK,GAAI,UAEjDrL,MAAKiR,GAAS,OAEdjR,MAAK2I,EAAM0C,KAAKD,MAAM,cAAe,SAAU,GAAI,GAAI,WAAY,CAAC,QAEtE,CAEA,MAAA9B,IACMtJ,MAAK2I,EAAMgG,MAAMjF,WAAiB,MAAK1J,MAAK2I,EAAMgG,MAAMjF,WAAsB,YAChF1J,MAAKiR,GAAS,QAGZjR,MAAK2I,EAAMgG,MAAMjF,WAAiB,MAAK1J,MAAK2I,EAAMgG,MAAMjF,WAAuB,aACjF1J,MAAKiR,GAAS,QAGhBjR,MAAK2Q,GAAMrH,SACXtJ,MAAK2P,EAASrG,QAChB,CAEA,IAAA1C,GACE5G,MAAK2Q,GAAM/J,OACX5G,MAAK2P,EAAS/I,MAChB,CAEA,GAAAsD,CAAOqE,GACL,GAAIA,EACF,OAAQvO,MAAK8Q,IACb,IAAK,MACE9Q,MAAK+Q,IACR/Q,MAAKkR,GAAO3C,GAGdvO,MAAKmR,GAAM5C,EAAKD,MAAOC,EAAKF,OAExBE,EAAK6C,OACPpR,MAAK2Q,GAAMjC,UAAW,EAEtB1O,MAAK2I,EAAMyH,cAAc,IAAM,KAC7B,IAAK,MAAM7B,KAAQvO,MAAK2Q,GAAM7E,SAC3ByC,EAAKjD,SAAW,CAAA,GAAIhB,SAAU,EAGjCtK,MAAK2I,EAAM0C,KAAKU,UAEZ/L,MAAKwQ,GACPxQ,MAAKwQ,OAKX,MACF,IAAK,OACCjC,EAAK8C,SACP9C,EAAK8C,SAAU,EACf9C,EAAKjD,QAAQhB,SAAU,EACvBtK,MAAK2I,EAAM0C,KAAKU,YAEhBwC,EAAK8C,SAAU,EACf9C,EAAKnD,MAAMpL,MAAK2I,EAAM0C,KAAM,IAAKrL,MAAK0Q,GAAW,cAKzD,CAEA,GAAAQ,CAAO3C,GACL,MAAM+C,EAAYtR,MAAK2Q,GAAM7E,QAAQI,OAAOqF,GAAiBA,IAAkBhD,IAASxB,KAAKyE,IAAID,EAAcjD,MAAQC,EAAKD,OAAS,GAAKvB,KAAKyE,IAAID,EAAclD,MAAQE,EAAKF,OAAS,IAEvL,IAAK,IAAIxB,EAAI,EAAGA,EAAI7M,MAAKyQ,GAAQ5D,IAAK,CACpC,MAAMoC,EAAQlC,KAAKO,MAAMP,KAAKG,SAAWoE,EAAUlL,QAC7CqL,EAAWH,EAAUrC,GAC3BqC,EAAUI,OAAOzC,EAAO,GAExBwC,EAASL,MAAO,CAClB,CAEA,IAAK,IAAIjI,EAAI,EAAGA,EAAInJ,MAAK2Q,GAAMvR,OAAQ+J,IACrC,IAAK,IAAIF,EAAI,EAAGA,EAAIjJ,MAAK2Q,GAAMxR,MAAO8J,IAAK,CACzC,IAAIsF,EAAOvO,MAAK2Q,GAAM3B,OAAO/F,EAAGE,GAChC,IAAKoF,EAAK6C,KAAM,CACd7C,EAAKkC,MAAQ,EACb,IAAK,IAAIkB,GAAK,EAAIA,GAAM,EAAGA,IACzB,IAAK,IAAIC,GAAK,EAAIA,GAAM,EAAGA,IACrB5R,MAAK2Q,GAAM3B,OAAO/F,EAAI2I,EAAIzI,EAAIwI,IAAKP,OACrC7C,EAAKkC,OAAS,EAItB,CACF,CAGFzQ,MAAK+Q,IAAW,CAClB,CAEA,GAAAI,CAAMlI,EAAGE,GACPnJ,MAAK2I,EAAMkJ,MAAM,KACjB,MAAMtD,EAAOvO,MAAK2Q,GAAM3B,OAAO/F,EAAGE,GAOlC,GALIoF,GAAM8C,UACR9C,EAAK8C,SAAU,EACf9C,EAAKjD,QAAQhB,SAAU,GAGrBiE,GAAMjE,UAAYiE,GAAMuD,OAK1B,GAJAvD,EAAKuD,QAAS,EAEdvD,EAAKtD,UAAS,GAEK,IAAfsD,EAAKkC,MACPlC,EAAKhE,QAAS,EAEdvK,MAAKmR,GAAMlI,EAAGE,EAAI,GAClBnJ,MAAKmR,GAAMlI,EAAGE,EAAI,GAClBnJ,MAAKmR,GAAMlI,EAAI,EAAGE,GAClBnJ,MAAKmR,GAAMlI,EAAI,EAAGE,QAElB,GAAIoF,EAAK6C,KACP,IAAK,MAAMK,KAAYzR,MAAK2Q,GAAM7E,QAAQI,OAAOqC,GAAQA,EAAK6C,MAC5DK,EAASxG,UAAS,GAClBwG,EAASrG,MAAMpL,MAAK2I,EAAM0C,KAAM,IAAKrL,MAAK0Q,GAAW,mBAGvDnC,EAAKnD,MAAMpL,MAAK2I,EAAM0C,KAAMkD,EAAKkC,MAAOzQ,MAAK0Q,GAAW,WAAWnC,EAAKkC,SAK1EzQ,MAAK2Q,GAAM7E,QAAQI,OAAOqC,IAASA,EAAKuD,QAAQC,MAAMxD,GAAQA,EAAK6C,OACjEpR,MAAKuQ,GACPvQ,MAAKuQ,GAGX,CAEA,EAAAR,CAAaD,GACPA,IAAW9P,MAAK6Q,GAClB7Q,MAAKiR,GAAS,QACLnB,IAAW9P,MAAK4Q,IACzB5Q,MAAKiR,GAAS,MAElB,CAEA,GAAAA,CAASH,GACP9Q,MAAK8Q,GAAQA,EAEb9Q,MAAK4Q,GAAW3F,SAAwB,QAAfjL,MAAK8Q,IAC9B9Q,MAAK6Q,GAAY5F,SAAwB,SAAfjL,MAAK8Q,IAE/B9Q,MAAK2P,EAAS5D,SAChB,EC7La,MAAAiG,EACbrJ,GACA4H,GACAC,GACAG,IACAnF,IACAyG,IACAC,IAEA,WAAAvS,CAAYgJ,EAAM4H,EAAOC,GACvBxQ,MAAK2I,EAAQA,EACb3I,MAAKuQ,EAASA,EACdvQ,MAAKwQ,EAAUA,EAEfxQ,MAAK2Q,GAAQ,IAAI5C,EAAK/N,MAAK2I,EAAO,SAAU,SAAU,EAAG,EAAG,GAAI,GAAI,GAAK4F,GAASvO,MAAKkK,GAAOqE,IAC9FvO,MAAKwL,GAAe,IAAIE,EAAY1L,MAAK2I,EAAO,uBAAwB,IAAI,GAE5E3I,MAAK2I,EAAM0C,KAAKD,MAAM,cAAe,SAAU,GAAI,GAAI,WAAY,CAAC,QAEtE,CAEA,MAAA9B,GACEtJ,MAAK2Q,GAAMrH,SACXtJ,MAAKwL,GAAalC,QACpB,CAEA,IAAA1C,GACE5G,MAAK2Q,GAAM/J,OACX5G,MAAKwL,GAAa5E,MACpB,CAEA,GAAAsD,CAAOqE,GACDA,IAASA,EAAK4D,SAChBnS,MAAKoS,GAAM7D,EAAM,KAEjBvO,MAAK2Q,GAAMjC,UAAW,EAEtB1O,MAAKiS,GAASjS,MAAK2I,EAAMyH,cAAc,IAAM,KAC3C,IAAKpQ,MAAKkS,GAAO,CACf,MAAMZ,EAAYtR,MAAK2Q,GAAM7E,QAAQI,OAAOF,IAAWA,EAAOmG,QAE1Db,EAAUlL,OAAS,IACrBpG,MAAKoS,GAAMd,EAAUvE,KAAKO,MAAMP,KAAKG,SAAWoE,EAAUlL,SAAU,KAEpEpG,MAAK2Q,GAAMjC,UAAW,EACtB1O,MAAK2Q,GAAM5E,UAEf,IAGN,CAEA,GAAAqG,CAAM7D,EAAM4D,GACLnS,MAAKkS,KACR3D,EAAK4D,OAASA,EAEd5D,EAAKtD,UAAS,GAEdsD,EAAK3H,KAAK5G,MAAKwL,GAAc,GAAI,EAAc,MAAX2G,EAAiB,WAAa,aAElEnS,MAAKqS,KAET,CAEA,GAAAA,GACE,IAAK,IAAIlJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMmJ,EAAe,IAAIxO,IAEzB,IAAK,IAAImF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMsF,EAAOvO,MAAK2Q,GAAM3B,OAAO/F,EAAGE,GAElCmJ,EAAapO,IAAIqK,EAAK4D,QAASG,EAAarO,IAAIsK,EAAK4D,SAAW,GAAK,EACvE,CAEA,GAA8B,IAA1BG,EAAarO,IAAI,KACnB,OAAOjE,MAAKkQ,EAAK,KAGnB,GAA8B,IAA1BoC,EAAarO,IAAI,KACnB,OAAOjE,MAAKkQ,EAAK,IAErB,CAEA,IAAK,IAAIjH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMqJ,EAAe,IAAIxO,IAEzB,IAAK,IAAIqF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMoF,EAAOvO,MAAK2Q,GAAM3B,OAAO/F,EAAGE,GAElCmJ,EAAapO,IAAIqK,EAAK4D,QAASG,EAAarO,IAAIsK,EAAK4D,SAAW,GAAK,EACvE,CAEA,GAA8B,IAA1BG,EAAarO,IAAI,KACnB,OAAOjE,MAAKkQ,EAAK,KAGnB,GAA8B,IAA1BoC,EAAarO,IAAI,KACnB,OAAOjE,MAAKkQ,EAAK,IAErB,CAEA,MAAuC,MAAnClQ,MAAK2Q,GAAM3B,OAAO,EAAG,GAAGmD,QAAqD,MAAnCnS,MAAK2Q,GAAM3B,OAAO,EAAG,GAAGmD,QAAqD,MAAnCnS,MAAK2Q,GAAM3B,OAAO,EAAG,GAAGmD,OACvGnS,MAAKkQ,EAAK,KAGoB,MAAnClQ,MAAK2Q,GAAM3B,OAAO,EAAG,GAAGmD,QAAqD,MAAnCnS,MAAK2Q,GAAM3B,OAAO,EAAG,GAAGmD,QAAqD,MAAnCnS,MAAK2Q,GAAM3B,OAAO,EAAG,GAAGmD,OACvGnS,MAAKkQ,EAAK,KAGoB,MAAnClQ,MAAK2Q,GAAM3B,OAAO,EAAG,GAAGmD,QAAqD,MAAnCnS,MAAK2Q,GAAM3B,OAAO,EAAG,GAAGmD,QAAqD,MAAnCnS,MAAK2Q,GAAM3B,OAAO,EAAG,GAAGmD,OACvGnS,MAAKkQ,EAAK,KAGoB,MAAnClQ,MAAK2Q,GAAM3B,OAAO,EAAG,GAAGmD,QAAqD,MAAnCnS,MAAK2Q,GAAM3B,OAAO,EAAG,GAAGmD,QAAqD,MAAnCnS,MAAK2Q,GAAM3B,OAAO,EAAG,GAAGmD,OACvGnS,MAAKkQ,EAAK,UADnB,CAGF,CAEA,EAAAA,CAAKiC,GACHnS,MAAKkS,IAAQ,EACblS,MAAK2Q,GAAMjC,UAAW,GACrB1O,MAAKiS,IAAU,CAAA,GAAIvD,UAAW,EAEhB,MAAXyD,EACEnS,MAAKuQ,GACPvQ,MAAKuQ,IAEa,MAAX4B,GACLnS,MAAKwQ,GACPxQ,MAAKwQ,GAGX,ECpIa,MAAA+B,EACb5J,GACA4H,GACA/E,IACAgH,IACAxE,GACA2B,GACA8C,IAEA,WAAA9S,CAAYgJ,EAAM4H,GAChBvQ,MAAK2I,EAAQA,EACb3I,MAAKuQ,EAASA,EAEdvQ,MAAKwL,GAAe,IAAIE,EAAY1L,MAAK2I,EAAO,uBAAwB,IAAI,GAE5E3I,MAAKwS,GAAS,GAEd,MAEME,EAAW3F,KAAKO,MAAMP,KAAKiE,KAAKhR,MAAK2I,EAAMC,SAASzJ,MAAQ,IAAM,EAAKwT,GAAwB,GAAK3S,MAAK2I,EAAMC,SAASxJ,OAAS,KAAO,EAAKuT,GAAwB,IAI3K3S,MAAKgO,EAAYjB,KAAKO,MAAMP,KAAKiE,KAAK0B,EAAW,GAAK,EAAKE,GAAoB,GAAKF,EAAW,GAAK,EAAKE,GAAoB,IAE7H,MAAMC,EAAS7S,MAAK2I,EAAMC,SAASzJ,MAAQ,EAAI,GAAKuT,EAAWC,GAAwB,GAAK,EAE5F,IAAK,IAAIxJ,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAM0H,EAAO,IAAI5C,EAAK/N,MAAK2I,EAAOkK,EAAS5J,GAAKyJ,EAZhC,IAYyD,IAAMvJ,GAAKuJ,EAZpE,IAY6F,EAAG,EAAG1S,MAAKgO,EAR5G,IAQ0IO,GAASvO,MAAKkK,GAAOqE,IAC3KvO,MAAKwS,GAAOvG,KAAK0E,EACnB,CAGF3Q,MAAK2P,EAAW,IAAI5B,EAAK/N,MAAK2I,EAAO,SAAU3I,MAAK2I,EAAMC,SAASxJ,OAAS,GAAI,GAAI,EAAG,GAAI,GAAI,EAAI0Q,GAAW9P,MAAK+P,EAAaD,IAEhI,IAAK,IAAI2C,EAAQ,EAAGA,GAAS,GAAIA,IAAS,CACxC,MAAM3C,EAAS9P,MAAK2P,EAAS7D,QAAQ2G,EAAQ,GAC7C3C,EAAOlJ,KAAK5G,MAAKwL,GAA+B,EAAjBxL,MAAKgO,EAAgB,EAAGyE,EAAQ,GAC/D3C,EAAO2C,MAAQA,GAAS,EAAIA,EAAQ,IACtC,CAEAzS,MAAK8S,KACL9S,MAAK+S,GAAa,GAElB/S,MAAK2I,EAAM0C,KAAKD,MAAM,UAAW,SAAU,GAAI,GAAI,WAAY,CAAC,QAClE,CAEA,MAAA9B,GACE,IAAK,IAAImJ,EAAQ,EAAGA,GAAS,EAAGA,IAC1BzS,MAAK2I,EAAMgG,MAAMjF,WAAW,QAAQ+I,MACtCzS,MAAK+S,GAAaN,IAIlBzS,MAAK2I,EAAMgG,MAAMjF,WAAiB,MAAK1J,MAAK2I,EAAMgG,MAAMjF,WAAsB,YAC5E1J,MAAKyS,GAAS,GAChBzS,MAAK+S,GAAa/S,MAAKyS,GAAS,IAIhCzS,MAAK2I,EAAMgG,MAAMjF,WAAiB,MAAK1J,MAAK2I,EAAMgG,MAAMjF,WAAuB,aAC7E1J,MAAKyS,GAAS,GAChBzS,MAAK+S,GAAa/S,MAAKyS,GAAS,IAIhCzS,MAAK2I,EAAMgG,MAAMjF,WAAiB,MAAK1J,MAAK2I,EAAMgG,MAAMjF,WAAmB,SAC7E1J,MAAK+S,GAAa,MAGpB/S,MAAKwL,GAAalC,SAElB,IAAK,MAAMqH,KAAQ3Q,MAAKwS,GACtB7B,EAAKrH,SAGPtJ,MAAK2P,EAASrG,QAChB,CAEA,IAAA1C,GACE,IAAK,MAAM+J,KAAQ3Q,MAAKwS,GACtB7B,EAAK/J,OAGP5G,MAAK2P,EAAS/I,OACd5G,MAAKwL,GAAa5E,MACpB,CAEA,GAAAoM,CAAQ/J,EAAGE,GACT,OAAOnJ,MAAKwS,GAA2B,EAApBzF,KAAKO,MAAMnE,EAAI,GAAS4D,KAAKO,MAAMrE,EAAI,GAC5D,CAEA,GAAA+F,CAAQ/F,EAAGE,GACT,OAAOnJ,MAAKgT,GAAQ/J,EAAGE,GAAG6F,OAAO/F,EAAI,EAAGE,EAAI,EAC9C,CAEA,GAAA2J,GACE,MAAMG,EAAS,CACb,CACE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAItB/B,EAAQ+B,EAAOlG,KAAKO,MAAMP,KAAKG,SAAW+F,EAAO7M,SAEvD,IAAK,IAAI+C,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMwJ,EAAQvB,EAAU,EAAJ/H,EAAQF,GAC5B,GAAc,IAAVwJ,EAAa,CACf,MAAMlE,EAAOvO,MAAKgP,GAAQ/F,EAAGE,GAC7BoF,EAAKtD,UAAS,GACdsD,EAAKkE,MAAQA,EACblE,EAAK3H,KAAK5G,MAAKwL,GAA+B,EAAjBxL,MAAKgO,EAAgB,EAAGyE,EAAQ,EAC/D,CACF,CAEJ,CAEA,GAAAvI,CAAOqE,GACDA,IACFA,EAAKkE,MAAQzS,MAAKyS,IACjBlE,EAAKjD,SAAW,CAAA,GAAIhB,SAAU,EAE3BtK,MAAKyS,IACPlE,EAAK3H,KAAK5G,MAAKwL,GAA+B,EAAjBxL,MAAKgO,EAAgB,EAAGhO,MAAKyS,GAAS,GAGjEzS,MAAKkT,MACHlT,MAAKuQ,GACPvQ,MAAKuQ,IAITvQ,MAAK2I,EAAM0C,KAAKU,UAChB/L,MAAKwL,GAAaO,UAEtB,CAEA,GAAAmH,GACE,IAAIC,GAAQ,EAEZnT,MAAKoT,KAEL,IAAK,IAAIvG,EAAI,EAAGA,EAAI,EAAGA,IACrBsG,GAASnT,MAAKqT,GAAUxG,GACxBsG,GAASnT,MAAKsT,GAAazG,GAC3BsG,GAASnT,MAAKqS,GAAWxF,GAG3B,OAAOsG,CACT,CAEA,GAAAC,GACE,IAAK,IAAIjK,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMsF,EAAOvO,MAAKgP,GAAQ/F,EAAGE,GACxBoF,EAAKpD,UACRoD,EAAKzD,aAAa,UAEtB,CAGF,IAAK,IAAI+B,EAAI,EAAGA,EAAI,EAAGA,IACrB7M,MAAKwS,GAAO3F,GAAGd,SAEnB,CAEA,GAAAsH,CAAUpK,GACR,IAAIkK,GAAQ,EACZ,MAAMI,EAAc,IAAIzP,IAExB,IAAK,IAAIqF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMoF,EAAOvO,MAAKgP,GAAQ/F,EAAGE,GAC7BoK,EAAYrP,IAAIqK,EAAKkE,OAAQc,EAAYtP,IAAIsK,EAAKkE,QAAU,GAAK,EACnE,CAEA,IAAK,MAAOA,EAAOe,KAAeD,EAAYzJ,UAC5C,GAAa,MAAT2I,EACFU,GAAQ,OACH,GAAIK,EAAa,EAAG,CACzBL,GAAQ,EAER,IAAK,IAAIhK,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMoF,EAAOvO,MAAKgP,GAAQ/F,EAAGE,GACxBoF,EAAKpD,UAAYoD,EAAKkE,OAASA,IAClClE,EAAKzD,aAAa,UAClB9K,MAAKgT,GAAQ/J,EAAGE,GAAG4C,UAEvB,CACF,CAGF,OAAOoH,CACT,CAEA,GAAAG,CAAanK,GACX,IAAIgK,GAAQ,EACZ,MAAMI,EAAc,IAAIzP,IAExB,IAAK,IAAImF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMsF,EAAOvO,MAAKgP,GAAQ/F,EAAGE,GAC7BoK,EAAYrP,IAAIqK,EAAKkE,OAAQc,EAAYtP,IAAIsK,EAAKkE,QAAU,GAAK,EACnE,CAEA,IAAK,MAAOA,EAAOe,KAAeD,EAAYzJ,UAC5C,GAAa,MAAT2I,EACFU,GAAQ,OACH,GAAIK,EAAa,EAAG,CACzBL,GAAQ,EAER,IAAK,IAAIlK,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMsF,EAAOvO,MAAKgP,GAAQ/F,EAAGE,GACxBoF,EAAKpD,UAAYoD,EAAKkE,OAASA,IAClClE,EAAKzD,aAAa,UAClB9K,MAAKgT,GAAQ/J,EAAGE,GAAG4C,UAEvB,CACF,CAGF,OAAOoH,CACT,CAEA,GAAAd,CAAWpD,GACT,IAAIkE,GAAQ,EACZ,MAAMI,EAAc,IAAIzP,IAElB6M,EAAO3Q,MAAKwS,GAAOvD,GAEzB,IAAK,IAAIpC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAM0B,EAAOoC,EAAK7E,QAAQe,GAC1B0G,EAAYrP,IAAIqK,EAAKkE,OAAQc,EAAYtP,IAAIsK,EAAKkE,QAAU,GAAK,EACnE,CAEA,IAAK,MAAOA,EAAOe,KAAeD,EAAYzJ,UAC5C,GAAa,MAAT2I,EACFU,GAAQ,OACH,GAAIK,EAAa,EAAG,CACzBL,GAAQ,EAER,IAAK,IAAItG,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAM0B,EAAOoC,EAAK7E,QAAQe,GACrB0B,EAAKpD,UAAYoD,EAAKkE,OAASA,IAClClE,EAAKzD,aAAa,UAClB6F,EAAK5E,UAET,CACF,CAGF,OAAOoH,CACT,CAEA,EAAApD,CAAaD,GACPA,GACF9P,MAAK+S,GAAajD,EAAO2C,MAE7B,CAEA,GAAAM,CAAaN,GACXzS,MAAKyS,GAASA,EAEd,IAAK,MAAM3C,KAAU9P,MAAK2P,EAAS7D,QACjCgE,EAAO7E,UAAS,GAGlBjL,MAAK2P,EAAS7D,QAAiB,MAAT2G,EAAgBA,EAAQ,EAAI,GAAGxH,UAAS,GAE9DjL,MAAK2P,EAAS5D,SAChB,ECtRa,MAAA0H,EACb9K,GACA4H,GACAvC,GACA2C,IACAnF,IACAsG,IACA4B,IACAC,IACA1B,IAEA,WAAAtS,CAAYgJ,EAAM4H,GAChBvQ,MAAK2I,EAAQA,EACb3I,MAAKuQ,EAASA,EAOdvQ,MAAKgO,EAAYjB,KAAKO,MAAMP,KAAKiE,KAAKhR,MAAK2I,EAAMC,SAASzJ,MAAQ,IALpD,EAKmEyT,GALnE,GAKoG5S,MAAK2I,EAAMC,SAASxJ,OAAS,KAJhI,EAI6I,OAE5JY,MAAK2Q,GAAQ,IAAI5C,EAAK/N,MAAK2I,EAAO,SAAU,IAP9B,EACC,EAMiD3I,MAAKgO,EAJrD,MAImFO,GAASvO,MAAKkK,GAAOqE,IAExHvO,MAAKwL,GAAe,IAAIE,EAAY1L,MAAK2I,EAAO,uBAAwB,IAAI,GAE5E,MAAM2I,EAAYtR,MAAK2Q,GAAM7E,QAAQ8H,QAErC,IAAK,IAAI/G,EAAI,EAAGA,EAAI,GAAsBA,IAAK,CAC7C,MAAMgH,EAAS9G,KAAKO,MAAMP,KAAKG,SAAWoE,EAAUlL,QAC9C0N,EAAQxC,EAAUuC,GACxBvC,EAAUI,OAAOmC,EAAQ,GAEzB,MAAME,EAAShH,KAAKO,MAAMP,KAAKG,SAAWoE,EAAUlL,QAC9C4N,EAAQ1C,EAAUyC,GACxBzC,EAAUI,OAAOqC,EAAQ,GAEzBD,EAAMG,OAASpH,EACfmH,EAAMC,OAASpH,CACjB,CAEA7M,MAAK2I,EAAM0C,KAAKD,MAAM,WAAY,SAAU,GAAI,GAAI,WAAY,CAAC,QACnE,CAEA,MAAA9B,GACEtJ,MAAK2Q,GAAMrH,SACXtJ,MAAKwL,GAAalC,QACpB,CAEA,IAAA1C,GACE5G,MAAK2Q,GAAM/J,OACX5G,MAAKwL,GAAa5E,MACpB,CAEA,GAAAsD,CAAOqE,GACDA,IAASA,EAAK4C,OACZnR,MAAK0T,IAAa1T,MAAK2T,IACzB3T,MAAKkU,KAGP3F,EAAK4C,MAAO,EACZ5C,EAAK3H,KAAK5G,MAAKwL,GAA+B,EAAjBxL,MAAKgO,EAAgB,EAAGO,EAAK0F,OAAQ1F,EAAK0F,OAAS,EAAI,WAAa,MACjG1F,EAAKzD,aAAa,UAEd9K,MAAK8R,IACHvD,EAAK0F,SAAWjU,MAAK8R,GAAQmC,QAC/B1F,EAAK4F,OAAQ,EACb5F,EAAKtD,UAAS,GAEdjL,MAAK8R,GAAQqC,OAAQ,EACrBnU,MAAK8R,GAAQ7G,UAAS,GAElBjL,MAAK2Q,GAAM7E,QAAQiG,MAAMxD,GAAQA,EAAK4F,QACpCnU,MAAKuQ,GACPvQ,MAAKuQ,MAITvQ,MAAK0T,GAAY1T,MAAK8R,GACtB9R,MAAK2T,GAAYpF,EAEjBvO,MAAKiS,GAASjS,MAAK2I,EAAMyH,cAAc,IAAM,IAAMpQ,MAAKkU,OAG1DlU,MAAK8R,IAAU,GAEf9R,MAAK8R,GAAUvD,EAGrB,CAEA,GAAA2F,IACGlU,MAAKiS,IAAU,CAAA,GAAIvD,UAAW,EAE/B1O,MAAK0T,GAAUvC,MAAO,EACtBnR,MAAK0T,GAAUpI,QAAQhB,SAAU,EACjCtK,MAAK0T,GAAU5I,aAAa,WAE5B9K,MAAK2T,GAAUxC,MAAO,EACtBnR,MAAK2T,GAAUrI,QAAQhB,SAAU,EACjCtK,MAAK2T,GAAU7I,aAAa,WAE5B9K,MAAK2Q,GAAM5E,UACX/L,MAAK2I,EAAM0C,KAAKU,UAChB/L,MAAKwL,GAAaO,UAElB/L,MAAK0T,GAAY,KACjB1T,MAAK2T,GAAY,IACnB,EC7Ga,MAAAS,EACbzL,GACA4H,GACApR,IACAC,IACAuR,IACA0D,IAEA,WAAA1U,CAAYgJ,EAAM4H,GAChBvQ,MAAK2I,EAAQA,EACb3I,MAAKuQ,EAASA,EAEdvQ,MAAKb,GAAS,GACda,MAAKZ,GAAU,GAEf,MAAM4O,EAAWjB,KAAKO,MAAMP,KAAKiE,KAAKhR,MAAK2I,EAAMC,SAASzJ,MAAQ,IAAMa,MAAKb,IAASa,MAAK2I,EAAMC,SAASxJ,OAAS,KAAOY,MAAKZ,KAE/HY,MAAK2Q,GAAQ,IAAI5C,EAAK/N,MAAK2I,EAAO,SAAU,IAAK3I,MAAKb,GAAQa,MAAKZ,GAAS4O,EAAU,EAAG,EAAIO,GAASvO,MAAKkK,GAAOqE,IAElH,IAAK,IAAI1B,EAAI,EAAGA,EAAI7M,MAAKb,GAASa,MAAKZ,GAASyN,IAAK,CACnD,MAAM0B,EAAOvO,MAAK2Q,GAAM7E,QAAQe,GAChC0B,EAAKU,MAAQpC,EACb0B,EAAKnD,MAAMpL,MAAK2I,EAAM0C,KAAMwB,EAAG,GAAI,YACrC,CAEA,IAAK,IAAIA,EAAI,EAAGA,EAAK7M,MAAKb,GAASa,MAAKZ,GAAW,EAAGyN,IAAK,CACzD,MAAMiH,EAAQ9T,MAAK2Q,GAAM7E,QAAQiB,KAAKO,MAAMP,KAAKG,SAAWlN,MAAK2Q,GAAM7E,QAAQ1F,SACzE4N,EAAQhU,MAAK2Q,GAAM7E,QAAQiB,KAAKO,MAAMP,KAAKG,SAAWlN,MAAK2Q,GAAM7E,QAAQ1F,SAE/EpG,MAAKsU,GAAMR,EAAOE,EACpB,CAEAhU,MAAK2I,EAAM0C,KAAKD,MAAM,UAAW,SAAU,GAAI,GAAI,WAAY,CAAC,QAClE,CAEA,MAAA9B,GACEtJ,MAAK2Q,GAAMrH,QACb,CAEA,IAAA1C,GACE5G,MAAK2Q,GAAM/J,MACb,CAEA,GAAAsD,CAAOqE,GACDA,IACEvO,MAAKqU,IACPrU,MAAKqU,GAAUpJ,UAAS,GACxBjL,MAAKsU,GAAMtU,MAAKqU,GAAW9F,GAC3BvO,MAAKqU,GAAY,KACjBrU,MAAKqS,OAEL9D,EAAKtD,UAAS,GACdjL,MAAKqU,GAAY9F,GAGvB,CAEA,GAAA+F,CAAMR,EAAOE,GACX,MAAM/E,EAAQ6E,EAAM7E,MACpB6E,EAAM7E,MAAQ+E,EAAM/E,MACpB+E,EAAM/E,MAAQA,EAEd6E,EAAM1I,MAAMpL,MAAK2I,EAAM0C,KAAMyI,EAAM7E,MAAO,GAAI,aAC9C+E,EAAM5I,MAAMpL,MAAK2I,EAAM0C,KAAM2I,EAAM/E,MAAO,GAAI,YAChD,CAEA,GAAAoD,GACE,IAAK,IAAIxF,EAAI,EAAGA,EAAI7M,MAAKb,GAASa,MAAKZ,GAASyN,IAC9C,GAAI7M,MAAK2Q,GAAM7E,QAAQe,GAAGoC,QAAUpC,EAClC,OAIJ7M,MAAK2Q,GAAMjC,UAAW,EAElB1O,MAAKuQ,GACPvQ,MAAKuQ,GAET,EC7Ea,MAAAgE,EACb5L,GACA4H,GACAiE,IACAC,IACAC,IACAC,IACAxV,IACAC,IACA4O,GACA2C,IACAhB,GACAiF,IACA/D,IACAC,IAEA,WAAAnR,CAAYgJ,EAAM4H,GAChBvQ,MAAK2I,EAAQA,EACb3I,MAAKuQ,EAASA,EAEdvQ,MAAKwU,GAAQ,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,CAAC,EAAG,IAClGxU,MAAKyU,GAAW,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAE1FzU,MAAK0U,GAAW3H,KAAKQ,OAAOvN,MAAKwU,GAAMrI,IAAI0I,GAAOA,EAAIzO,SACtDpG,MAAK2U,GAAc5H,KAAKQ,OAAOvN,MAAKyU,GAAStI,IAAI2I,GAAUA,EAAO1O,SAElEpG,MAAKb,GAASa,MAAKyU,GAASrO,OAASpG,MAAK0U,GAC1C1U,MAAKZ,GAAUY,MAAKwU,GAAMpO,OAASpG,MAAK2U,GAIxC3U,MAAKgO,EAAYjB,KAAKO,MAAMP,KAAKiE,KAAKhR,MAAK2I,EAAMC,SAASzJ,MAAQ,IAAMa,MAAKb,GAF7D,GAEkFa,MAAKb,GAAS,GAAKa,MAAKb,IAAUa,MAAK2I,EAAMC,SAASxJ,OAAS,KAAOY,MAAKZ,GAF7J,GAEmLY,MAAKZ,GAAU,GAAKY,MAAKZ,KAE5NY,MAAK2Q,GAAQ,IAAI5C,EAAK/N,MAAK2I,EAAO,SAAU,IAAK3I,MAAKb,GAAQa,MAAKZ,GAASY,MAAKgO,EAJjE,IAI+FO,GAASvO,MAAKkK,GAAOqE,IAEpI,IAAK,IAAItF,EAAI,EAAGA,EAAIjJ,MAAKb,GAAQ8J,IAC/B,IAAK,IAAIE,EAAI,EAAGA,EAAInJ,MAAK2U,GAAaxL,IAAK,CACzC,MAAMoF,EAAOvO,MAAK2Q,GAAM3B,OAAO/F,EAAGE,GAC9BF,EAAIjJ,MAAK0U,IAAYvL,EAAInJ,MAAK2U,GAAc3U,MAAKyU,GAASxL,EAAIjJ,MAAK0U,IAAUtO,OAC/EmI,EAAKhE,QAAS,GAEdgE,EAAKnD,MAAMpL,MAAK2I,EAAM0C,KAAMrL,MAAKyU,GAASxL,EAAIjJ,MAAK0U,IAAUvL,GAAKnJ,MAAK2U,GAAc3U,MAAKyU,GAASxL,EAAIjJ,MAAK0U,IAAUtO,SAA2B,EAAjBpG,MAAKgO,EAAgB,EAAG,aACxJO,EAAKtD,UAAS,GAElB,CAGF,IAAK,IAAI9B,EAAI,EAAGA,EAAInJ,MAAKb,GAAQgK,IAC/B,IAAK,IAAIF,EAAI,EAAGA,EAAIjJ,MAAK0U,GAAUzL,IAAK,CACtC,MAAMsF,EAAOvO,MAAK2Q,GAAM3B,OAAO/F,EAAGE,GAC9BA,EAAInJ,MAAK2U,IAAe1L,EAAIjJ,MAAK0U,GAAW1U,MAAKwU,GAAMrL,EAAInJ,MAAK2U,IAAavO,OAC/EmI,EAAKhE,QAAS,GAEdgE,EAAKnD,MAAMpL,MAAK2I,EAAM0C,KAAMrL,MAAKwU,GAAMrL,EAAInJ,MAAK2U,IAAa1L,GAAKjJ,MAAK0U,GAAW1U,MAAKwU,GAAMrL,EAAInJ,MAAK2U,IAAavO,SAA2B,EAAjBpG,MAAKgO,EAAgB,EAAG,aACrJO,EAAKtD,UAAS,GAElB,CAGFjL,MAAK2P,EAAW,IAAI5B,EAAK/N,MAAK2I,EAAO,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAImH,GAAW9P,MAAK+P,EAAaD,IAE5F9P,MAAK4U,GAAc5U,MAAK2P,EAAS7D,QAAQ,GACzC9L,MAAK4U,GAAYxJ,MAAMpL,MAAK2I,EAAM0C,KAAM,IAAK,GAAI,UAEjDrL,MAAK6Q,GAAc7Q,MAAK2P,EAAS7D,QAAQ,GACzC9L,MAAK6Q,GAAYzF,MAAMpL,MAAK2I,EAAM0C,KAAM,IAAK,GAAI,UAEjDrL,MAAKiR,GAAS,QAEdjR,MAAK2Q,GAAM5E,UAEX/L,MAAK2I,EAAM0C,KAAKD,MAAM,gBAAiB,SAAU,GAAI,GAAI,WAAY,CAAC,QACxE,CAEA,MAAA9B,IACMtJ,MAAK2I,EAAMgG,MAAMjF,WAAiB,MAAK1J,MAAK2I,EAAMgG,MAAMjF,WAAsB,YAChF1J,MAAKiR,GAAS,SAGZjR,MAAK2I,EAAMgG,MAAMjF,WAAiB,MAAK1J,MAAK2I,EAAMgG,MAAMjF,WAAuB,aACjF1J,MAAKiR,GAAS,QAGhBjR,MAAK2Q,GAAMrH,SACXtJ,MAAK2P,EAASrG,QAChB,CAEA,IAAA1C,GACE5G,MAAK2Q,GAAM/J,OACX5G,MAAK2P,EAAS/I,MAChB,CAEA,GAAAsD,CAAOqE,GACL,GAAIA,EAAM,CAGR,QAFCA,EAAKjD,SAAW,CAAA,GAAIhB,SAAU,EAEvBtK,MAAK8Q,IACb,IAAK,OACgB,WAAfvC,EAAKwG,OACPxG,EAAKwG,MAAQ,SACbxG,EAAKzD,aAAa,YAElByD,EAAKwG,MAAQ,KACbxG,EAAKzD,aAAa,YAEpB,MAEF,IAAK,OACHyD,EAAKzD,aAAa,WACC,YAAfyD,EAAKwG,OACPxG,EAAKwG,MAAQ,UACbxG,EAAKnD,MAAMpL,MAAK2I,EAAM0C,KAAM,IAAsB,EAAjBrL,MAAKgO,EAAgB,EAAG,cAEzDO,EAAKwG,MAAQ,KAKjB/U,MAAK2I,EAAM0C,KAAKU,UAEhB/L,MAAKqS,IACP,CACF,CAEA,EAAAtC,CAAaD,GACPA,IAAW9P,MAAK6Q,GAClB7Q,MAAKiR,GAAS,QACLnB,IAAW9P,MAAK4U,IACzB5U,MAAKiR,GAAS,OAElB,CAEA,GAAAA,CAASH,GACP9Q,MAAK8Q,GAAQA,EAEb9Q,MAAK4U,GAAY3J,SAAwB,SAAfjL,MAAK8Q,IAC/B9Q,MAAK6Q,GAAY5F,SAAwB,SAAfjL,MAAK8Q,IAE/B9Q,MAAK2P,EAAS5D,SAChB,CAEA,GAAAsG,GACE,IAAI2C,EAAc,EAElB,IAAK,IAAI/L,EAAIjJ,MAAK0U,GAAUzL,EAAIjJ,MAAKb,GAAQ8J,IAAK,CAChD,IAAK,IAAIE,EAAI,EAAGA,EAAInJ,MAAK2U,GAAaxL,IACpCnJ,MAAK2Q,GAAM3B,OAAO/F,EAAGE,GAAG2B,aAAa,YAGvC,IAAImK,EAAU,EACVhG,EAAQ,EACRiG,EAAU,EAEd,IAAK,IAAI/L,EAAInJ,MAAK2U,GAAaxL,EAAInJ,MAAKZ,GAAS+J,IACT,WAAlCnJ,MAAK2Q,GAAM3B,OAAO/F,EAAGE,GAAG4L,QAC1BE,GAAW,GAGyB,WAAlCjV,MAAK2Q,GAAM3B,OAAO/F,EAAGE,GAAG4L,OAAsB5L,IAAMnJ,MAAKZ,GAAU,KAChE6V,EAAU,GAAK9L,IAAMnJ,MAAKZ,GAAU,IAAM6P,EAAQjP,MAAKyU,GAASxL,EAAIjJ,MAAK0U,IAAUtO,SAClF6O,EAAUjV,MAAKyU,GAASxL,EAAIjJ,MAAK0U,IAAUzF,GAC7CjP,MAAK2Q,GAAM3B,OAAO/F,EAAGgG,GAASjP,MAAK2U,GAAc3U,MAAKyU,GAASxL,EAAIjJ,MAAK0U,IAAUtO,SAAS0E,aAAa,aAC/FmK,IAAYjV,MAAKyU,GAASxL,EAAIjJ,MAAK0U,IAAUzF,KACtDjP,MAAK2Q,GAAM3B,OAAO/F,EAAGgG,GAASjP,MAAK2U,GAAc3U,MAAKyU,GAASxL,EAAIjJ,MAAK0U,IAAUtO,SAAS0E,aAAa,YACxGoK,GAAW,GAGbjG,GAAS,GAGXgG,EAAU,GAIVC,IAAYlV,MAAKyU,GAASxL,EAAIjJ,MAAK0U,IAAUtO,SAC/C4O,GAAe,EAEnB,CAEA,IAAK,IAAI7L,EAAInJ,MAAK2U,GAAaxL,EAAInJ,MAAKZ,GAAS+J,IAAK,CACpD,IAAK,IAAIF,EAAI,EAAGA,EAAIjJ,MAAK0U,GAAUzL,IACjCjJ,MAAK2Q,GAAM3B,OAAO/F,EAAGE,GAAG2B,aAAa,YAGvC,IAAImK,EAAU,EACVhG,EAAQ,EACRiG,EAAU,EAEd,IAAK,IAAIjM,EAAIjJ,MAAK0U,GAAUzL,EAAIjJ,MAAKb,GAAQ8J,IACL,WAAlCjJ,MAAK2Q,GAAM3B,OAAO/F,EAAGE,GAAG4L,QAC1BE,GAAW,GAGyB,WAAlCjV,MAAK2Q,GAAM3B,OAAO/F,EAAGE,GAAG4L,OAAsB9L,IAAMjJ,MAAKb,GAAS,KAC/D8V,EAAU,GAAKhM,IAAMjJ,MAAKb,GAAS,IAAM8P,EAAQjP,MAAKwU,GAAMrL,EAAInJ,MAAK2U,IAAavO,SACjF6O,EAAUjV,MAAKwU,GAAMrL,EAAInJ,MAAK2U,IAAa1F,GAC7CjP,MAAK2Q,GAAM3B,OAAOC,GAASjP,MAAK0U,GAAW1U,MAAKwU,GAAMrL,EAAInJ,MAAK2U,IAAavO,QAAS+C,GAAG2B,aAAa,aAC5FmK,IAAYjV,MAAKwU,GAAMrL,EAAInJ,MAAK2U,IAAa1F,KACtDjP,MAAK2Q,GAAM3B,OAAOC,GAASjP,MAAK0U,GAAW1U,MAAKwU,GAAMrL,EAAInJ,MAAK2U,IAAavO,QAAS+C,GAAG2B,aAAa,YACrGoK,GAAW,GAGbjG,GAAS,GAGXgG,EAAU,GAIVC,IAAYlV,MAAKwU,GAAMrL,EAAInJ,MAAK2U,IAAavO,SAC/C4O,GAAe,EAEnB,CAEIA,IAAiBhV,MAAKb,GAASa,MAAK0U,IAAa1U,MAAKZ,GAAUY,MAAK2U,KACnE3U,MAAKuQ,GACPvQ,MAAKuQ,GAGX,ECnNa,MAAAN,EACbtH,GACAgI,IACAhB,GACAnE,IACA2J,IAEA,WAAAxV,CAAYgJ,GACV3I,MAAK2I,EAAQA,EAEb3I,MAAK2Q,GAAQ,IAAI5C,EAAK/N,MAAK2I,EAAO,SAAU,IAAK,EAAG,GAAI,IAAK,EAAG,EAAG,KAAM,GAAI,GAE7E3I,MAAK2P,EAAW,IAAI5B,EAAK/N,MAAK2I,EAAO,SAAU,IAAK,EAAG,EAAG,IAAK,GAAI,GAAKmH,GAAW9P,MAAK+P,EAAaD,GAAS,GAAI,GAElH9P,MAAKwL,GAAe,IAAIE,EAAY1L,MAAK2I,EAAO,uBAAwB,IAAI,GAE5E,MAAMyM,EAAY,CAACpD,EAAW1B,EAAamD,EAAUlB,EAAS6B,EAASG,GACjEc,EAAK,CAAC,GAAI,EAAG,GAAI,EAAG,GAAI,IACxBC,EAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1BC,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACxBC,EAAS,CAAC,YAAa,WAAY,WAAY,YAAa,WAAY,aAE9E,IAAK,IAAI3I,EAAI,EAAGA,EAAI,GAAIA,IAClBuI,EAAUvI,IACZ7M,MAAK2P,EAAS7D,QAAQe,GAAG6C,SAAW0F,EAAUvI,GAC1C7M,MAAK2I,EAAM0H,aAAaoF,IAAIL,EAAUvI,MACxC7M,MAAK2P,EAAS7D,QAAQe,GAAG5B,UAAS,GAClCoK,EAAGxI,GAAK,GACRyI,EAAGzI,GAAK,GACR0I,EAAM1I,GAAK,GAEb7M,MAAKwL,GAAaC,IAAIzL,MAAK2P,EAAS7D,QAAQe,GAAG5D,EAAIoM,EAAGxI,GAAI7M,MAAK2P,EAAS7D,QAAQe,GAAG1D,EAAImM,EAAGzI,GAAI,GAAI0I,EAAM1I,GAAI2I,EAAO3I,KAEnH7M,MAAK2P,EAAS7D,QAAQe,GAAG5B,UAAS,GAItCjL,MAAK2I,EAAM0C,KAAKD,MAAM,wCAAyC,SAAU,GAAI,GAAI,SAAU,CAAC,SAAU,UAEtG,IAAK,IAAIyB,EAAI,EAAGA,EAAI7M,MAAK2P,EAAS7D,QAAQ1F,OAAQyG,IAAK,CACrD,MAAMiD,EAAS9P,MAAK2P,EAAS7D,QAAQe,GACjC7M,MAAK2I,EAAM0H,aAAaoF,IAAI3F,EAAOJ,WACrCI,EAAO7E,UAAS,EAEpB,CACF,CAEA,MAAA3B,GAGE,OAFAtJ,MAAK2Q,GAAMrH,SACXtJ,MAAKwL,GAAalC,SACdtJ,MAAKmV,GACAnV,MAAKmV,IAEZnV,MAAK2P,EAASrG,SAEPtJ,KAEX,CAEA,IAAA4G,GACE5G,MAAK2Q,GAAM/J,OACX5G,MAAK2P,EAAS/I,OACd5G,MAAKwL,GAAa5E,MACpB,CAEA,EAAAmJ,CAAaD,GACPA,IACF9P,MAAKmV,GAAiB,IAAI3F,EAASxP,MAAK2I,EAAOmH,EAAOJ,UAE1D,EC9EF,MAAM/G,EAAO,ICKE,MACboI,IACA2E,IACAlK,IACA7I,IACAoS,IACAY,IAEA,WAAAhW,GACEK,KAAK4I,SAAW,IAAIjH,EAAS,KACtB3B,MAAK+Q,KACR/Q,MAAK+U,GAAS,IAAI9E,EAAOjQ,MACzBA,MAAK+Q,IAAW,KAIpB/Q,KAAK2O,MAAQ,IAAIvG,EAAMpI,MACvBA,MAAK0V,GAAU,GAEf1V,KAAKqL,KAAO,IAAI8B,EAAKnN,MACrBA,MAAKwL,GAAe,IAAIE,EAAY1L,KAAM,uBAAwB,IAClEA,MAAK2C,GAAU3C,MAAKwL,GAAaC,IAAI,EAAG,EAAG,GAAI,EAAG,YAClDzL,MAAK2C,GAAQ4H,QAAS,EAEtBvK,KAAKqQ,aAAe,IAAIuF,GAC1B,CAEA,IAAAC,CAAKnJ,GACH1M,KAAK0M,UAAYA,EACjB1M,MAAKsJ,GAAQoD,GACb1M,MAAK4G,IACP,CAEA,aAAAwJ,CAAc7D,EAAOuJ,EAAUC,GAC7B,MAAM9D,EAAQ,CAAEf,MAAOlR,KAAK0M,WAAa,EAAGH,MAAOA,EAAOuJ,SAAUA,EAAUC,OAAQA,GAEtF,OADA/V,MAAK0V,GAAQzJ,KAAKgG,GACXA,CACT,CAEA,KAAAJ,CAAMzL,GACJ4P,UAAUC,QAAQ7P,GAClBpG,MAAK2V,IAAe,EACpB3V,KAAKoQ,cAAchK,EAAQ,IAAMpG,MAAK2V,IAAe,EACvD,CAEA,GAAArM,CAAQoD,GACF1M,MAAK2V,KACP3V,KAAK4I,SAAS9H,KAAK,GAAqB,EAAhBiM,KAAKG,SAC7BlN,KAAK4I,SAAS9H,KAAK,GAAqB,EAAhBiM,KAAKG,UAG/BlN,KAAK2O,MAAMrF,SAEPtJ,KAAK2O,MAAM5F,OAAS/I,MAAK2C,GAAQ4H,SACnCvK,MAAK2C,GAAQ4H,QAAS,EACtBvK,MAAKwL,GAAaO,WAGhB/L,KAAK2O,MAAMpF,QACbvJ,MAAK2C,GAAQsG,EAAIjJ,KAAK2O,MAAM1F,EAAI,EAChCjJ,MAAK2C,GAAQwG,EAAInJ,KAAK2O,MAAMxF,EAAI,EAEhCnJ,MAAKwL,GAAaO,WAGpB/L,MAAKkW,GAAcxJ,GAEf1M,MAAK+U,KACP/U,MAAK+U,GAAS/U,MAAK+U,GAAOzL,UAG5BtJ,KAAKqL,KAAK/B,OAAOoD,GACjB1M,MAAKwL,GAAalC,QACpB,CAEA,GAAA4M,CAAcxJ,GACZ,IAAK,MAAMuF,KAASjS,MAAK0V,GACnBhJ,GAAauF,EAAMf,MAAQe,EAAM1F,QAAU0F,EAAMvD,WAC/CuD,EAAM8D,OACR9D,EAAMf,MAAQxE,EAEduF,EAAMkE,SAAU,EAGdlE,EAAM6D,UACR7D,EAAM6D,YAKR9V,MAAK0V,GAAQU,KAAKnE,GAASA,EAAMkE,SAAWlE,EAAMvD,YACpD1O,MAAK0V,GAAU1V,MAAK0V,GAAQxJ,OAAO+F,IAAUA,EAAMkE,UAAYlE,EAAMvD,UAEzE,CAEA,GAAA9H,GACE5G,KAAK4I,SAASnC,QAEVzG,MAAK+U,IACP/U,MAAK+U,GAAOnO,OAGd5G,KAAKqL,KAAKzE,OAEV5G,MAAKwL,GAAa5E,MACpB,GDvGFyP,sBALA,SAASR,EAAKnJ,GACZ2J,sBAAsBR,GACtBlN,EAAKkN,KAAKnJ,EACZ"}