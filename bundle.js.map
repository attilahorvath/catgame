{"version":3,"file":"bundle.js","sources":["src/Matrix3.js","src/Shader.js","src/Renderer.js","src/Input.js","src/Sprite.js","src/SpriteBatch.js","shaders/sprite.vert","shaders/sprite.frag","src/TextSegment.js","src/Text.js","src/Grid.js","src/states/Minigame.js","src/minigames/Meowsweeper.js","src/minigames/PawPawToe.js","src/minigames/Sudocat.js","src/minigames/Meowmory.js","src/minigames/Meowsterpiece.js","src/states/Select.js","src/index.js","src/Game.js"],"sourcesContent":["export default class Matrix3 extends Float32Array {\n  static identity() {\n    return new Matrix3([\n      1.0, 0.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 0.0, 1.0,\n    ]);\n  }\n\n  static ortho(left, right, bottom, top) {\n    return new Matrix3([\n      2.0 / (right - left), 0.0, 0.0,\n      0.0, 2.0 / (top - bottom), 0.0,\n      -(right + left) / (right - left), -(top + bottom) / (top - bottom), 1.0,\n    ]);\n  }\n}\n","export default class {\n  #program;\n  #viewUniformLocation;\n  #projectionUniformLocation;\n  #texUniformLocation;\n  #imageSizeUniformLocation;\n\n  constructor(gl, vertexShaderSource, fragmentShaderSource) {\n    const vertexShader = this.#compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource)\n    const fragmentShader = this.#compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n    this.#program = gl.createProgram();\n\n    const attachShader = gl.attachShader.bind(gl);\n    const bindAttribLocation = gl.bindAttribLocation.bind(gl);\n    const getUniformLocation = gl.getUniformLocation.bind(gl);\n\n    attachShader(this.#program, vertexShader);\n    attachShader(this.#program, fragmentShader);\n\n    bindAttribLocation(this.#program, POSITION_ATTRIBUTE_LOCATION, 'vertexPosition');\n    bindAttribLocation(this.#program, COLOR_ATTRIBUTE_LOCATION, 'vertexColor');\n    bindAttribLocation(this.#program, TEX_COORD_ATTRIBUTE_LOCATION, 'vertexTexCoord');\n\n    bindAttribLocation(this.#program, SPRITE_POSITION_ATTRIBUTE_LOCATION, 'spritePosition');\n    bindAttribLocation(this.#program, SPRITE_SIZE_ATTRIBUTE_LOCATION, 'spriteSize');\n    bindAttribLocation(this.#program, SPRITE_TYPE_ATTRIBUTE_LOCATION, 'spriteType');\n    bindAttribLocation(this.#program, SPRITE_COLOR_ATTRIBUTE_LOCATION, 'spriteColor');\n    bindAttribLocation(this.#program, SPRITE_ANGLE_ATTRIBUTE_LOCATION, 'spriteAngle');\n\n    gl.linkProgram(this.#program);\n\n    this.#viewUniformLocation = getUniformLocation(this.#program, 'view');\n    this.#projectionUniformLocation = getUniformLocation(this.#program, 'projection');\n    this.#texUniformLocation = getUniformLocation(this.#program, 'tex');\n    this.#imageSizeUniformLocation = getUniformLocation(this.#program, 'imageSize');\n  }\n\n  use(gl, view, projection) {\n    gl.useProgram(this.#program);\n\n    this.setup(gl, view, projection);\n  }\n\n  setup(gl, view, projection) {\n    if (this.#viewUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#viewUniformLocation, false, view);\n    }\n\n    if (this.#projectionUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#projectionUniformLocation, false, projection);\n    }\n\n    if (this.#texUniformLocation != null) {\n      gl.uniform1i(this.#texUniformLocation, 0);\n    }\n\n    if (this.#imageSizeUniformLocation != null) {\n      gl.uniform1f(this.#imageSizeUniformLocation, IMAGE_SIZE);\n    }\n  }\n\n  #compileShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    return shader;\n  }\n}\n","import Matrix3 from './Matrix3';\n\nimport Shader from './Shader';\n\nexport default class {\n  #onresize;\n  #gl;\n  #shaders;\n  #textures;\n  #images;\n  #currentShader;\n  #currentVao;\n  #currentTexture;\n\n  constructor(onresize) {\n    this.#onresize = onresize;\n\n    document.body.style.margin = '0';\n    document.body.style.padding = '0';\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.style.display = 'block';\n    this.canvas.style.width = '100dvw';\n    this.canvas.style.height = '100dvh';\n    this.canvas.style.cursor = 'none';\n    this.canvas.style.touchAction = 'none';\n\n    new ResizeObserver(() => {\n      this.w = this.canvas.clientWidth;\n      this.h = this.canvas.clientHeight;\n\n      this.canvas.width = this.w;\n      this.canvas.height = this.h;\n\n      this.horizontal = this.w > this.h;\n\n      this.#gl.viewport(0, 0, this.w, this.h);\n      this.projection = Matrix3.ortho(0, this.w, this.h, 0);\n\n      this.#onresize();\n    }).observe(this.canvas, { box: 'content-box' });\n\n    document.body.appendChild(this.canvas);\n\n    this.#gl = this.canvas.getContext('webgl2');\n\n    this.#gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    this.#gl.clearColor(0.68, 0.68, 0.94, 1.0);\n\n    this.#gl.pixelStorei(this.#gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n    this.#gl.enable(this.#gl.BLEND);\n    this.#gl.blendFunc(this.#gl.ONE, this.#gl.ONE_MINUS_SRC_ALPHA);\n\n    this.quadBuffer = this.#createQuadBuffer();\n\n    this.#shaders = new Map();\n    this.#textures = new Map();\n    this.#images = [];\n\n    this.view = Matrix3.identity();\n    this.projection = Matrix3.ortho(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  createShader(name, vertexShaderSource, fragmentShaderSource) {\n    const cachedShader = this.#shaders.get(name);\n\n    if (cachedShader) {\n      return cachedShader;\n    }\n\n    const shader = new Shader(this.#gl, vertexShaderSource, fragmentShaderSource);\n    this.#shaders.set(name, shader);\n\n    return shader;\n  }\n\n  createVao() {\n    const vao = this.#gl.createVertexArray();\n\n    this.#gl.bindVertexArray(vao);\n\n    return vao;\n  }\n\n  createBuffer(data, dynamic) {\n    const buffer = this.#gl.createBuffer();\n\n    this.updateBuffer(buffer, data, dynamic);\n\n    return buffer;\n  }\n\n  updateBuffer(buffer, data, dynamic) {\n    this.useBuffer(buffer);\n\n    this.#gl.bufferData(this.#gl.ARRAY_BUFFER, data, dynamic ? this.#gl.DYNAMIC_DRAW : this.#gl.STATIC_DRAW);\n  }\n\n  useBuffer(buffer) {\n    this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, buffer);\n  }\n\n  setAttribute(location, size, stride, offset, divisor) {\n    this.#gl.vertexAttribPointer(location, size, this.#gl.FLOAT, false, stride, offset);\n    this.#gl.enableVertexAttribArray(location);\n\n    if (divisor != null) {\n      this.#gl.vertexAttribDivisor(location, divisor);\n    }\n  }\n\n  loadTexture(name, smooth) {\n    const path = `textures/${name}.png`;\n    const cachedTexture = this.#textures.get(`${path}_${smooth}`);\n\n    if (cachedTexture) {\n      return cachedTexture;\n    }\n\n    const texture = this.#gl.createTexture();\n    this.#prepareTexture(texture, null, smooth);\n\n    const imageIndex = this.#images.length;\n    const image = new Image();\n\n    image.src = path;\n    image.onload = () => this.#prepareTexture(texture, imageIndex, smooth);\n\n    this.#textures.set(`${path}_${smooth}`, texture);\n    this.#images[imageIndex] = image;\n\n    return texture;\n  }\n\n  clear() {\n    this.#gl.clear(this.#gl.COLOR_BUFFER_BIT);\n  }\n\n  draw(shader, vao, texture, vertexCount, instanceCount) {\n    if (shader !== this.#currentShader) {\n      shader.use(this.#gl, this.view, this.projection);\n      this.#currentShader = shader;\n    } else {\n      this.#currentShader.setup(this.#gl, this.view, this.projection);\n    }\n\n    if (vao !== this.#currentVao) {\n      this.#gl.bindVertexArray(vao);\n      this.#currentVao = vao;\n    }\n\n    if (texture !== this.#currentTexture) {\n      this.#gl.activeTexture(this.#gl.TEXTURE0);\n      this.#gl.bindTexture(this.#gl.TEXTURE_2D, texture);\n      this.#currentTexture = texture;\n    }\n\n    if (instanceCount != null) {\n      this.#gl.drawArraysInstanced(this.#gl.TRIANGLES, 0, vertexCount, instanceCount);\n    } else {\n      this.#gl.drawArrays(this.#gl.TRIANGLES, 0, vertexCount);\n    }\n  }\n\n  #createQuadBuffer() {\n    return this.createBuffer(new Float32Array([\n      0.0, 0.0, 0.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 0.0, 1.0, 0.0,\n\n      1.0, 0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 1.0, 1.0, 1.0,\n    ]), false);\n  }\n\n  #prepareTexture(texture, imageIndex, smooth) {\n    this.#gl.activeTexture(this.#gl.TEXTURE0);\n    this.#gl.bindTexture(this.#gl.TEXTURE_2D, texture);\n\n    if (imageIndex != null) {\n      this.#gl.texImage2D(this.#gl.TEXTURE_2D, 0, this.#gl.RGBA, this.#gl.RGBA, this.#gl.UNSIGNED_BYTE, this.#images[imageIndex]);\n    } else {\n      this.#gl.texImage2D(this.#gl.TEXTURE_2D, 0, this.#gl.RGBA, 1, 1, 0, this.#gl.RGBA, this.#gl.UNSIGNED_BYTE, new Uint8Array([255, 0, 255, 255,]));\n    }\n\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_WRAP_S, this.#gl.CLAMP_TO_EDGE);\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_WRAP_T, this.#gl.CLAMP_TO_EDGE);\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_MIN_FILTER, smooth ? this.#gl.LINEAR : this.#gl.NEAREST);\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_MAG_FILTER, smooth ? this.#gl.LINEAR : this.#gl.NEAREST);\n  }\n}\n","export default class {\n  #newKeyPresses;\n  #newKeyReleases;\n  #newPress;\n  #newRelease;\n  #lastX;\n  #lastY;\n\n  constructor(game) {\n    this.#newKeyPresses = {};\n    this.#newKeyReleases = {};\n\n    game.renderer.canvas.addEventListener('pointermove', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n    });\n\n    game.renderer.canvas.addEventListener('pointerdown', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newPress = true;\n    });\n\n    game.renderer.canvas.addEventListener('pointerup', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newRelease = true;\n    });\n\n    addEventListener('keydown', event => {\n      this.#newKeyPresses[event.code] = true;\n    });\n\n    addEventListener('keyup', event => {\n      this.#newKeyReleases[event.code] = true;\n    });\n  }\n\n  update() {\n    if (this.x !== this.#lastX || this.y !== this.#lastY) {\n      this.#lastX = this.x;\n      this.#lastY = this.y;\n      this.moved = true;\n    }\n\n    this.press = false;\n\n    if (this.#newPress) {\n      this.press = true;\n      this.#newPress = false;\n    }\n\n    this.release = false;\n\n    if (this.#newRelease) {\n      this.release = true;\n      this.#newRelease = false;\n    }\n\n    this.keyPresses = {};\n\n    for (const [newKeyPress, newKeyPressValue] of Object.entries(this.#newKeyPresses)) {\n      if (newKeyPressValue) {\n        this.keyPresses[newKeyPress] = true;\n        this.#newKeyPresses[newKeyPress] = false;\n      }\n    }\n\n    this.keyReleases = {};\n\n    for (const [newKeyRelease, newKeyReleaseValue] of Object.entries(this.#newKeyReleases)) {\n      if (newKeyReleaseValue) {\n        this.keyReleases[newKeyRelease] = true;\n        this.#newKeyReleases[newKeyRelease] = false;\n      }\n    }\n\n    this.clickRead = false;\n  }\n\n  click() {\n    return !this.clickRead && ((this.mouse && this.release) || (!this.mouse && this.press));\n  }\n}\n","export default class {\n  constructor(x, y, size, type, color) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.type = type;\n    this.angle = 0.0;\n    this.enabled = true;\n    this.hidden = false;\n    this.a = 1.0;\n\n    this.setColor(color);\n  }\n\n  attributes() {\n    return [this.x, this.y, this.size, this.type, this.r, this.g, this.b, this.hidden ? 0 : this.a, this.angle];\n  }\n\n  setBaseColor(color) {\n    this.baseColor = color;\n    this.setColor(color);\n  }\n\n  setColor(color) {\n    switch (color) {\n    case 'primary':\n      this.r = 0.85;\n      this.g = 0.86;\n      this.b = 1.0;\n      break;\n    case 'background':\n      this.r = 0.68;\n      this.g = 0.68;\n      this.b = 0.94;\n    case 'highlight':\n      this.r = 0.76;\n      this.g = 0.55;\n      this.b = 0.58;\n      break;\n    case 'active':\n      this.r = 0.65;\n      this.g = 0.4;\n      this.b = 0.44;\n      break;\n    case 'inactive':\n      this.r = 0.34;\n      this.g = 0.34;\n      this.b = 0.46;\n      break;\n\n    case 'blackcat':\n      this.r = 0.33;\n      this.g = 0.33;\n      this.b = 0.33;\n      break;\n    case 'orangecat':\n      this.r = 0.7;\n      this.g = 0.45;\n      this.b = 0.08;\n      break;\n    case 'whitecat':\n      this.r = 0.9;\n      this.g = 0.9;\n      this.b = 0.9;\n      break;\n    case 'tabbycat':\n      this.r = 0.64;\n      this.g = 0.56;\n      this.b = 0.38;\n      break;\n    case 'silvercat':\n      this.r = 0.6;\n      this.g = 0.6;\n      this.b = 0.6;\n      break;\n\n    case 'black':\n      this.r = 0.0;\n      this.g = 0.0;\n      this.b = 0.0;\n      break;\n\n    case 'primary1':\n      this.#fromRGB(144, 168, 195);\n      break;\n\n    case 'inactive1':\n      this.#fromRGB(144, 168, 195);\n      break;\n    case 'inactive2':\n      this.#fromRGB(70, 157, 137);\n      break;\n    case 'inactive3':\n      this.#fromRGB(181, 201, 154);\n      break;\n    case 'inactive4':\n      this.#fromRGB(0, 166, 251);\n      break;\n    case 'inactive5':\n      this.#fromRGB(76, 201, 240);\n      break;\n    case 'inactive6':\n      this.#fromRGB(244, 202, 224);\n      break;\n    case 'inactive7':\n      this.#fromRGB(229, 0, 164);\n      break;\n    case 'inactive8':\n      this.#fromRGB(242, 0, 137);\n      break;\n    case 'inactive9':\n      this.#fromRGB(255, 255, 255);\n      break;\n    case 'inactive10':\n      this.r = 1.0;\n      this.g = 0.8;\n      this.b = 0.94;\n      break;\n\n    default:\n      this.r = 1.0;\n      this.g = 1.0;\n      this.b = 1.0;\n      break;\n    }\n  }\n\n  activate(active) {\n    this.inactive = !active;\n    this.setColor(active ? (this.baseColor || 'primary') : 'inactive');\n  }\n\n  write(text, content, size, color = 'active', animations = null, delay = null) {\n    (this.content || {}).enabled = false;\n    this.content = text.write(content.toString(), this.x + (this.size - size) / 2, this.y + (this.size - size) / 2, size, color, animations, delay);\n  }\n\n  draw(spriteBatch, size, type, color) {\n    (this.content || {}).enabled = false;\n    this.content = spriteBatch.add(this.x + (this.size - size) / 2, this.y + (this.size - size) / 2, size, type, color);\n  }\n\n  #fromRGB(r, g, b) {\n    this.r = r / 255.0;\n    this.g = g / 255.0;\n    this.b = b / 255.0;\n  }\n}\n","import vertexShaderSource from '../shaders/sprite.vert';\nimport fragmentShaderSource from '../shaders/sprite.frag';\n\nimport Sprite from './Sprite';\n\nexport default class {\n  #game;\n  #shader;\n  #vao;\n  #instanceBuffer;\n  #texture;\n  #spritesChanged;\n\n  constructor(game, smooth = false, textureName = 'sprites') {\n    this.#game = game;\n\n    this.#shader = this.#game.renderer.createShader('sprite', vertexShaderSource, fragmentShaderSource);\n\n    this.#vao = this.#game.renderer.createVao();\n\n    this.#game.renderer.useBuffer(this.#game.renderer.quadBuffer);\n\n    this.#game.renderer.setAttribute(POSITION_ATTRIBUTE_LOCATION, 2, 16, 0);\n    this.#game.renderer.setAttribute(TEX_COORD_ATTRIBUTE_LOCATION, 2, 16, 8);\n\n    this.#instanceBuffer = this.#game.renderer.createBuffer(new Float32Array(), true);\n\n    this.#game.renderer.setAttribute(SPRITE_POSITION_ATTRIBUTE_LOCATION, 2, 36, 0, 1);\n    this.#game.renderer.setAttribute(SPRITE_SIZE_ATTRIBUTE_LOCATION, 1, 36, 8, 1);\n    this.#game.renderer.setAttribute(SPRITE_TYPE_ATTRIBUTE_LOCATION, 1, 36, 12, 1);\n    this.#game.renderer.setAttribute(SPRITE_COLOR_ATTRIBUTE_LOCATION, 4, 36, 16, 1);\n    this.#game.renderer.setAttribute(SPRITE_ANGLE_ATTRIBUTE_LOCATION, 1, 36, 32, 1);\n\n    this.#texture = this.#game.renderer.loadTexture(textureName, smooth);\n\n    this.sprites = [];\n    this.changed();\n  }\n\n  add(x, y, size, type, color) {\n    if (x === 'center') {\n      x = this.#game.renderer.w / 2 - size / 2;\n    }\n\n    if (y === 'center') {\n      y = this.#game.renderer.h / 2 - size / 2;\n    }\n\n    const sprite = new Sprite(x, y, size, type, color);\n\n    this.sprites.push(sprite);\n    this.changed();\n\n    return sprite;\n  }\n\n  changed() {\n    this.#spritesChanged = true;\n  }\n\n  update() {\n    if (this.#spritesChanged) {\n      this.sprites = this.sprites.filter(sprite => sprite.enabled);\n\n      this.#game.renderer.updateBuffer(this.#instanceBuffer, new Float32Array(\n        this.sprites\n            .map(sprite => sprite.attributes())\n            .flat()\n      ), true);\n\n      this.#spritesChanged = false;\n    }\n  }\n\n  draw() {\n    this.#game.renderer.draw(this.#shader, this.#vao, this.#texture, 6, this.sprites.length);\n  }\n}\n","#version 300 es\n\nuniform mat3 view;\nuniform mat3 projection;\nuniform float imageSize;\n\nuniform sampler2D tex;\n\nin vec2 vertexPosition;\nin vec2 vertexTexCoord;\n\nin vec2 spritePosition;\nin float spriteSize;\nin float spriteType;\nin vec4 spriteColor;\nin float spriteAngle;\n\nout vec2 texCoord;\nout vec4 tint;\n\nvoid main() {\n  vec2 texOffset = vec2(imageSize / float(textureSize(tex, 0)),\n                        imageSize / float(textureSize(tex, 0).y));\n\n  texCoord = vec2(texOffset.x, 0.0) * spriteType + vertexTexCoord * texOffset;\n  tint = spriteColor;\n  tint.rgb *= tint.a;\n  // TODO: Calculate rotation based on spriteAngle\n  gl_Position = vec4(projection * view * vec3(vertexPosition * spriteSize + spritePosition, 1.0), 1.0);\n}\n","#version 300 es\n\nprecision highp float;\n\nuniform sampler2D tex;\n\nin vec2 texCoord;\nin vec4 tint;\n\nout vec4 fragmentColor;\n\nvoid main() {\n  fragmentColor = texture(tex, texCoord) * tint;\n}\n","export default class {\n  constructor(text, x, y, size, color, animations, delay) {\n    this.text = text;\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.color = color;\n    this.animations = animations ?? [];\n    this.delay = delay ?? 0;\n\n    this.sprites = [];\n    this.enabled = true;\n\n    this.time = 0;\n    this.begin = null;\n  }\n\n  setColor(color) {\n    for (const sprite of this.sprites) {\n      sprite.setColor(color);\n    }\n  }\n\n  update(timestamp) {\n    let updated = false;\n\n    for (const animation of this.animations) {\n      switch (animation) {\n      case 'sine':\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.y = sprite.baseY + Math.sin(i + timestamp / 200) * 10;\n        }\n        updated = true;\n        break;\n      case 'shake':\n        this.time += 1;\n\n        if (this.time === 7) {\n          this.time = 0;\n          for (let i = 0; i < this.sprites.length; i++) {\n            const sprite = this.sprites[i];\n            sprite.x = sprite.baseX + Math.random() * 5;\n            sprite.y = sprite.baseY + Math.random() * 5;\n          }\n        }\n        updated = true;\n        break;\n      case 'typing':\n        if (!this.begin) {\n          this.begin = timestamp;\n        }\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.hidden = (timestamp - this.begin - this.delay) / 150 < i;\n        }\n        updated = true;\n        break;\n      }\n    }\n\n    return updated;\n  }\n}\n","import SpriteBatch from './SpriteBatch';\nimport TextSegment from './TextSegment';\n\nexport default class extends SpriteBatch {\n  #game;\n  #segments;\n\n  constructor(game) {\n    super(game, false, 'font');\n\n    this.#game = game;\n    this.#segments = [];\n  }\n\n  write(text, x, y, size, color = 'active', animations = null, delay = null) {\n    if (x === 'center') {\n      x = Math.floor(this.#game.renderer.w / 2 - (Math.max(...text.split('\\n').map(s => s.length)) * size) / 2);\n    }\n\n    if (y === 'center') {\n      y = Math.floor(this.#game.renderer.h / 2 - (text.split('\\n').length * size) / 2);\n    }\n\n    const segment = new TextSegment(text, x, y, size, color, animations, delay);\n\n    let currX = x;\n    let currY = y;\n\n    for (const c of text) {\n      let type;\n\n      if (c === '\\n') {\n        currY += size;\n        currX = x;\n\n        continue;\n      }\n\n      if (c >= 'A' && c <= 'Z') {\n        type = c.charCodeAt(0) - 'A'.charCodeAt(0);\n      } else if (c >= '0' && c <= '9') {\n        type = 26 + c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if (c === '?') {\n        type = 36;\n      } else if (c === '!') {\n        type = 37;\n      } else if (c === ',') {\n        type = 38;\n      } else if (c === '.') {\n        type = 39;\n      } else if (c === \"'\") {\n        type = 40;\n      }\n\n      if (type != null) {\n        const sprite = this.add(currX, currY, size, type, color);\n        sprite.baseX = currX;\n        sprite.baseY = currY;\n        segment.sprites.push(sprite);\n      }\n\n      currX += size;\n    }\n\n    this.#segments.push(segment);\n    this.changed();\n\n    return segment;\n  }\n\n  clear() {\n    for (const segment of this.#segments) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = [];\n    this.changed();\n  }\n\n  update(timestamp) {\n    for (const segment of this.#segments.filter(segment => !segment.enabled)) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = this.#segments.filter(segment => segment.enabled);\n\n    for (const segment of this.#segments) {\n      if (segment.update(timestamp)) {\n        this.changed();\n      }\n    }\n\n    super.update();\n  }\n}\n","import SpriteBatch from './SpriteBatch';\n\nexport default class extends SpriteBatch {\n  #game;\n  #spacingX;\n  #spacingY;\n  #onclick;\n  #color;\n  #active;\n  #pressed;\n\n  constructor(game, x, y, w, h, s, spacingX, spacingY, onclick, color = 'primary', type = 0) {\n    super(game, false, 'cells');\n\n    this.#game = game;\n\n    if (x === 'center') {\n      x = game.renderer.w / 2 - w * (s + (spacingX ?? 0) * (w - 1) / w) / 2;\n    }\n\n    if (y === 'center') {\n      y = game.renderer.h / 2 - h * (s + (spacingY ?? 0) * (h - 1) / h) / 2;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h\n    this.s = s;\n    this.#spacingX = spacingX ?? 0;\n    this.#spacingY = spacingY ?? 0;\n    this.#onclick = onclick;\n    this.#color = color;\n\n    for (let gridY = 0; gridY < h; gridY++) {\n      for (let gridX = 0; gridX < w; gridX++) {\n        const cell = this.add(x + gridX * this.#fullW, y + gridY * this.#fullH, s, type, color);\n        cell.setColor(color);\n        cell.gridX = gridX;\n        cell.gridY = gridY;\n      }\n    }\n  }\n\n  update() {\n    if (!this.disabled) {\n      if (this.#game.input.moved) {\n        let newActive = this.#cellAtPosition(this.#game.input.x, this.#game.input.y);\n        if (newActive?.inactive) {\n          newActive = null;\n        }\n\n        if (newActive !== this.#active && !this.#pressed) {\n          if (this.#onclick) {\n            if (this.#game.input.mouse) {\n              if (!this.#active?.inactive) {\n                this.#active?.setColor(this.#active?.baseColor || this.#color);\n              }\n\n              newActive?.setColor('highlight');\n              this.changed();\n            }\n          }\n        }\n\n        this.#active = newActive;\n      }\n\n      if (this.#game.input.press) {\n        this.#pressed = this.#active;\n\n        if (this.#onclick) {\n          if (this.#game.input.mouse) {\n            this.#pressed?.setColor('active');\n            this.changed();\n          }\n        }\n      }\n\n      if (this.#game.input.click()) {\n        if (this.#onclick) {\n          this.#pressed?.setColor(this.#pressed?.baseColor || this.#color);\n          if (this.#active && this.#active === this.#pressed) {\n            this.#game.input.clickRead = true;\n            this.#onclick(this.#pressed);\n          }\n          this.changed();\n        }\n\n        this.#pressed = null;\n      }\n    }\n\n    super.update();\n  }\n\n  cellAt(x, y) {\n    if (x >= 0 && x < this.w && y >= 0 && y < this.h) {\n      return this.sprites[this.w * y + x];\n    }\n  }\n\n  #cellAtPosition(x, y) {\n    const index = this.#indexAtPosition(x, y);\n\n    if (index) {\n      return this.cellAt(index[0], index[1]);\n    }\n  }\n\n  #indexAtPosition(x, y) {\n    const relX = x - this.x;\n    const relY = y - this.y;\n    const indexX = Math.trunc(relX / this.#fullW);\n    const indexY = Math.trunc(relY / this.#fullH);\n\n    if (relX >= 0 && relY >= 0 &&\n        relX - indexX * this.#fullW < this.s &&\n        relY - indexY * this.#fullH < this.s &&\n        indexX >= 0 && indexX < this.w && indexY >= 0 && indexY < this.h) {\n      return [indexX, indexY];\n    }\n  }\n\n  get #fullW() {\n    return this.s + this.#spacingX;\n  }\n\n  get #fullH() {\n    return this.s + this.#spacingY;\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\nimport Select from './Select';\n\nexport default class {\n  #minigameClass;\n  #game;\n  #minigame;\n  #buttons;\n  #spriteBatch;\n  #cat;\n  #leftPaw;\n  #rightPaw;\n  #catNameText;\n  #catTextText;\n  #exitButton;\n  #exit;\n  #catMet;\n  #started;\n\n  constructor(minigameClass) {\n    this.#minigameClass = minigameClass;\n  }\n\n  init(game) {\n    this.#game = game;\n\n    this.#buttons = new Grid(game, game.renderer.w - 74, 10, 1, 1, 64, 0, 0, (button) => this.#buttonClick(button));\n\n    this.#exitButton = this.#buttons.sprites[0];\n\n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(game.text, 'X', 32, 'active');\n\n    this.#spriteBatch = new SpriteBatch(game);\n\n    this.#cat = this.#spriteBatch.add('center', 100, 64, 1, this.#minigameClass.color);\n    this.#leftPaw = this.#spriteBatch.add(this.#cat.x - 12, this.#cat.y + 60, 24, 0, this.#minigameClass.color);\n    this.#rightPaw = this.#spriteBatch.add(this.#cat.x + 46, this.#cat.y + 60, 24, 0, this.#minigameClass.color);\n\n    this.#catNameText = game.text.write(this.#minigameClass.catName, 'center', 10, 24, this.#minigameClass.color, ['sine']);\n    this.#catTextText = game.text.write(this.#minigameClass.catText, 'center', this.#cat.y + 100, 32, this.#minigameClass.color, ['typing', 'shake']);\n  }\n\n  update() {\n    if (this.#exit) {\n      return new Select(this.#game);\n    }\n\n    this.#buttons.update();\n\n    if (!this.#catMet && this.#game.input.click()) {\n      this.#game.input.clickRead = true;\n      this.#cat.setColor('blackcat');\n      this.#leftPaw.setColor('blackcat');\n      this.#rightPaw.setColor('blackcat');\n      this.#spriteBatch.changed();\n      this.#catNameText.enabled = false;\n      this.#catTextText.enabled = false;\n      this.#catNameText = this.#game.text.write('VICKI', 'center', 10, 24, 'blackcat', ['sine']);\n      this.#catTextText = this.#game.text.write(this.#minigameClass.response, 'center', this.#cat.y + 100, 32, 'blackcat', ['typing', 'shake']);\n      this.#catMet = true;\n    } else if (!this.#started && this.#game.input.click()) {\n      this.#game.input.clickRead = true;\n      this.#cat.enabled = false;\n      this.#leftPaw.enabled = false;\n      this.#rightPaw.enabled = false;\n      this.#catNameText.enabled = false;\n      this.#catTextText.enabled = false;\n      this.#spriteBatch.changed();\n      this.#game.text.write(this.#minigameClass.title, 'center', 10, 48, 'inactive', ['sine']);\n      this.#setup();\n      this.#started = true;\n    }\n\n    if (this.#started) {\n      this.#minigame.update();\n    }\n\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    if (this.#started && !this.#exit) {\n      this.#minigame.draw();\n    }\n\n    this.#spriteBatch.draw();\n    this.#buttons.draw();\n  }\n\n  #setup() {\n    this.#minigame = new this.#minigameClass(this.#game, () => this.#win(), () => this.#lose());\n\n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(this.#game.text, 'X', 32, 'active');\n  }\n\n  #win() {\n    this.#game.scheduleTimer(500, () => {\n      this.#game.minigamesWon.add(this.#minigameClass);\n      this.#exit = true;\n    });\n  }\n\n  #lose() {\n    this.#game.scheduleTimer(500, () => { this.#setup(); });\n  }\n\n  #buttonClick(button) {\n    if (button === this.#exitButton) {\n      this.#exit = true;\n    }\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #w;\n  #h;\n  #mines;\n  #fontSize;\n  #grid;\n  #buttons;\n  #digButton;\n  #flagButton;\n  #mode;\n  #started;\n\n  static title = 'MEOWSWEEPER';\n  static color = 'tabbycat';\n  static sx = 73;\n  static type = 2;\n  static catName = 'QUEEN KARA';\n  static catText = \"YOU, NEW CAT!!\\nI NEED YOU TO SCRATCH MY BACK\\nIMMEDIATELY BUT ONLY WHERE\\nI LIKE IT!\\n\\n\\nSINCE YOU'RE NEW I WILL TELL\\nYOU HOW MANY DANGER ZONES\\nARE AROUND WHERE YOU'RE\\nSCRATCHING!\";\n  static response = 'OOOH, THE QUEEN HERSELF!!\\n\\n\\nI NEED TO MAKE A GOOD\\nFIRST IMPRESSION!';\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#w = game.renderer.horizontal ? 20 : 10;\n    this.#h = game.renderer.horizontal ? 10 : 20;\n    this.#mines = 10;\n\n    this.#fontSize = 26;\n\n    const spacing = 4;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / this.#w - (spacing * (this.#w - 1) / this.#w), (game.renderer.h - 110) / this.#h - (spacing * (this.#h - 1) / this.#h)));\n\n    this.#grid = new Grid(game, 'center', 100, this.#w, this.#h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#buttons = new Grid(game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#digButton = this.#buttons.sprites[0];\n    this.#digButton.write(game.text, 'O', 30, 'active');\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(game.text, 'X', 30, 'active');\n\n    this.#setMode('dig');\n  }\n\n  update() {\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      this.#setMode('dig');\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      this.#setMode('flag');\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    switch (this.#mode) {\n    case 'dig':\n      if (!this.#started) {\n        this.#start(cell);\n      }\n\n      this.#open(cell.gridX, cell.gridY);\n\n      if (cell.mine) {\n        this.#grid.disabled = true;\n\n        this.#game.scheduleTimer(2000, () => {\n          for (const cell of this.#grid.sprites) {\n            (cell.content || {}).enabled = false;\n          }\n\n          this.#game.text.changed();\n\n          this.#onlose();\n        });\n      }\n\n      break;\n    case 'flag':\n      if (cell.flagged) {\n        cell.flagged = false;\n        cell.content.enabled = false;\n        this.#game.text.changed();\n      } else {\n        cell.flagged = true;\n        cell.write(this.#game.text, 'X', this.#fontSize, 'highlight');\n      }\n      break;\n    }\n  }\n\n  #start(cell) {\n    const available = this.#grid.sprites.filter(availableCell => availableCell !== cell && (Math.abs(availableCell.gridX - cell.gridX) > 1 || Math.abs(availableCell.gridY - cell.gridY) > 1));\n\n    for (let i = 0; i < this.#mines; i++) {\n      const index = Math.floor(Math.random() * available.length);\n      const mineCell = available[index];\n      available.splice(index, 1);\n\n      mineCell.mine = true;\n    }\n\n    for (let y = 0; y < this.#grid.h; y++) {\n      for (let x = 0; x < this.#grid.w; x++) {\n        let cell = this.#grid.cellAt(x, y);\n        if (!cell.mine) {\n          cell.mines = 0;\n          for (let dy = -1; dy <= 1; dy++) {\n            for (let dx = -1; dx <= 1; dx++) {\n              if (this.#grid.cellAt(x + dx, y + dy)?.mine) {\n                cell.mines += 1;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.#started = true;\n  }\n\n  #open(x, y) {\n    this.#game.shake(200);\n    const cell = this.#grid.cellAt(x, y);\n\n    if (cell?.flagged) {\n      cell.flagged = false;\n      cell.content.enabled = false;\n    }\n\n    if (cell?.enabled && !cell?.opened) {\n      cell.opened = true;\n\n      cell.activate(false);\n\n      if (cell.mines === 0) {\n        cell.hidden = true;\n\n        this.#open(x, y - 1);\n        this.#open(x, y + 1);\n        this.#open(x - 1, y);\n        this.#open(x + 1, y);\n      } else {\n        if (cell.mine) {\n          for (const mineCell of this.#grid.sprites.filter(cell => cell.mine)) {\n            mineCell.activate(false);\n            mineCell.write(this.#game.text, 'X', this.#fontSize, 'inactive10');\n          }\n        } else {\n          cell.write(this.#game.text, cell.mines, this.#fontSize, `inactive${cell.mines}`);\n        }\n      }\n    }\n\n    if (this.#grid.sprites.filter(cell => !cell.opened).every(cell => cell.mine)) {\n      this.#onwin();\n    }\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode('flag');\n    } else if (button === this.#digButton) {\n      this.#setMode('dig');\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#digButton.activate(this.#mode !== 'dig');\n    this.#flagButton.activate(this.#mode !== 'flag');\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #grid;\n  #spriteBatch;\n  #timer;\n  #over;\n\n  static title = 'PAW PAW TOE';\n  static color = 'orangecat';\n  static sx = 73;\n  static type = 2;\n  static catName = 'ORANGE CAT, THE USELESS BOYFRIEND';\n  static catText = \"BET YOU CAN'T BEAT ME\\nIN PAW PAW TOE!\\n\\n\\nI'M THE SMARTEST\\nORANGE CAT EVER!!!\";\n  static response = \"WELL, THAT'S\\nNOT SAYING MUCH...\\n\\n\\nLET'S SEE!\"\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#grid = new Grid(game, 'center', 'center', 3, 3, 96, 20, 20, (cell) => this.#click(cell));\n    this.#spriteBatch = new SpriteBatch(game);\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (!cell.symbol) {\n      this.#mark(cell, 'X');\n\n      this.#grid.disabled = true;\n\n      this.#timer = this.#game.scheduleTimer(1000, () => {\n        if (!this.#over) {\n          const available = this.#grid.sprites.filter(sprite => !sprite.symbol);\n\n          if (available.length > 0) {\n            this.#mark(available[Math.floor(Math.random() * available.length)], 'O');\n\n            this.#grid.disabled = false;\n            this.#grid.changed();\n          }\n        }\n      });\n    }\n  }\n\n  #mark(cell, symbol) {\n    if (!this.#over) {\n      this.#game.shake(200);\n\n      cell.symbol = symbol;\n\n      cell.activate(false);\n\n      cell.draw(this.#spriteBatch, 64, 0, symbol === 'X' ? 'blackcat' : 'orangecat');\n\n      this.#checkGrid();\n    }\n  }\n\n  #checkGrid() {\n    for (let y = 0; y < 3; y++) {\n      const symbolCounts = new Map();\n\n      for (let x = 0; x < 3; x++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    for (let x = 0; x < 3; x++) {\n      const symbolCounts = new Map();\n\n      for (let y = 0; y < 3; y++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(2, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(2, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(0, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(0, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n  }\n\n  #win(symbol) {\n    this.#over = true;\n    this.#grid.disabled = true;\n    (this.#timer || {}).disabled = true;\n\n    if (symbol === 'X') {\n      this.#onwin();\n    } else if (symbol === 'O') {\n      this.#onlose();\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #spriteBatch;\n  #grids;\n  #cellSize;\n  #buttons;\n  #digit;\n\n  static title = 'SUDOCAT';\n  static color = 'blackcat';\n  static sx = 73;\n  static type = 4;\n  static catName = 'KUMBA';\n  static catText = \"I NEED ALL MY TREATS AND\\nTOYS NEATLY ORGANISED!!\\n\\n\\nTHERE SHOULD BE ONLY ONE\\nTYPE IN EACH ROW, EACH\\nCOLUMN AND IN EACH BOX!!\";\n  static response = 'KITTY MUST HAVE OCD...';\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#spriteBatch = new SpriteBatch(game, true);\n\n    this.#grids = [];\n\n    const gridSpacing = 16;\n\n    const gridSize = Math.floor(Math.min((game.renderer.w - 20) / 3 - (gridSpacing * (3 - 1) / 3), (game.renderer.h - 200) / 3 - (gridSpacing * (3 - 1) / 3)));\n\n    const spacing = 5;\n\n    this.#cellSize = Math.floor(Math.min((gridSize - 0) / 3 - (spacing * (3 - 1) / 3), (gridSize - 0) / 3 - (spacing * (3 - 1) / 3)));\n\n    const startX = game.renderer.w / 2 - 3 * (gridSize + gridSpacing * (3 - 1) / 3) / 2;\n\n    for (let y = 0; y < 3; y++) {\n      for (let x = 0; x < 3; x++) {\n        const grid = new Grid(game, startX + x * (gridSize + gridSpacing), 100 + y * (gridSize + gridSpacing), 3, 3, this.#cellSize, spacing, spacing, (cell) => this.#click(cell));\n        this.#grids.push(grid);\n      }\n    }\n\n    this.#buttons = new Grid(game, 'center', game.renderer.h - 74, 10, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    for (let digit = 1; digit <= 10; digit++) {\n      const button = this.#buttons.sprites[digit - 1];\n      button.draw(this.#spriteBatch, 64 * 2 / 3, digit + 5);\n      button.digit = digit <= 9 ? digit : null;\n    }\n\n    this.#setGrid();\n    this.#selectDigit(1);\n  }\n\n  update() {\n    for (let digit = 1; digit <= 9; digit++) {\n      if (this.#game.input.keyPresses[`Digit${digit}`]) {\n        this.#selectDigit(digit);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      if (this.#digit > 1) {\n        this.#selectDigit(this.#digit - 1);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      if (this.#digit < 9) {\n        this.#selectDigit(this.#digit + 1);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyX'] || this.#game.input.keyPresses['Digit0']) {\n      this.#selectDigit(null);\n    }\n\n    this.#spriteBatch.update();\n\n    for (const grid of this.#grids) {\n      grid.update();\n    }\n\n    this.#buttons.update();\n  }\n\n  draw() {\n    for (const grid of this.#grids) {\n      grid.draw();\n    }\n\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #gridAt(x, y) {\n    return this.#grids[Math.floor(y / 3) * 3 + Math.floor(x / 3)];\n  }\n\n  #cellAt(x, y) {\n    return this.#gridAt(x, y).cellAt(x % 3, y % 3);\n  }\n\n  #setGrid() {\n    const starts = [\n      [\n        6, 8, 0, 1, 0, 0, 0, 9, 0,\n        0, 3, 4, 5, 0, 8, 0, 2, 0,\n        2, 1, 0, 0, 6, 0, 3, 0, 0,\n        5, 0, 0, 4, 0, 7, 0, 0, 9,\n        3, 4, 2, 9, 0, 0, 0, 0, 6,\n        0, 0, 7, 0, 8, 0, 5, 0, 0,\n        9, 2, 0, 8, 0, 0, 0, 5, 3,\n        0, 0, 3, 2, 0, 0, 9, 1, 8,\n        0, 0, 0, 3, 0, 0, 0, 6, 7,\n      ]\n    ];\n\n    const start = starts[Math.floor(Math.random() * starts.length)];\n\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const digit = start[y * 9 + x];\n        if (digit !== 0) {\n          const cell = this.#cellAt(x, y);\n          cell.activate(false);\n          cell.digit = digit;\n          cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, digit + 5);\n        }\n      }\n    }\n  }\n\n  #click(cell) {\n    cell.digit = this.#digit;\n    (cell.content || {}).enabled = false;\n\n    if (this.#digit) {\n      cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, this.#digit + 5);\n    }\n\n    if (this.#checkCells()) {\n      this.#onwin();\n    }\n\n    this.#game.text.changed();\n    this.#spriteBatch.changed();\n  }\n\n  #checkCells() {\n    let valid = true;\n\n    this.#resetCells();\n\n    for (let i = 0; i < 9; i++) {\n      valid &= this.#checkRow(i);\n      valid &= this.#checkColumn(i);\n      valid &= this.#checkGrid(i);\n    }\n\n    return valid;\n  }\n\n  #resetCells() {\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const cell = this.#cellAt(x, y);\n        if (!cell.inactive) {\n          cell.setBaseColor('primary');\n        }\n      }\n    }\n\n    for (let i = 0; i < 9; i++) {\n      this.#grids[i].changed();\n    }\n  }\n\n  #checkRow(x) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let y = 0; y < 9; y++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let y = 0; y < 9; y++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor('active');\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkColumn(y) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let x = 0; x < 9; x++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let x = 0; x < 9; x++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor('active');\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkGrid(index) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    const grid = this.#grids[index];\n\n    for (let i = 0; i < 9; i++) {\n      const cell = grid.sprites[i];\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let i = 0; i < 9; i++) {\n          const cell = grid.sprites[i];\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor('active');\n            grid.changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#selectDigit(button.digit);\n    }\n  }\n\n  #selectDigit(digit) {\n    this.#digit = digit;\n\n    for (const button of this.#buttons.sprites) {\n      button.activate(true);\n    }\n\n    this.#buttons.sprites[digit != null ? digit - 1 : 9].activate(false);\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #grid;\n  #spriteBatch;\n  #opened;\n  #showingA;\n  #showingB;\n  #timer;\n\n  static title = 'MEOWMORY';\n  static color = 'silvercat';\n  static sx = 8;\n  static type = 3;\n  static catName = 'MOLLY';\n  static catText = \"THEY SAY I HAVE THE\\nMEMORY OF A GOLDFISH...\\n\\n\\nCAN YOU SHOW ME HOW\\nTO REMEMBER THINGS??\";\n  static response = 'SOMEONE SAID FISHIE?!\\n\\n\\nYUM!!!';\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    const w = game.renderer.horizontal ? 6 : 5;\n    const h = game.renderer.horizontal ? 5 : 6;\n\n    const spacing = 16;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / w - (spacing * (w - 1) / w), (game.renderer.h - 110) / h - (spacing * (h - 1) / h)));\n\n    this.#grid = new Grid(game, 'center', 100, w, h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#spriteBatch = new SpriteBatch(game, true);\n\n    const available = this.#grid.sprites.slice();\n\n    for (let i = 0; i < (w * h) / 2; i++) {\n      const indexA = Math.floor(Math.random() * available.length);\n      const cellA = available[indexA];\n      available.splice(indexA, 1);\n\n      const indexB = Math.floor(Math.random() * available.length);\n      const cellB = available[indexB];\n      available.splice(indexB, 1);\n\n      cellA.secret = i;\n      cellB.secret = i;\n    }\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (!cell.open) {\n      if (this.#showingA && this.#showingB) {\n        this.#cancelShowing();\n      }\n\n      cell.open = true;\n      cell.draw(this.#spriteBatch, this.#grid.s * 2 / 3, cell.secret, cell.secret < 5 ? 'tabbycat' : null);\n      cell.setBaseColor('active');\n\n      if (this.#opened) {\n        if (cell.secret === this.#opened.secret) {\n          cell.found = true;\n          cell.activate(false);\n\n          this.#opened.found = true;\n          this.#opened.activate(false);\n\n          if (this.#grid.sprites.every(cell => cell.found)) {\n            this.#onwin();\n          }\n        } else {\n          this.#showingA = this.#opened;\n          this.#showingB = cell;\n\n          this.#timer = this.#game.scheduleTimer(1000, () => this.#cancelShowing());\n        }\n\n        this.#opened = false;\n      } else {\n        this.#opened = cell;\n      }\n    }\n  }\n\n  #cancelShowing() {\n    (this.#timer || {}).disabled = true;\n\n    this.#showingA.open = false;\n    this.#showingA.content.enabled = false;\n    this.#showingA.setBaseColor('primary');\n\n    this.#showingB.open = false;\n    this.#showingB.content.enabled = false;\n    this.#showingB.setBaseColor('primary');\n\n    this.#grid.changed();\n    this.#game.text.changed();\n    this.#spriteBatch.changed();\n\n    this.#showingA = null;\n    this.#showingB = null;\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #rows;\n  #columns;\n  #maxRows;\n  #maxColumns;\n  #w;\n  #h;\n  #grid;\n  #buttons;\n  #markButton;\n  #flagButton;\n  #mode;\n\n  static title = 'MEOWSTERPIECE';\n  static color = 'whitecat';\n  static sx = 8;\n  static type = 3;\n  static catName = 'CHA CHA';\n  static catText = 'TODAY I DECIDED TO BE\\nAN ARTIST!!\\nHELP ME WITH THIS\\nPAINT BY NUMBER!\\n\\n\\nTHE CLUES WILL TELL YOU\\nHOW MANY BLOCKS SHOULD\\nBE PAINTED IN EACH ROW\\nAND IN EACH COLUMN!';\n  static response = 'SURE SURE, ARTIST TODAY,\\nSOMETHING ELSE TOMORROW!\\n\\n\\nTYPICAL KITTY...';\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#rows = [[0], [1, 1], [2, 2], [5], [2, 1, 2, 1], [5, 2], [3, 1], [6, 2], [1, 5, 1], [8], [2, 4]];\n    this.#columns = [[1, 2], [4, 1, 1], [3, 6], [7], [3, 6], [4, 4], [1, 3], [2], [3, 1], [2, 3]];\n\n    this.#maxRows = Math.max(...this.#rows.map(row => row.length));\n    this.#maxColumns = Math.max(...this.#columns.map(column => column.length));\n\n    this.#w = this.#columns.length + this.#maxRows;\n    this.#h = this.#rows.length + this.#maxColumns;\n\n    const spacing = 2;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / this.#w - (spacing * (this.#w - 1) / this.#w), (game.renderer.h - 110) / this.#h - (spacing * (this.#h - 1) / this.#h)));\n\n    this.#grid = new Grid(game, 'center', 100, this.#w, this.#h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    for (let x = 0; x < this.#w; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (x < this.#maxRows || y < this.#maxColumns - this.#columns[x - this.#maxRows].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(game.text, this.#columns[x - this.#maxRows][y - (this.#maxColumns - this.#columns[x - this.#maxRows].length)], s * 2 / 3, 'highlight');\n          cell.activate(false);\n        }\n      }\n    }\n\n    for (let y = 0; y < this.#w; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (y < this.#maxColumns || x < this.#maxRows - this.#rows[y - this.#maxColumns].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(game.text, this.#rows[y - this.#maxColumns][x - (this.#maxRows - this.#rows[y - this.#maxColumns].length)], this.#grid.s * 2 / 3, 'highlight');\n          cell.activate(false);\n        }\n      }\n    }\n\n    this.#buttons = new Grid(game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#markButton = this.#buttons.sprites[0];\n    this.#markButton.write(game.text, 'O', 30, 'active');\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(game.text, 'X', 30, 'active');\n\n    this.#setMode('mark');\n\n    this.#grid.changed();\n  }\n\n  update() {\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      this.#setMode('mark');\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      this.#setMode('flag');\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    (cell.content || {}).enabled = false;\n\n    switch (this.#mode) {\n    case 'mark':\n      if (cell.state !== 'marked') {\n        cell.state = 'marked';\n        cell.setBaseColor('active');\n      } else {\n        cell.state = null;\n        cell.setBaseColor('primary');\n      }\n      break;\n\n    case 'flag':\n      cell.setBaseColor('primary');\n      if (cell.state !== 'flagged') {\n        cell.state = 'flagged';\n        cell.write(this.#game.text, 'X', this.#grid.s * 2 / 3, 'highlight');\n      } else {\n        cell.state = null;\n      }\n      break;\n    }\n\n    this.#game.text.changed();\n\n    this.#checkGrid();\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode('flag');\n    } else if (button === this.#markButton) {\n      this.#setMode('mark');\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#markButton.activate(this.#mode !== 'mark');\n    this.#flagButton.activate(this.#mode !== 'flag');\n\n    this.#buttons.changed();\n  }\n\n  #checkGrid() {\n    let gridCorrect = 0;\n\n    for (let x = this.#maxRows; x < this.#w; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        this.#grid.cellAt(x, y).setBaseColor('inactive');\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let y = this.#maxColumns; y < this.#h; y++) {\n        if (this.#grid.cellAt(x, y).state === 'marked') {\n          current += 1;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== 'marked' || y === this.#h - 1) {\n          if ((current > 0 || y === this.#h - 1) && index < this.#columns[x - this.#maxRows].length) {\n            if (current > this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor('highlight');\n            } else if (current === this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor('primary1');\n              correct += 1;\n            }\n\n            index += 1;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#columns[x - this.#maxRows].length) {\n        gridCorrect += 1;\n      }\n    }\n\n    for (let y = this.#maxColumns; y < this.#h; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        this.#grid.cellAt(x, y).setBaseColor('inactive');\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let x = this.#maxRows; x < this.#w; x++) {\n        if (this.#grid.cellAt(x, y).state === 'marked') {\n          current += 1;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== 'marked' || x === this.#w - 1) {\n          if ((current > 0 || x === this.#w - 1) && index < this.#rows[y - this.#maxColumns].length) {\n            if (current > this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor('highlight');\n            } else if (current === this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor('primary1');\n              correct += 1;\n            }\n\n            index += 1;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#rows[y - this.#maxColumns].length) {\n        gridCorrect += 1;\n      }\n    }\n\n    if (gridCorrect === (this.#w - this.#maxRows) + (this.#h - this.#maxColumns)) {\n      this.#onwin();\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nimport Minigame from './Minigame';\nimport Meowsweeper from '../minigames/Meowsweeper';\nimport PawPawToe from '../minigames/PawPawToe';\nimport Sudocat from '../minigames/Sudocat';\nimport Meowmory from '../minigames/Meowmory';\nimport Meowsterpiece from '../minigames/Meowsterpiece';\n\nimport Matrix3 from '../Matrix3';\n\nexport default class {\n  #game;\n  #firstStart;\n  #grid;\n  #buttons;\n  #spriteBatch;\n  #minigameState;\n  #camY;\n  #startBlackCat;\n  #blackCat;\n  #blackCatArrived;\n  #titleShown;\n  #introOver;\n\n  init(game) {\n    this.#game = game;\n    this.#firstStart = game.firstStart;\n    game.firstStart = false;\n\n    this.#grid = new Grid(game, 'center', 100, 6, 15, 128, 0, 0, null, '', 2);\n    this.#grid.disabled = true;\n\n    this.#buttons = new Grid(game, 'center', 132, 3, 7, 128, 64, 64, (button) => this.#buttonClick(button), '', 1);\n\n    if (this.#firstStart) {\n      this.#buttons.disabled = true;\n      this.#camY = -game.renderer.h;\n      game.text.write('THIS IS A TRUE STORY\\n\\n\\nTHE CATS DEPICTED HERE\\nALL LIVE IN DUBLIN', 'center', 'center', 32, 'inactive', ['typing', 'shake']);\n      game.scheduleTimer(9000, () => {\n        this.#startBlackCat = true;\n        game.text.clear();\n      });\n    } else {\n      game.text.write('HELP THE OTHER CATS\\nIN THE BUILDING!!', 'center', 10, 32, 'active', ['typing', 'shake']);\n    }\n\n    this.#spriteBatch = new SpriteBatch(game);\n\n    const minigames = [PawPawToe, Meowmory, Meowsweeper, Sudocat, Meowsterpiece];\n\n    for (let i = 0; i < 21; i++) {\n      if (minigames[i] && (i == 0 || !this.#firstStart)) {\n        this.#buttons.sprites[i].minigame = minigames[i];\n        let sx = minigames[i].sx;\n        let sy = 73;\n        let type = minigames[i].type;\n        if (game.minigamesWon.has(minigames[i])) {\n          this.#buttons.sprites[i].activate(false);\n          sx = 39;\n          sy = 39;\n          type = 1;\n        }\n        this.#spriteBatch.add(this.#buttons.sprites[i].x + sx, this.#buttons.sprites[i].y + sy, 50, type, minigames[i].color);\n      } else {\n        this.#buttons.sprites[i].activate(false);\n      }\n    }\n\n    this.#blackCat = this.#spriteBatch.add('center', game.renderer.h, 900, 1, 'black');\n\n    for (let i = 0; i < this.#buttons.sprites.length; i++) {\n      const button = this.#buttons.sprites[i];\n      if (game.minigamesWon.has(button.minigame)) {\n        button.activate(false);\n      }\n    }\n  }\n\n  update() {\n    if (this.#firstStart) {\n      if (this.#camY < 0) {\n        this.#camY += 3;\n        if (this.#camY >= 0) {\n          this.#camY = 0;\n          this.#game.shake(200);\n        }\n        this.#game.renderer.projection = Matrix3.ortho(0, this.#game.renderer.w, this.#game.renderer.h + this.#camY, this.#camY);\n      } else if (this.#startBlackCat && !this.#blackCatArrived) {\n        this.#blackCat.y -= 3;\n        if (this.#blackCat.y <= this.#game.renderer.h / 2 - this.#blackCat.size / 2) {\n          this.#blackCatArrived = true;\n          this.#blackCat.y = this.#game.renderer.h / 2 - this.#blackCat.size / 2;\n          const title = this.#game.text.write('  A VOIDING\\nYOUR PROBLEMS', 'center', 'center', 48, null, ['sine']);\n          this.#game.text.write('  A GAME BY\\nATTILA HORVATH', 'center', title.y + 180, 36, 'whitecat', ['shake']);\n          this.#game.text.write('TAP TO BEGIN', 'center', title.y + 280, 36, 'inactive', ['typing', 'shake'], 1200);\n          this.#game.shake(500);\n        }\n        this.#blackCat.x = this.#game.renderer.w / 2 - this.#blackCat.size / 2;\n        this.#spriteBatch.changed();\n      } else if (!this.#titleShown) {\n        if (this.#game.input.click()) {\n          this.#game.input.clickRead = true;\n          this.#game.text.clear();\n          const firstLine = this.#game.text.write('SO, I HEARD THIS\\nIS THE DOMAIN OF', 'center',  'center', 28, 'inactive', ['typing', 'shake']);\n          this.#game.text.write('QUEEN KARA', 'center', firstLine.y + 60, 32, 'tabbycat', ['typing', 'sine'], 4000);\n          this.#game.text.write(\"I HOPE SHE'LL ACCEPT ME\\nIF I HELP THE OTHER CATS...\", 'center', firstLine.y + 120, 28, 'inactive', ['typing', 'shake'], 6000);\n          this.#titleShown = true;\n        }\n      } else if (!this.#introOver) {\n        if (this.#game.input.click()) {\n          this.#game.input.clickRead = true;\n          this.#blackCat.hidden = true;\n          this.#spriteBatch.changed();\n          this.#game.text.clear();\n          this.#introOver = true;\n          this.#game.text.write(\"LET'S START WITH THIS\\nGENIUS ORANGE CAT!\", 'center', 10, 32, 'active', ['typing', 'shake']);\n        }\n      } else {\n        this.#buttons.disabled = false;\n      }\n    }\n\n    this.#grid.update();\n    this.#spriteBatch.update();\n\n    if (this.#minigameState) {\n      return this.#minigameState;\n    } else {\n      this.#buttons.update();\n    }\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#minigameState = new Minigame(button.minigame);\n    }\n  }\n}\n","import Game from \"./Game\";\n\nconst game = new Game();\n\nfunction step(timestamp) {\n  requestAnimationFrame(step);\n  game.step(timestamp);\n}\n\nrequestAnimationFrame(step);\n","import Renderer from './Renderer';\nimport Input from './Input';\n\nimport Text from './Text';\nimport SpriteBatch from './SpriteBatch';\nimport Select from './states/Select';\nimport Minigame from './states/Minigame';\nimport Matrix3 from './Matrix3';\nimport PawPawToe from './minigames/PawPawToe';\nimport Meowmory from './minigames/Meowmory';\n\nexport default class {\n  #started;\n  #timers;\n  #backgroundBatch;\n  #spriteBatch;\n  #cursor;\n  #state;\n  #nextState;\n  #shakeScreen;\n\n  constructor() {\n    this.renderer = new Renderer(() => {\n      if (!this.#started) {\n        for (let i = 0; i < 128; i++) {\n          const type = Math.floor(Math.random() * 15);\n          let color = null;\n          if (type < 5) {\n            color = ['blackcat', 'orangecat', 'whitecat', 'tabbycat', 'silvercat'][Math.floor(Math.random() * 5)];\n          }\n          const sprite = this.#backgroundBatch.add(Math.random() * this.renderer.w, Math.random() * this.renderer.h, 16 + Math.random() * 100, type, color);\n          sprite.a = 0.33;\n          sprite.dx = -0.5 + Math.random();\n          sprite.dy = -0.5 + Math.random();\n          sprite.ds = -0.1 + Math.random() * 0.2;\n        }\n\n        this.#state = new Select();\n        // this.#state = new Minigame(Meowmory);\n        this.#state.init(this);\n        this.#started = true;\n      }\n    });\n\n    this.input = new Input(this);\n    this.#timers = [];\n\n    this.#backgroundBatch = new SpriteBatch(this, true);\n\n    this.text = new Text(this);\n    this.#spriteBatch = new SpriteBatch(this);\n    this.#cursor = this.#spriteBatch.add(0, 0, 26, 0, 'blackcat');\n    this.#cursor.hidden = true;\n\n    this.minigamesWon = new Set();\n\n    this.firstStart = true;\n  }\n\n  step(timestamp) {\n    this.timestamp = timestamp;\n    this.#update(timestamp);\n    this.#draw();\n\n    if (this.#nextState) {\n      this.text.clear();\n      this.#state = this.#nextState;\n      this.#state.init(this);\n      this.#nextState = null;\n    }\n  }\n\n  scheduleTimer(delay, onexpire, repeat) {\n    const timer = { start: this.timestamp ?? 0, delay: delay, onexpire: onexpire, repeat: repeat };\n    this.#timers.push(timer);\n    return timer;\n  }\n\n  shake(duration) {\n    navigator.vibrate(duration);\n    this.#shakeScreen = true;\n    this.scheduleTimer(duration, () => this.#shakeScreen = false);\n  }\n\n  #update(timestamp) {\n    if (this.#shakeScreen) {\n      this.renderer.view[6] = Math.random() * 7;\n      this.renderer.view[7] = Math.random() * 7;\n    } else {\n      this.renderer.view[6] = 0;\n      this.renderer.view[7] = 0;\n    }\n\n    this.input.update();\n\n    if (this.input.mouse && this.#cursor.hidden) {\n      this.#cursor.hidden = false;\n      this.#spriteBatch.changed();\n    }\n\n    if (this.input.moved) {\n      this.#cursor.x = this.input.x - 6;\n      this.#cursor.y = this.input.y - 6;\n\n      this.#spriteBatch.changed();\n    }\n\n    for (const sprite of this.#backgroundBatch.sprites) {\n      sprite.x += sprite.dx;\n      sprite.y += sprite.dy;\n      sprite.size += sprite.ds;\n\n      if (sprite.x < 0) {\n        sprite.dx = -sprite.dx;\n        sprite.x = 0;\n      }\n\n      if (sprite.y < 0) {\n        sprite.dy = -sprite.dy;\n        sprite.y = 0;\n      }\n\n      if (sprite.x > this.renderer.w) {\n        sprite.dx = -sprite.dx;\n        sprite.x = this.renderer.w;\n      }\n\n      if (sprite.y > this.renderer.h) {\n        sprite.dy = -sprite.dy;\n        sprite.y = this.renderer.h;\n      }\n\n      if (sprite.size < 16) {\n        sprite.ds = -sprite.ds;\n        sprite.size = 16;\n      }\n\n      if (sprite.size > 116) {\n        sprite.ds = -sprite.ds;\n        sprite.size = 116;\n      }\n    }\n\n    this.#backgroundBatch.changed();\n    this.#backgroundBatch.update();\n\n    this.#updateTimers(timestamp);\n\n    if (this.#state) {\n      this.#nextState = this.#state.update();\n    }\n\n    this.text.update(timestamp);\n    this.#spriteBatch.update();\n  }\n\n  #updateTimers(timestamp) {\n    for (const timer of this.#timers) {\n      if (timestamp >= timer.start + timer.delay && !timer.disabled) {\n        if (timer.repeat) {\n          timer.start = timestamp;\n        } else {\n          timer.expired = true;\n        }\n\n        if (timer.onexpire) {\n          timer.onexpire();\n        }\n      }\n    }\n\n    if (this.#timers.some(timer => timer.expired || timer.disabled)) {\n      this.#timers = this.#timers.filter(timer => !timer.expired && !timer.disabled);\n    }\n  }\n\n  #draw() {\n    this.renderer.clear();\n\n    const currProjection = this.renderer.projection;\n\n    this.renderer.projection = Matrix3.ortho(0, this.renderer.w, this.renderer.h, 0);\n    this.#backgroundBatch.draw();\n    this.renderer.projection = currProjection;\n\n    if (this.#state) {\n      this.#state.draw();\n    }\n\n    this.renderer.projection = Matrix3.ortho(0, this.renderer.w, this.renderer.h, 0);\n    this.text.draw();\n    this.#spriteBatch.draw();\n    this.renderer.projection = currProjection;\n  }\n}\n"],"names":["Matrix3","Float32Array","identity","ortho","left","right","bottom","top","Shader","program","viewUniformLocation","projectionUniformLocation","texUniformLocation","imageSizeUniformLocation","constructor","gl","vertexShaderSource","fragmentShaderSource","vertexShader","this","compileShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","bind","bindAttribLocation","getUniformLocation","linkProgram","use","v","p","useProgram","setup","uniformMatrix3fv","uniform1i","uniform1f","type","source","shader","createShader","shaderSource","Renderer","onresize","shaders","textures","images","currentShader","currentVao","currentTexture","document","body","style","margin","padding","canvas","createElement","display","width","height","cursor","touchAction","ResizeObserver","w","clientWidth","h","clientHeight","horizontal","viewport","observe","box","appendChild","getContext","clearColor","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","quadBuffer","createQuadBuffer","Map","name","cachedShader","get","set","createVao","vao","createVertexArray","bindVertexArray","createBuffer","data","dynamic","buffer","updateBuffer","useBuffer","bufferData","ARRAY_BUFFER","DYNAMIC_DRAW","STATIC_DRAW","bindBuffer","a","location","size","stride","offset","divisor","vertexAttribPointer","FLOAT","enableVertexAttribArray","vertexAttribDivisor","loadTexture","smooth","path","cachedTexture","texture","createTexture","prepareTexture","imageIndex","length","image","Image","src","onload","clear","COLOR_BUFFER_BIT","d","vertexCount","instanceCount","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","drawArraysInstanced","TRIANGLES","drawArrays","texImage2D","RGBA","UNSIGNED_BYTE","Uint8Array","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","NEAREST","TEXTURE_MAG_FILTER","Input","newKeyPresses","newKeyReleases","newPress","newRelease","lastX","lastY","game","renderer","addEventListener","event","mouse","pointerType","x","offsetX","y","offsetY","code","u","moved","press","release","keyPresses","newKeyPress","newKeyPressValue","Object","entries","keyReleases","newKeyRelease","newKeyReleaseValue","clickRead","click","Sprite","color","angle","enabled","hidden","cc","attributes","r","g","b","cb","baseColor","fromRGB","activate","active","inactive","text","content","animations","delay","toString","spriteBatch","add","SpriteBatch","instanceBuffer","spritesChanged","textureName","sprites","c","sprite","push","filter","map","flat","TextSegment","time","begin","timestamp","updated","animation","i","baseY","Math","sin","baseX","random","Text","segments","super","floor","max","split","s","segment","currX","currY","charCodeAt","Grid","spacingX","spacingY","onclick","pressed","gridY","gridX","cell","fullW","fullH","disabled","input","newActive","cellAtPosition","cellAt","index","indexAtPosition","relX","relY","indexX","trunc","indexY","Minigame","minigameClass","minigame","buttons","cat","leftPaw","rightPaw","catNameText","catTextText","exitButton","exit","catMet","started","init","button","buttonClick","cn","ct","Select","cr","title","win","lose","tt","minigamesWon","Meowsweeper","onwin","onlose","mines","fontSize","grid","digButton","flagButton","mode","static","min","setMode","start","open","mine","flagged","available","availableCell","abs","mineCell","splice","dy","dx","shake","opened","every","PawPawToe","timer","over","symbol","mark","checkGrid","symbolCounts","Sudocat","grids","cellSize","digit","gridSize","gridSpacing","spacing","startX","setGrid","selectDigit","gridAt","starts","checkCells","valid","resetCells","checkRow","checkColumn","digitCounts","digitCount","Meowmory","showingA","showingB","slice","indexA","cellA","indexB","cellB","secret","cancelShowing","found","Meowsterpiece","rows","columns","maxRows","maxColumns","markButton","row","column","state","gridCorrect","current","correct","firstStart","minigameState","camY","startBlackCat","blackCat","blackCatArrived","titleShown","introOver","minigames","sx","sy","has","firstLine","timers","backgroundBatch","nextState","shakeScreen","ds","Set","step","onexpire","repeat","duration","navigator","vibrate","updateTimers","expired","some","currProjection","requestAnimationFrame"],"mappings":"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"}