{"version":3,"file":"bundle.js","sources":["src/Matrix3.js","src/Shader.js","src/Renderer.js","src/Input.js","src/Sprite.js","src/SpriteBatch.js","shaders/sprite.vert","shaders/sprite.frag","src/TextSegment.js","src/Text.js","src/Particles.js","src/Grid.js","src/states/Minigame.js","src/minigames/Meowsweeper.js","src/minigames/PawPawToe.js","src/minigames/Sudocat.js","src/minigames/Meowmory.js","src/minigames/Meowjong.js","src/minigames/Meowsterpiece.js","src/states/Select.js","src/index.js","src/Game.js"],"sourcesContent":["export default class Matrix3 extends Float32Array {\n  static identity() {\n    return new Matrix3([\n      1.0, 0.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 0.0, 1.0,\n    ]);\n  }\n\n  static ortho(left, right, bottom, top) {\n    return new Matrix3([\n      2.0 / (right - left), 0.0, 0.0,\n      0.0, 2.0 / (top - bottom), 0.0,\n      -(right + left) / (right - left), -(top + bottom) / (top - bottom), 1.0,\n    ]);\n  }\n}\n","export default class {\n  #program;\n  #viewUniformLocation;\n  #projectionUniformLocation;\n  #texUniformLocation;\n  #imageSizeUniformLocation;\n\n  constructor(gl, vertexShaderSource, fragmentShaderSource) {\n    const vertexShader = this.#compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource)\n    const fragmentShader = this.#compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n    const program = gl.createProgram();\n\n    const attachShader = gl.attachShader.bind(gl);\n    const bindAttribLocation = gl.bindAttribLocation.bind(gl);\n    const getUniformLocation = gl.getUniformLocation.bind(gl);\n\n    attachShader(program, vertexShader);\n    attachShader(program, fragmentShader);\n\n    bindAttribLocation(program, POSITION_ATTRIBUTE_LOCATION, 'vertexPosition');\n    bindAttribLocation(program, COLOR_ATTRIBUTE_LOCATION, 'vertexColor');\n    bindAttribLocation(program, TEX_COORD_ATTRIBUTE_LOCATION, 'vertexTexCoord');\n\n    bindAttribLocation(program, SPRITE_POSITION_ATTRIBUTE_LOCATION, 'spritePosition');\n    bindAttribLocation(program, SPRITE_SIZE_ATTRIBUTE_LOCATION, 'spriteSize');\n    bindAttribLocation(program, SPRITE_TYPE_ATTRIBUTE_LOCATION, 'spriteType');\n    bindAttribLocation(program, SPRITE_COLOR_ATTRIBUTE_LOCATION, 'spriteColor');\n\n    gl.linkProgram(program);\n\n    this.#viewUniformLocation = getUniformLocation(program, 'view');\n    this.#projectionUniformLocation = getUniformLocation(program, 'projection');\n    this.#texUniformLocation = getUniformLocation(program, 'tex');\n    this.#imageSizeUniformLocation = getUniformLocation(program, 'imageSize');\n\n    this.#program = program;\n  }\n\n  use(gl, view, projection) {\n    gl.useProgram(this.#program);\n\n    this.setup(gl, view, projection);\n  }\n\n  setup(gl, view, projection) {\n    if (this.#viewUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#viewUniformLocation, false, view);\n    }\n\n    if (this.#projectionUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#projectionUniformLocation, false, projection);\n    }\n\n    if (this.#texUniformLocation != null) {\n      gl.uniform1i(this.#texUniformLocation, 0);\n    }\n\n    if (this.#imageSizeUniformLocation != null) {\n      gl.uniform1f(this.#imageSizeUniformLocation, IMAGE_SIZE);\n    }\n  }\n\n  #compileShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    return shader;\n  }\n}\n","import Matrix3 from './Matrix3';\n\nimport Shader from './Shader';\n\nexport default class {\n  #onresize;\n  #gl;\n  #shaders;\n  #textures;\n  #images;\n  #currentShader;\n  #currentVao;\n  #currentTexture;\n\n  constructor(onresize) {\n    this.#onresize = onresize;\n\n    document.body.style.margin = '0';\n    document.body.style.padding = '0';\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.style.display = 'block';\n    this.canvas.style.width = '100dvw';\n    this.canvas.style.height = '100dvh';\n    this.canvas.style.cursor = 'none';\n    this.canvas.style.touchAction = 'none';\n\n    new ResizeObserver(() => {\n      this.w = this.canvas.clientWidth;\n      this.h = this.canvas.clientHeight;\n\n      this.canvas.width = this.w;\n      this.canvas.height = this.h;\n\n      this.horizontal = this.w > this.h;\n\n      this.#gl.viewport(0, 0, this.w, this.h);\n      this.projection = Matrix3.ortho(0, this.w, this.h, 0);\n\n      this.#onresize();\n    }).observe(this.canvas, { box: 'content-box' });\n\n    document.body.appendChild(this.canvas);\n\n    this.#gl = this.canvas.getContext('webgl2');\n\n    this.#gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    this.#gl.clearColor(0.68, 0.68, 0.94, 1.0);\n\n    this.#gl.pixelStorei(this.#gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n    this.#gl.enable(this.#gl.BLEND);\n    this.#gl.blendFunc(this.#gl.ONE, this.#gl.ONE_MINUS_SRC_ALPHA);\n\n    this.quadBuffer = this.#createQuadBuffer();\n\n    this.#shaders = new Map();\n    this.#textures = new Map();\n    this.#images = [];\n\n    this.view = Matrix3.identity();\n    this.projection = Matrix3.ortho(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  createShader(name, vertexShaderSource, fragmentShaderSource) {\n    const cachedShader = this.#shaders.get(name);\n\n    if (cachedShader) {\n      return cachedShader;\n    }\n\n    const shader = new Shader(this.#gl, vertexShaderSource, fragmentShaderSource);\n    this.#shaders.set(name, shader);\n\n    return shader;\n  }\n\n  createVao() {\n    const vao = this.#gl.createVertexArray();\n\n    this.#gl.bindVertexArray(vao);\n\n    return vao;\n  }\n\n  createBuffer(data, dynamic) {\n    const buffer = this.#gl.createBuffer();\n\n    this.updateBuffer(buffer, data, dynamic);\n\n    return buffer;\n  }\n\n  updateBuffer(buffer, data, dynamic) {\n    this.useBuffer(buffer);\n\n    this.#gl.bufferData(this.#gl.ARRAY_BUFFER, data, dynamic ? this.#gl.DYNAMIC_DRAW : this.#gl.STATIC_DRAW);\n  }\n\n  useBuffer(buffer) {\n    this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, buffer);\n  }\n\n  setAttribute(location, size, stride, offset, divisor) {\n    this.#gl.vertexAttribPointer(location, size, this.#gl.FLOAT, false, stride, offset);\n    this.#gl.enableVertexAttribArray(location);\n\n    if (divisor != null) {\n      this.#gl.vertexAttribDivisor(location, divisor);\n    }\n  }\n\n  fetchTexture(filename, smooth) {\n    const path = filename ? `textures/${filename}.png` : 'blank';\n    const cachedTexture = this.#textures.get(`${path}_${smooth}`);\n\n    if (cachedTexture) {\n      return cachedTexture;\n    }\n\n    const texture = this.#gl.createTexture();\n    this.#prepareTexture(texture, null, smooth);\n\n    if (filename) {\n      const imageIndex = this.#images.length;\n      const image = new Image();\n\n      image.src = path;\n      image.onload = () => this.#prepareTexture(texture, imageIndex, smooth);\n\n      this.#images[imageIndex] = image;\n    }\n\n    this.#textures.set(`${path}_${smooth}`, texture);\n\n    return texture;\n  }\n\n  clear() {\n    this.#gl.clear(this.#gl.COLOR_BUFFER_BIT);\n  }\n\n  draw(shader, vao, texture, vertexCount, instanceCount) {\n    if (shader !== this.#currentShader) {\n      shader.use(this.#gl, this.view, this.projection);\n      this.#currentShader = shader;\n    } else {\n      this.#currentShader.setup(this.#gl, this.view, this.projection);\n    }\n\n    if (vao !== this.#currentVao) {\n      this.#gl.bindVertexArray(vao);\n      this.#currentVao = vao;\n    }\n\n    if (texture !== this.#currentTexture) {\n      this.#gl.activeTexture(this.#gl.TEXTURE0);\n      this.#gl.bindTexture(this.#gl.TEXTURE_2D, texture);\n      this.#currentTexture = texture;\n    }\n\n    if (instanceCount != null) {\n      this.#gl.drawArraysInstanced(this.#gl.TRIANGLES, 0, vertexCount, instanceCount);\n    } else {\n      this.#gl.drawArrays(this.#gl.TRIANGLES, 0, vertexCount);\n    }\n  }\n\n  #createQuadBuffer() {\n    return this.createBuffer(new Float32Array([\n      0.0, 0.0, 0.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 0.0, 1.0, 0.0,\n\n      1.0, 0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 1.0, 1.0, 1.0,\n    ]), false);\n  }\n\n  #prepareTexture(texture, imageIndex, smooth) {\n    const gl = this.#gl;\n    const texture0 = gl.TEXTURE0;\n    const texture2d = gl.TEXTURE_2D;\n    const texImage2D = gl.texImage2D.bind(gl);\n    const texParameteri = gl.texParameteri.bind(gl);\n    const rgba = gl.RGBA;\n    const unsignedByte = gl.UNSIGNED_BYTE;\n    const filter = smooth ? gl.LINEAR : gl.NEAREST;\n\n    gl.activeTexture(texture0);\n    gl.bindTexture(texture2d, texture);\n\n    if (imageIndex != null) {\n      texImage2D(texture2d, 0, rgba, rgba, unsignedByte, this.#images[imageIndex]);\n    } else {\n      texImage2D(texture2d, 0, rgba, 1, 1, 0, rgba, unsignedByte, new Uint8Array([255, 255, 255, 255,]));\n    }\n\n    texParameteri(texture2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    texParameteri(texture2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    texParameteri(texture2d, gl.TEXTURE_MIN_FILTER, filter);\n    texParameteri(texture2d, gl.TEXTURE_MAG_FILTER, filter);\n  }\n}\n","export default class {\n  #newKeyPresses;\n  #newKeyReleases;\n  #newPress;\n  #newRelease;\n  #lastX;\n  #lastY;\n\n  constructor(game) {\n    this.#newKeyPresses = {};\n    this.#newKeyReleases = {};\n\n    game.renderer.canvas.addEventListener('pointermove', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n    });\n\n    game.renderer.canvas.addEventListener('pointerdown', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newPress = true;\n    });\n\n    game.renderer.canvas.addEventListener('pointerup', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newRelease = true;\n    });\n\n    addEventListener('keydown', event => {\n      this.#newKeyPresses[event.code] = true;\n    });\n\n    addEventListener('keyup', event => {\n      this.#newKeyReleases[event.code] = true;\n    });\n  }\n\n  update() {\n    if (this.x !== this.#lastX || this.y !== this.#lastY) {\n      this.#lastX = this.x;\n      this.#lastY = this.y;\n      this.moved = true;\n    }\n\n    this.press = false;\n\n    if (this.#newPress) {\n      this.press = true;\n      this.#newPress = false;\n    }\n\n    this.release = false;\n\n    if (this.#newRelease) {\n      this.release = true;\n      this.#newRelease = false;\n    }\n\n    this.keyPresses = {};\n\n    for (const [newKeyPress, newKeyPressValue] of Object.entries(this.#newKeyPresses)) {\n      if (newKeyPressValue) {\n        this.keyPresses[newKeyPress] = true;\n        this.#newKeyPresses[newKeyPress] = false;\n      }\n    }\n\n    this.keyReleases = {};\n\n    for (const [newKeyRelease, newKeyReleaseValue] of Object.entries(this.#newKeyReleases)) {\n      if (newKeyReleaseValue) {\n        this.keyReleases[newKeyRelease] = true;\n        this.#newKeyReleases[newKeyRelease] = false;\n      }\n    }\n\n    this.clickRead = false;\n  }\n\n  click() {\n    return !this.clickRead && ((this.mouse && this.release) || (!this.mouse && this.press));\n  }\n\n  left() {\n    return this.keyPresses['KeyA'] || this.keyPresses['ArrowLeft'];\n  }\n\n  right() {\n    return this.keyPresses['KeyD'] || this.keyPresses['ArrowRight'];\n  }\n\n  cancel() {\n    return this.keyPresses['KeyX'] || this.keyPresses['Digit0'];\n  }\n}\n","export default class {\n  constructor(x, y, s, type, color) {\n    this.x = x;\n    this.y = y;\n    this.s = s;\n    this.type = type;\n    this.enabled = true;\n    this.hidden = false;\n    this.a = 1.0;\n\n    this.setColor(color);\n  }\n\n  attributes() {\n    return [this.x, this.y, this.s, this.type, this.r, this.g, this.b, this.hidden ? 0 : this.a];\n  }\n\n  setBaseColor(color) {\n    this.baseColor = color;\n    this.setColor(color);\n  }\n\n  setColor(index) {\n    let color = [0xd9dcff, 0xadadf0, 0xc28c94, 0xa66670, 0x575775,\n                 0x545454, 0xb36e14, 0xe6e6e6, 0xa38f61, 0x999999,\n                 0x90a8c3, 0x469d89, 0xb5c99a, 0x00a6fb, 0x4cc9f0,\n                 0xf4cae0, 0xe500a4, 0xf20089, 0xffffff, 0xffccf0,\n                 0x000000][index];\n    if (color == null) {\n      color = 0xffffff;\n    }\n    this.r = ((color & 0xff0000) >> 16) / 255.0;\n    this.g = ((color & 0x00ff00) >> 8) / 255.0;\n    this.b = (color & 0x0000ff) / 255.0;\n  }\n\n  activate(active) {\n    this.inactive = !active;\n    this.setColor(active ? (this.baseColor || PRIMARY_COLOR) : INACTIVE_COLOR);\n  }\n\n  write(text, content, s, color = ACTIVE_COLOR, animations = null, delay = null) {\n    (this.content || {}).enabled = false;\n    this.content = text.write(content.toString(), this.x + (this.s - s) / 2, this.y + (this.s - s) / 2, s, color, animations, delay);\n  }\n\n  draw(spriteBatch, s, type, color) {\n    (this.content || {}).enabled = false;\n    this.content = spriteBatch.add(this.x + (this.s - s) / 2, this.y + (this.s - s) / 2, s, type, color);\n  }\n}\n","import vertexShaderSource from '../shaders/sprite.vert';\nimport fragmentShaderSource from '../shaders/sprite.frag';\n\nimport Sprite from './Sprite';\n\nexport default class {\n  #game;\n  #shader;\n  #vao;\n  #instanceBuffer;\n  #texture;\n  #spritesChanged;\n\n  constructor(game, smooth = false, textureFilename = 'sprites') {\n    this.#game = game;\n    const renderer = game.renderer;\n\n    this.#shader = renderer.createShader('sprite', vertexShaderSource, fragmentShaderSource);\n\n    this.#vao = renderer.createVao();\n\n    renderer.useBuffer(renderer.quadBuffer);\n\n    renderer.setAttribute(POSITION_ATTRIBUTE_LOCATION, 2, 16, 0);\n    renderer.setAttribute(TEX_COORD_ATTRIBUTE_LOCATION, 2, 16, 8);\n\n    this.#instanceBuffer = renderer.createBuffer(new Float32Array(), true);\n\n    renderer.setAttribute(SPRITE_POSITION_ATTRIBUTE_LOCATION, 2, 32, 0, 1);\n    renderer.setAttribute(SPRITE_SIZE_ATTRIBUTE_LOCATION, 1, 32, 8, 1);\n    renderer.setAttribute(SPRITE_TYPE_ATTRIBUTE_LOCATION, 1, 32, 12, 1);\n    renderer.setAttribute(SPRITE_COLOR_ATTRIBUTE_LOCATION, 4, 32, 16, 1);\n\n    this.#texture = renderer.fetchTexture(textureFilename, smooth);\n\n    this.sprites = [];\n    this.changed();\n  }\n\n  add(x, y, s, type, color) {\n    if (x === CENTER) {\n      x = this.#game.renderer.w / 2 - s / 2;\n    }\n\n    if (y === CENTER) {\n      y = this.#game.renderer.h / 2 - s / 2;\n    }\n\n    const sprite = new Sprite(x, y, s, type, color);\n\n    this.sprites.push(sprite);\n    this.changed();\n\n    return sprite;\n  }\n\n  changed() {\n    this.#spritesChanged = true;\n  }\n\n  update() {\n    if (this.#spritesChanged) {\n      this.sprites = this.sprites.filter(sprite => sprite.enabled);\n\n      this.#game.renderer.updateBuffer(this.#instanceBuffer, new Float32Array(\n        this.sprites\n            .map(sprite => sprite.attributes())\n            .flat()\n      ), true);\n\n      this.#spritesChanged = false;\n    }\n  }\n\n  draw() {\n    this.#game.renderer.draw(this.#shader, this.#vao, this.#texture, 6, this.sprites.length);\n  }\n}\n","#version 300 es\n\nuniform mat3 view;\nuniform mat3 projection;\nuniform float imageSize;\n\nuniform sampler2D tex;\n\nin vec2 vertexPosition;\nin vec2 vertexTexCoord;\n\nin vec2 spritePosition;\nin float spriteSize;\nin float spriteType;\nin vec4 spriteColor;\n\nout vec2 texCoord;\nout vec4 tint;\n\nvoid main() {\n  vec2 texOffset = vec2(imageSize / float(textureSize(tex, 0)),\n                        imageSize / float(textureSize(tex, 0).y));\n\n  texCoord = vec2(texOffset.x, 0.0) * spriteType + vertexTexCoord * texOffset;\n  tint = spriteColor;\n  tint.rgb *= tint.a;\n\n  gl_Position = vec4(projection * view * vec3(vertexPosition * spriteSize + spritePosition, 1.0), 1.0);\n}\n","#version 300 es\n\nprecision highp float;\n\nuniform sampler2D tex;\n\nin vec2 texCoord;\nin vec4 tint;\n\nout vec4 fragmentColor;\n\nvoid main() {\n  fragmentColor = texture(tex, texCoord) * tint;\n}\n","export default class {\n  constructor(text, x, y, s, color, animations, delay) {\n    this.text = text;\n    this.x = x;\n    this.y = y;\n    this.s = s;\n    this.color = color;\n    this.animations = animations ?? [];\n    this.delay = delay ?? 0;\n\n    this.sprites = [];\n    this.enabled = true;\n\n    this.time = 0;\n    this.begin = null;\n  }\n\n  setColor(color) {\n    for (const sprite of this.sprites) {\n      sprite.setColor(color);\n    }\n  }\n\n  update(timestamp) {\n    let updated = false;\n\n    for (const animation of this.animations) {\n      switch (animation) {\n      case SINE_ANIMATION:\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.y = sprite.baseY + Math.sin(i + timestamp / 200) * 10;\n        }\n        updated = true;\n        break;\n      case SHAKE_ANIMATION:\n        this.time++;\n\n        if (this.time === 7) {\n          this.time = 0;\n          for (let i = 0; i < this.sprites.length; i++) {\n            const sprite = this.sprites[i];\n            sprite.x = sprite.baseX + Math.random() * 5;\n            sprite.y = sprite.baseY + Math.random() * 5;\n          }\n        }\n        updated = true;\n        break;\n      case TYPING_ANIMATION:\n        if (!this.begin) {\n          this.begin = timestamp;\n        }\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.hidden = (timestamp - this.begin - this.delay) / 150 < i;\n        }\n        updated = true;\n        break;\n      }\n    }\n\n    return updated;\n  }\n}\n","import SpriteBatch from './SpriteBatch';\nimport TextSegment from './TextSegment';\n\nexport default class extends SpriteBatch {\n  #game;\n  #segments;\n\n  constructor(game) {\n    super(game, false, 'font');\n\n    this.#game = game;\n    this.#segments = [];\n  }\n\n  write(text, x, y, s, color = ACTIVE_COLOR, animations = null, delay = null) {\n    if (x === CENTER) {\n      x = Math.floor(this.#game.renderer.w / 2 - (Math.max(...text.split('\\n').map(s => s.length)) * s) / 2);\n    }\n\n    if (y === CENTER) {\n      y = Math.floor(this.#game.renderer.h / 2 - (text.split('\\n').length * s) / 2);\n    }\n\n    const segment = new TextSegment(text, x, y, s, color, animations, delay);\n\n    let currX = x;\n    let currY = y;\n\n    for (const c of text) {\n      let type;\n\n      if (c === '\\n') {\n        currY += s;\n        currX = x;\n\n        continue;\n      }\n\n      if (c >= 'A' && c <= 'Z') {\n        type = c.charCodeAt(0) - 'A'.charCodeAt(0);\n      } else if (c >= '0' && c <= '9') {\n        type = 26 + c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if (c === '?') {\n        type = 36;\n      } else if (c === '!') {\n        type = 37;\n      } else if (c === ',') {\n        type = 38;\n      } else if (c === '.') {\n        type = 39;\n      } else if (c === \"'\") {\n        type = 40;\n      }\n\n      if (type != null) {\n        const sprite = this.add(currX, currY, s, type, color);\n        sprite.baseX = currX;\n        sprite.baseY = currY;\n        segment.sprites.push(sprite);\n      }\n\n      currX += s;\n    }\n\n    this.#segments.push(segment);\n    this.changed();\n\n    return segment;\n  }\n\n  clear() {\n    for (const segment of this.#segments) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = [];\n    this.changed();\n  }\n\n  update(timestamp) {\n    for (const segment of this.#segments.filter(segment => !segment.enabled)) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = this.#segments.filter(segment => segment.enabled);\n\n    for (const segment of this.#segments) {\n      if (segment.update(timestamp)) {\n        this.changed();\n      }\n    }\n\n    super.update();\n  }\n}\n","import SpriteBatch from './SpriteBatch';\n\nexport default class extends SpriteBatch {\n  #game;\n\n  constructor(game) {\n    super(game, false, null);\n\n    this.#game = game;\n  }\n\n  emit(x, y, colorful = false, count = 128, t = 1000) {\n    for (let i = 0; i < count; i++) {\n      const particle = this.add(x, y, 5);\n\n      if (colorful) {\n        particle.r = Math.random();\n        particle.g = Math.random();\n        particle.b = Math.random();\n      } else {\n        const color = 0.5 + Math.random() * 0.5;\n        particle.r = color;\n        particle.g = color;\n        particle.b = color;\n      }\n\n      const angle = Math.random() * Math.PI * 2;\n      particle.dx = Math.cos(angle) * Math.random() * 5;\n      particle.dy = Math.sin(angle) * Math.random() * 5;\n      particle.t = t;\n    }\n\n    this.changed();\n  }\n\n  clear() {\n    for (const particle of this.sprites) {\n      particle.enabled = false;\n    }\n\n    this.changed();\n  }\n\n  update(timestamp) {\n    for (const particle of this.sprites) {\n      particle.x += particle.dx;\n      particle.y += particle.dy;\n\n      if (!particle.begin) {\n        particle.begin = timestamp;\n      }\n\n      if (particle.begin + particle.t <= timestamp) {\n        particle.enabled = false;\n      } else {\n        particle.a = 1.0 - (timestamp - particle.begin) / particle.t;\n      }\n    }\n\n    this.changed();\n\n    super.update();\n  }\n}\n","import SpriteBatch from './SpriteBatch';\n\nexport default class extends SpriteBatch {\n  #game;\n  #spacingX;\n  #spacingY;\n  #onclick;\n  #active;\n  #pressed;\n\n  constructor(game, x, y, w, h, s, spacingX, spacingY, onclick, color = PRIMARY_COLOR, type = 0) {\n    super(game, false, 'cells');\n\n    this.#game = game;\n\n    if (x === CENTER) {\n      x = game.renderer.w / 2 - w * (s + (spacingX ?? 0) * (w - 1) / w) / 2;\n    }\n\n    if (y === CENTER) {\n      y = game.renderer.h / 2 - h * (s + (spacingY ?? 0) * (h - 1) / h) / 2;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h\n    this.s = s;\n    this.#spacingX = spacingX ?? 0;\n    this.#spacingY = spacingY ?? 0;\n    this.#onclick = onclick;\n    this.color = color;\n\n    for (let gridY = 0; gridY < h; gridY++) {\n      for (let gridX = 0; gridX < w; gridX++) {\n        const cell = this.add(x + gridX * this.#fullW, y + gridY * this.#fullH, s, type, color);\n        cell.setColor(color);\n        cell.grid = this;\n        cell.gridX = gridX;\n        cell.gridY = gridY;\n      }\n    }\n  }\n\n  update(pressHandled = false) {\n    if (!this.disabled) {\n      if (this.#game.input.moved) {\n        let newActive = this.#cellAtPosition(this.#game.input.x, this.#game.input.y);\n        if (newActive?.inactive) {\n          newActive = null;\n        }\n\n        if (newActive !== this.#active && !this.#pressed) {\n          if (this.#onclick) {\n            if (this.#game.input.mouse) {\n              if (!this.#active?.inactive) {\n                this.#active?.setColor(this.#active?.baseColor || this.color);\n              }\n\n              newActive?.setColor(HIGHLIGHT_COLOR);\n              this.changed();\n            }\n          }\n        }\n\n        this.#active = newActive;\n      }\n\n      if (this.#game.input.press && !pressHandled) {\n        this.#pressed = this.#active;\n\n        if (this.#onclick) {\n          if (this.#game.input.mouse) {\n            this.#pressed?.setColor(ACTIVE_COLOR);\n            this.changed();\n          }\n        }\n      }\n\n      if (this.#game.input.click() && !pressHandled) {\n        if (this.#onclick) {\n          this.#pressed?.setColor(this.#pressed?.baseColor || this.color);\n          if (this.#active && this.#active === this.#pressed) {\n            this.#game.input.clickRead = true;\n            this.#onclick(this.#pressed);\n          }\n          this.changed();\n        }\n\n        this.#pressed = null;\n      }\n    }\n\n    super.update();\n\n    return this.#active != null;\n  }\n\n  cellAt(x, y) {\n    if (x >= 0 && x < this.w && y >= 0 && y < this.h) {\n      return this.sprites[this.w * y + x];\n    }\n  }\n\n  #cellAtPosition(x, y) {\n    const index = this.#indexAtPosition(x, y);\n\n    if (index) {\n      return this.cellAt(index[0], index[1]);\n    }\n  }\n\n  #indexAtPosition(x, y) {\n    const relX = x - this.x;\n    const relY = y - this.y;\n    const indexX = Math.trunc(relX / this.#fullW);\n    const indexY = Math.trunc(relY / this.#fullH);\n\n    if (relX >= 0 && relY >= 0 &&\n        relX - indexX * this.#fullW < this.s &&\n        relY - indexY * this.#fullH < this.s &&\n        indexX >= 0 && indexX < this.w && indexY >= 0 && indexY < this.h) {\n      return [indexX, indexY];\n    }\n  }\n\n  get #fullW() {\n    return this.s + this.#spacingX;\n  }\n\n  get #fullH() {\n    return this.s + this.#spacingY;\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\nimport Select from './Select';\n\nexport default class {\n  #minigameClass;\n  #game;\n  #minigame;\n  #buttons;\n  #spriteBatch;\n  #cat;\n  #leftPaw;\n  #rightPaw;\n  #catNameText;\n  #catTextText;\n  #exitButton;\n  #exit;\n  #catMet;\n  #started;\n  #won;\n  #lost;\n  #lostText;\n  #lostTextInfo;\n  #timer;\n\n  constructor(minigameClass) {\n    this.#minigameClass = minigameClass;\n  }\n\n  init(game) {\n    this.#game = game;\n\n    this.#buttons = new Grid(game, game.renderer.w - 74, 10, 1, 1, 64, 0, 0, (button) => this.#buttonClick(button));\n\n    this.#exitButton = this.#buttons.sprites[0];\n\n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(game.text, 'X', 32, ACTIVE_COLOR);\n\n    this.#spriteBatch = new SpriteBatch(game);\n\n    const [_title, color, _sx, _type, catName, catText, _response] = this.#minigameClass.meta;\n\n    this.#cat = this.#spriteBatch.add(CENTER, 100, 64, 1, color);\n    this.#leftPaw = this.#spriteBatch.add(this.#cat.x - 12, this.#cat.y + 60, 24, 0, color);\n    this.#rightPaw = this.#spriteBatch.add(this.#cat.x + 46, this.#cat.y + 60, 24, 0, color);\n\n    this.#catNameText = game.text.write(catName, CENTER, 10, 24, color, [SINE_ANIMATION]);\n    this.#catTextText = game.text.write(catText, CENTER, this.#cat.y + 100, 32, color, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n  }\n\n  update() {\n    const [title, _color, _sx, _type, _catName, _catText, response] = this.#minigameClass.meta;\n\n    if (this.#exit) {\n      (this.#timer || {}).disabled = true;\n      return new Select(this.#game);\n    }\n\n    this.#buttons.update();\n\n    if (!this.#catMet && this.#game.input.click()) {\n      this.#game.input.clickRead = true;\n      this.#cat.setColor(BLACKCAT_COLOR);\n      this.#leftPaw.setColor(BLACKCAT_COLOR);\n      this.#rightPaw.setColor(BLACKCAT_COLOR);\n      this.#spriteBatch.changed();\n      this.#catNameText.enabled = false;\n      this.#catTextText.enabled = false;\n      this.#catNameText = this.#game.text.write('VICKI', CENTER, 10, 24, BLACKCAT_COLOR, [SINE_ANIMATION]);\n      this.#catTextText = this.#game.text.write(response, CENTER, this.#cat.y + 100, 32, BLACKCAT_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n      this.#catMet = true;\n    } else if (!this.#started && this.#game.input.click()) {\n      this.#game.input.clickRead = true;\n      this.#cat.enabled = false;\n      this.#leftPaw.enabled = false;\n      this.#rightPaw.enabled = false;\n      this.#catNameText.enabled = false;\n      this.#catTextText.enabled = false;\n      this.#spriteBatch.changed();\n      this.#setup();\n      this.#started = true;\n    }\n\n    if (this.#started && !this.#won && !this.#lost) {\n      this.#minigame.update();\n    }\n\n    this.#spriteBatch.update();\n\n    if (this.#won && this.#game.input.click()) {\n      this.#exit = true;\n    }\n\n    if (this.#lost && this.#game.input.click()) {\n      this.#setup();\n    }\n  }\n\n  draw() {\n    if (this.#started && !this.#exit) {\n      this.#minigame.draw();\n    }\n\n    this.#spriteBatch.draw();\n    this.#buttons.draw();\n  }\n\n  #setup() {\n    this.#won = false;\n    this.#lost = false;\n\n    (this.#lostText || {}).enabled = false;\n    (this.#lostTextInfo || {}).enabled = false;\n\n    this.#game.text.clear();\n\n    this.#minigame = new this.#minigameClass(this.#game, () => this.#win(), () => this.#lose());\n\n    this.#game.text.write(this.#minigameClass.meta[0], CENTER, 10, 48, INACTIVE_COLOR, [SINE_ANIMATION]);\n\n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(this.#game.text, 'X', 32, ACTIVE_COLOR);\n  }\n\n  #win() {\n    this.#won = true;\n    this.#game.minigamesWon.add(this.#minigameClass);\n\n    const texts = ['CONGRATS!!', 'WELL DONE!!', 'GOOD JOB!!', 'PAWSOME!!', 'AMEOWZING!!'];\n    const text = this.#game.text.write(texts[Math.floor(Math.random() * texts.length)], CENTER, CENTER, 48, HIGHLIGHT_COLOR, [SINE_ANIMATION]);\n    this.#game.text.write('NOW GO HELP THE OTHER CATS!', CENTER, text.y + 75, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 1200);\n\n    this.#timer = this.#game.scheduleTimer(400, () => this.#game.particles.emit(Math.random() * this.#game.renderer.w, Math.random() * this.#game.renderer.h, true, 256, 1000), true);\n  }\n\n  #lose() {\n    this.#lost = true;\n\n    const texts = ['OOPS!!', 'CAT ASTROPHE!!', 'OH WELL!!'];\n    this.#lostText = this.#game.text.write(texts[Math.floor(Math.random() * texts.length)], CENTER, CENTER, 48, HIGHLIGHT_COLOR, [SINE_ANIMATION]);\n    this.#lostTextInfo = this.#game.text.write(\"LET'S TRY AGAIN!\", CENTER, this.#lostText.y + 75, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 1200);\n  }\n\n  #buttonClick(button) {\n    if (button === this.#exitButton) {\n      this.#exit = true;\n    }\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #w;\n  #h;\n  #mines;\n  #fontSize;\n  #grid;\n  #buttons;\n  #digButton;\n  #flagButton;\n  #mode;\n  #started;\n\n  static meta = [\n    'MEOWSWEEPER',\n    TABBYCAT_COLOR,\n    73,\n    2,\n    'QUEEN KARA THE 3RD',\n    \"YOU, NEW CAT!!\\nI NEED YOU TO SCRATCH MY BACK\\nIMMEDIATELY BUT ONLY WHERE\\nI LIKE IT!\\n\\n\\nSINCE YOU'RE NEW I WILL TELL\\nYOU HOW MANY DANGER ZONES\\nARE AROUND WHERE YOU'RE\\nSCRATCHING!\",\n    'OOOH, THE QUEEN HERSELF!!\\n\\n\\nI NEED TO MAKE A GOOD\\nFIRST IMPRESSION!'\n  ];\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#w = game.renderer.horizontal ? 20 : 10;\n    this.#h = game.renderer.horizontal ? 10 : 20;\n    this.#mines = 30;\n\n    this.#fontSize = 26;\n\n    const spacing = 4;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / this.#w - (spacing * (this.#w - 1) / this.#w), (game.renderer.h - 110) / this.#h - (spacing * (this.#h - 1) / this.#h)));\n\n    this.#grid = new Grid(game, CENTER, 100, this.#w, this.#h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#buttons = new Grid(game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#digButton = this.#buttons.sprites[0];\n    this.#digButton.write(game.text, 'O', 30, ACTIVE_COLOR);\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(game.text, 'X', 30, ACTIVE_COLOR);\n\n    this.#setMode(DIG);\n  }\n\n  update() {\n    if (this.#game.input.left()) {\n      this.#setMode(DIG);\n    }\n\n    if (this.#game.input.right()) {\n      this.#setMode(FLAG);\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    switch (this.#mode) {\n    case DIG:\n      if (!this.#started) {\n        this.#start(cell);\n      }\n\n      this.#open(cell.gridX, cell.gridY);\n\n      if (cell.mine) {\n        this.#grid.disabled = true;\n\n        this.#game.scheduleTimer(2000, () => this.#onlose());\n      }\n\n      break;\n    case FLAG:\n      if (cell.flagged) {\n        cell.flagged = false;\n        cell.content.enabled = false;\n        this.#game.text.changed();\n      } else {\n        cell.flagged = true;\n        cell.write(this.#game.text, 'X', this.#fontSize, HIGHLIGHT_COLOR);\n      }\n      break;\n    }\n  }\n\n  #start(cell) {\n    const available = this.#grid.sprites.filter(availableCell => availableCell !== cell && (Math.abs(availableCell.gridX - cell.gridX) > 1 || Math.abs(availableCell.gridY - cell.gridY) > 1));\n\n    for (let i = 0; i < this.#mines; i++) {\n      const index = Math.floor(Math.random() * available.length);\n      const mineCell = available[index];\n      available.splice(index, 1);\n\n      mineCell.mine = true;\n    }\n\n    for (let y = 0; y < this.#grid.h; y++) {\n      for (let x = 0; x < this.#grid.w; x++) {\n        let cell = this.#grid.cellAt(x, y);\n        if (!cell.mine) {\n          cell.mines = 0;\n          for (let dy = -1; dy <= 1; dy++) {\n            for (let dx = -1; dx <= 1; dx++) {\n              if (this.#grid.cellAt(x + dx, y + dy)?.mine) {\n                cell.mines++;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.#started = true;\n  }\n\n  #open(x, y) {\n    this.#game.shake(200);\n    const cell = this.#grid.cellAt(x, y);\n\n    if (cell?.flagged) {\n      cell.flagged = false;\n      cell.content.enabled = false;\n    }\n\n    if (cell?.enabled && !cell?.opened) {\n      cell.opened = true;\n\n      cell.activate(false);\n\n      this.#game.particles.emit(cell.x + cell.grid.s / 2, cell.y + cell.grid.s / 2);\n\n      if (cell.mines === 0) {\n        cell.hidden = true;\n\n        this.#game.scheduleTimer(100, () => this.#open(x, y - 1));\n        this.#game.scheduleTimer(100, () => this.#open(x, y + 1));\n        this.#game.scheduleTimer(100, () => this.#open(x - 1, y));\n        this.#game.scheduleTimer(100, () => this.#open(x + 1, y));\n      } else {\n        if (cell.mine) {\n          for (const mineCell of this.#grid.sprites.filter(cell => cell.mine)) {\n            mineCell.activate(false);\n            mineCell.write(this.#game.text, 'X', this.#fontSize, INACTIVE10_COLOR);\n          }\n        } else {\n          cell.write(this.#game.text, cell.mines, this.#fontSize, INACTIVE1_COLOR + (cell.mines - 1));\n        }\n      }\n\n      this.#grid.changed();\n    }\n\n    if (this.#grid.sprites.filter(cell => !cell.opened).every(cell => cell.mine)) {\n      this.#onwin();\n    }\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode(FLAG);\n    } else if (button === this.#digButton) {\n      this.#setMode(DIG);\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#digButton.activate(this.#mode !== DIG);\n    this.#flagButton.activate(this.#mode !== FLAG);\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #grid;\n  #spriteBatch;\n  #timer;\n  #over;\n\n  static meta = [\n    'PAW PAW TOE',\n    ORANGECAT_COLOR,\n    73,\n    2,\n    'ORANGE CAT, THE USELESS BOYFRIEND',\n    \"BET YOU CAN'T BEAT ME\\nIN PAW PAW TOE!\\n\\n\\nI'M THE SMARTEST\\nORANGE CAT EVER!!!\",\n    \"WELL, THAT'S\\nNOT SAYING MUCH...\\n\\n\\nLET'S SEE!\"\n  ];\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#grid = new Grid(game, CENTER, CENTER, 3, 3, 96, 20, 20, (cell) => this.#click(cell));\n    this.#spriteBatch = new SpriteBatch(game);\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (!cell.symbol) {\n      this.#mark(cell, 'X');\n\n      this.#grid.disabled = true;\n\n      this.#timer = this.#game.scheduleTimer(1000, () => {\n        if (!this.#over) {\n          const available = this.#grid.sprites.filter(sprite => !sprite.symbol);\n\n          if (available.length > 0) {\n            this.#mark(available[Math.floor(Math.random() * available.length)], 'O');\n\n            this.#grid.disabled = false;\n            this.#grid.changed();\n          }\n        }\n      });\n    }\n  }\n\n  #mark(cell, symbol) {\n    if (!this.#over) {\n      this.#game.shake(200);\n\n      cell.symbol = symbol;\n\n      cell.activate(false);\n\n      cell.draw(this.#spriteBatch, 64, 0, symbol === 'X' ? BLACKCAT_COLOR : ORANGECAT_COLOR);\n\n      this.#checkGrid();\n    }\n  }\n\n  #checkGrid() {\n    for (let y = 0; y < 3; y++) {\n      const symbolCounts = new Map();\n\n      for (let x = 0; x < 3; x++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    for (let x = 0; x < 3; x++) {\n      const symbolCounts = new Map();\n\n      for (let y = 0; y < 3; y++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(2, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(2, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(0, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(0, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n  }\n\n  #win(symbol) {\n    this.#over = true;\n    this.#grid.disabled = true;\n    (this.#timer || {}).disabled = true;\n\n    if (symbol === 'X') {\n      this.#onwin();\n    } else if (symbol === 'O') {\n      this.#grid.disabled = true;\n      this.#game.scheduleTimer(2000, () => this.#onlose());\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #spriteBatch;\n  #grids;\n  #cellSize;\n  #buttons;\n  #activeButtons;\n  #digit;\n\n  static meta = [\n    'SUDOCAT',\n    BLACKCAT_COLOR,\n    73,\n    4,\n    'KUMBA',\n    \"I NEED ALL MY TREATS AND\\nTOYS NEATLY ORGANISED!!\\n\\n\\nTHERE SHOULD BE ONLY ONE\\nTYPE IN EACH ROW, EACH\\nCOLUMN AND IN EACH BOX!!\",\n    'KITTY MUST HAVE OCD...'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#spriteBatch = new SpriteBatch(game, true);\n\n    this.#grids = [];\n\n    const gridSpacing = 16;\n\n    const gridSize = Math.floor(Math.min((game.renderer.w - 20) / 3 - (gridSpacing * (3 - 1) / 3), (game.renderer.h - 200) / 3 - (gridSpacing * (3 - 1) / 3)));\n\n    const spacing = 5;\n\n    this.#cellSize = Math.floor(Math.min((gridSize - 0) / 3 - (spacing * (3 - 1) / 3), (gridSize - 0) / 3 - (spacing * (3 - 1) / 3)));\n\n    const startX = game.renderer.w / 2 - 3 * (gridSize + gridSpacing * (3 - 1) / 3) / 2;\n\n    for (let y = 0; y < 3; y++) {\n      for (let x = 0; x < 3; x++) {\n        const grid = new Grid(game, startX + x * (gridSize + gridSpacing), 100 + y * (gridSize + gridSpacing), 3, 3, this.#cellSize, spacing, spacing, (cell) => this.#click(cell));\n        this.#grids.push(grid);\n      }\n    }\n\n    let buttonSize = 64;\n    let buttonSpacing = 10;\n\n    if (game.renderer.h - (100 + 3 * (gridSize + gridSpacing) + 20) >= 256) {\n      buttonSize = Math.floor(Math.min((game.renderer.w - 20) / 3 - (buttonSpacing * (3 - 1) / 3), (game.renderer.h - (100 + 3 * (gridSize + buttonSpacing) + 20)) / 4 - (buttonSpacing * (4 - 1) / 4)));\n\n      this.#buttons = new Grid(game, CENTER, 100 + 3 * (gridSize + gridSpacing), 3, 4, buttonSize, buttonSpacing, buttonSpacing, (button) => this.#buttonClick(button));\n      this.#buttons.cellAt(0, 3).activate(false);\n      this.#buttons.cellAt(0, 3).hidden = true;\n\n      this.#buttons.cellAt(2, 3).activate(false);\n      this.#buttons.cellAt(2, 3).hidden = true;\n    } else {\n      this.#buttons = new Grid(game, CENTER, 100 + 3 * (gridSize + gridSpacing), 10, 1, buttonSize, buttonSpacing, 0, (button) => this.#buttonClick(button));\n    }\n\n    this.#activeButtons = this.#buttons.sprites.filter(button => !button.inactive);\n\n    for (let digit = 1; digit <= 10; digit++) {\n      const button = this.#activeButtons[digit - 1];\n      if (digit === 10) {\n        button.write(game.text, 'X', buttonSize * 2 / 3, ACTIVE_COLOR);\n      } else {\n        button.draw(this.#spriteBatch, buttonSize * 2 / 3, digit + 5);\n      }\n      button.digit = digit <= 9 ? digit : null;\n    }\n\n    this.#setGrid();\n    this.#selectDigit(1);\n  }\n\n  update() {\n    for (let digit = 1; digit <= 9; digit++) {\n      if (this.#game.input.keyPresses[`Digit${digit}`]) {\n        this.#selectDigit(digit);\n      }\n    }\n\n    if (this.#game.input.left()) {\n      if (this.#digit > 1) {\n        this.#selectDigit(this.#digit - 1);\n      }\n    }\n\n    if (this.#game.input.right()) {\n      if (this.#digit < 9) {\n        this.#selectDigit(this.#digit + 1);\n      }\n    }\n\n    if (this.#game.input.cancel()) {\n      this.#selectDigit(null);\n    }\n\n    this.#spriteBatch.update();\n\n    for (const grid of this.#grids) {\n      grid.update();\n    }\n\n    this.#buttons.update();\n  }\n\n  draw() {\n    for (const grid of this.#grids) {\n      grid.draw();\n    }\n\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #gridAt(x, y) {\n    return this.#grids[Math.floor(y / 3) * 3 + Math.floor(x / 3)];\n  }\n\n  #cellAt(x, y) {\n    return this.#gridAt(x, y).cellAt(x % 3, y % 3);\n  }\n\n  #setGrid() {\n    const start = [\n      6, 8, 0, 1, 0, 0, 0, 9, 0,\n      0, 3, 4, 5, 0, 8, 0, 2, 0,\n      2, 1, 0, 0, 6, 0, 3, 0, 0,\n      5, 0, 0, 4, 0, 7, 0, 0, 9,\n      3, 4, 2, 9, 0, 0, 0, 0, 6,\n      0, 0, 7, 0, 8, 0, 5, 0, 0,\n      9, 2, 0, 8, 0, 0, 0, 5, 3,\n      0, 0, 3, 2, 0, 0, 9, 1, 8,\n      0, 0, 0, 3, 0, 0, 0, 6, 7,\n    ];\n\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const digit = start[y * 9 + x];\n        if (digit !== 0) {\n          const cell = this.#cellAt(x, y);\n          cell.activate(false);\n          cell.digit = digit;\n          cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, digit + 5);\n        }\n      }\n    }\n  }\n\n  #click(cell) {\n    cell.digit = this.#digit;\n    (cell.content || {}).enabled = false;\n\n    if (this.#digit) {\n      cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, this.#digit + 5);\n    }\n\n    if (this.#checkCells()) {\n      this.#game.shake(200);\n      this.#onwin();\n    }\n\n    this.#game.text.changed();\n    this.#spriteBatch.changed();\n  }\n\n  #checkCells() {\n    let valid = true;\n\n    this.#resetCells();\n\n    for (let i = 0; i < 9; i++) {\n      valid &= this.#checkRow(i);\n      valid &= this.#checkColumn(i);\n      valid &= this.#checkGrid(i);\n    }\n\n    return valid;\n  }\n\n  #resetCells() {\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const cell = this.#cellAt(x, y);\n        if (!cell.inactive) {\n          cell.setBaseColor(PRIMARY_COLOR);\n        }\n      }\n    }\n\n    for (let i = 0; i < 9; i++) {\n      this.#grids[i].changed();\n    }\n  }\n\n  #checkRow(x) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let y = 0; y < 9; y++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let y = 0; y < 9; y++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor(ACTIVE_COLOR);\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkColumn(y) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let x = 0; x < 9; x++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let x = 0; x < 9; x++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor(ACTIVE_COLOR);\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkGrid(index) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    const grid = this.#grids[index];\n\n    for (let i = 0; i < 9; i++) {\n      const cell = grid.sprites[i];\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let i = 0; i < 9; i++) {\n          const cell = grid.sprites[i];\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor(ACTIVE_COLOR);\n            grid.changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#selectDigit(button.digit);\n    }\n  }\n\n  #selectDigit(digit) {\n    this.#digit = digit;\n\n    for (const button of this.#activeButtons) {\n      button.activate(true);\n    }\n\n    this.#activeButtons[digit != null ? digit - 1 : 9].activate(false);\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #grid;\n  #spriteBatch;\n  #opened;\n  #showingA;\n  #showingB;\n  #timer;\n\n  static meta = [\n    'MEOWMORY',\n    SILVERCAT_COLOR,\n    8,\n    3,\n    'MOLLY',\n    \"THEY SAY I HAVE THE\\nMEMORY OF A GOLDFISH...\\n\\n\\nCAN YOU SHOW ME HOW\\nTO REMEMBER THINGS??\",\n    'SOMEONE SAID FISHIE?!\\n\\n\\nYUM!!!'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    const w = game.renderer.horizontal ? 6 : 5;\n    const h = game.renderer.horizontal ? 5 : 6;\n\n    const spacing = 16;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / w - (spacing * (w - 1) / w), (game.renderer.h - 110) / h - (spacing * (h - 1) / h)));\n\n    this.#grid = new Grid(game, CENTER, 100, w, h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#spriteBatch = new SpriteBatch(game, true);\n\n    const available = this.#grid.sprites.slice();\n\n    for (let i = 0; i < (w * h) / 2; i++) {\n      const indexA = Math.floor(Math.random() * available.length);\n      const cellA = available[indexA];\n      available.splice(indexA, 1);\n\n      const indexB = Math.floor(Math.random() * available.length);\n      const cellB = available[indexB];\n      available.splice(indexB, 1);\n\n      cellA.secret = i;\n      cellB.secret = i;\n    }\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (!cell.open) {\n      if (this.#showingA && this.#showingB) {\n        this.#cancelShowing();\n      }\n\n      cell.open = true;\n      cell.draw(this.#spriteBatch, this.#grid.s * 2 / 3, cell.secret, cell.secret < 5 ? TABBYCAT_COLOR : null);\n      cell.setBaseColor(ACTIVE_COLOR);\n\n      if (this.#opened) {\n        if (cell.secret === this.#opened.secret) {\n          this.#game.shake(200);\n\n          cell.found = true;\n          cell.activate(false);\n\n          this.#opened.found = true;\n          this.#opened.activate(false);\n\n          if (this.#grid.sprites.every(cell => cell.found)) {\n            this.#onwin();\n          }\n        } else {\n          this.#showingA = this.#opened;\n          this.#showingB = cell;\n\n          this.#timer = this.#game.scheduleTimer(1000, () => this.#cancelShowing());\n        }\n\n        this.#opened = false;\n      } else {\n        this.#opened = cell;\n      }\n    }\n  }\n\n  #cancelShowing() {\n    (this.#timer || {}).disabled = true;\n\n    this.#showingA.open = false;\n    this.#showingA.content.enabled = false;\n    this.#showingA.setBaseColor(PRIMARY_COLOR);\n\n    this.#showingB.open = false;\n    this.#showingB.content.enabled = false;\n    this.#showingB.setBaseColor(PRIMARY_COLOR);\n\n    this.#grid.changed();\n    this.#game.text.changed();\n    this.#spriteBatch.changed();\n\n    this.#showingA = null;\n    this.#showingB = null;\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #grids;\n  #selected;\n\n  static meta = [\n    'MEOWJONG',\n    SILVERCAT_COLOR,\n    73,\n    4,\n    'PABLO',\n    \"HOLA!! SOY PABLO!\\n\\n\\nLET'S PLAY MEOWJONG!\\nJUST MATCH THE SAME TILES\\nBUT ONLY WHEN THEY'RE\\nFREE TO MOVE LEFT OR RIGHT.\",\n    'OH, SI SENOR?!'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    const w = game.renderer.horizontal ? 12 : 8;\n    const h = game.renderer.horizontal ? 8 : 12;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / w, (game.renderer.h - 110) / h));\n    const offset = Math.ceil(s / 16);\n\n    this.#grids = [];\n\n    const baseGrid = new Grid(game, CENTER, 100, w, h, s, 0, 0, (cell) => this.#click(cell), INACTIVE3_COLOR);\n    baseGrid.spriteBatch = new SpriteBatch(game, true);\n\n    for (let [x, y] of [[0, 1], [1, 1], [0, 2], [0, 5], [0, 6], [1, 6], [10, 1], [11, 1], [11, 2], [11, 5], [10, 6], [11, 6]]) {\n      if (!game.renderer.horizontal) {\n        let i = x;\n        x = y;\n        y = i;\n      }\n\n      baseGrid.cellAt(x, y).activate(false);\n      baseGrid.cellAt(x, y).hidden = true;\n    }\n\n    this.#grids.push(baseGrid);\n\n    const gridA = new Grid(game, baseGrid.x + ((game.renderer.horizontal ? 3 : 1) * s - offset), baseGrid.y + ((game.renderer.horizontal ? 1 : 3) * s - offset), 6, 6, s, 0, 0, (cell) => this.#click(cell), INACTIVE4_COLOR);\n    gridA.spriteBatch = new SpriteBatch(game, true);\n\n    const gridB = new Grid(game, gridA.x + (s - offset), gridA.y + (s - offset), 4, 4, s, 0, 0, (cell) => this.#click(cell), INACTIVE5_COLOR);\n    gridB.spriteBatch = new SpriteBatch(game, true);\n\n    const gridC = new Grid(game, gridB.x + (s - offset), gridB.y + (s - offset), 2, 2, s, 0, 0, (cell) => this.#click(cell), INACTIVE6_COLOR);\n    gridC.spriteBatch = new SpriteBatch(game, true);\n\n    this.#grids.push(gridA);\n    this.#grids.push(gridB);\n    this.#grids.push(gridC);\n\n    const available = [];\n\n    for (let type = 0; type < 15; type++) {\n      for (let count = 0; count < 4; count++) {\n        if (type < 5) {\n          for (let color = BLACKCAT_COLOR; color <= SILVERCAT_COLOR; color++) {\n            available.push([type, color]);\n          }\n        } else {\n          available.push([type, null]);\n        }\n      }\n    }\n\n    for (let grid of this.#grids) {\n      for (let cell of grid.sprites) {\n        if (!cell.inactive) {\n          const index = Math.floor(Math.random() * available.length);\n          const [type, color] = available[index];\n          available.splice(index, 1);\n\n          cell.symbol = `${type}_${color}`;\n          cell.draw(grid.spriteBatch, s * 2 / 3, type, color);\n        }\n      }\n    }\n  }\n\n  update() {\n    let pressHandled = false;\n    for (let i = this.#grids.length - 1; i >= 0; i--) {\n      pressHandled = this.#grids[i].update(pressHandled);\n      this.#grids[i].spriteBatch.update();\n    }\n  }\n\n  draw() {\n    for (const grid of this.#grids) {\n      grid.draw();\n      grid.spriteBatch.draw();\n    }\n  }\n\n  #click(cell) {\n    const leftCell = cell.grid.cellAt(cell.gridX - 1, cell.gridY);\n    const rightCell = cell.grid.cellAt(cell.gridX + 1, cell.gridY);\n    const freeCell =!leftCell || leftCell.inactive || !rightCell || rightCell.inactive\n\n    if (!this.#selected && freeCell) {\n      this.#selected = cell;\n      cell.setBaseColor(ACTIVE_COLOR);\n    } else if (cell === this.#selected) {\n      cell.setBaseColor(cell.grid.color);\n      this.#selected = null;\n    } else if (this.#selected && freeCell && this.#selected.symbol === cell.symbol) {\n      this.#game.particles.emit(this.#selected.x + this.#selected.grid.s / 2, this.#selected.y + this.#selected.grid.s / 2);\n      this.#game.particles.emit(cell.x + cell.grid.s / 2, cell.y + cell.grid.s / 2);\n      this.#game.shake(200);\n\n      this.#selected.activate(false);\n      this.#selected.hidden = true;\n      this.#selected.content.enabled = false;\n\n      cell.activate(false);\n      cell.hidden = true;\n      cell.content.enabled = false;\n\n      this.#selected = null;\n      this.#checkGrids();\n    }\n\n    for (const grid of this.#grids) {\n      grid.changed();\n      grid.spriteBatch.changed();\n    }\n  }\n\n  #checkGrids() {\n    for (let grid of this.#grids) {\n      for (let cell of grid.sprites) {\n        if (!cell.inactive) {\n          return;\n        }\n      }\n    }\n\n    this.#onwin();\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #rows;\n  #columns;\n  #maxRows;\n  #maxColumns;\n  #w;\n  #h;\n  #grid;\n  #buttons;\n  #markButton;\n  #flagButton;\n  #mode;\n\n  static meta = [\n    'MEOWSTERPIECE',\n    WHITECAT_COLOR,\n    8,\n    3,\n    'CHA CHA',\n    'TODAY I DECIDED TO BE\\nAN ARTIST!!\\nHELP ME WITH THIS\\nPAINT BY NUMBER!\\n\\n\\nTHE CLUES WILL TELL YOU\\nHOW MANY BLOCKS SHOULD\\nBE PAINTED IN EACH ROW\\nAND IN EACH COLUMN!',\n    'SURE SURE, ARTIST TODAY,\\nSOMETHING ELSE TOMORROW!\\n\\n\\nTYPICAL KITTY...'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#rows = [[0], [1, 1], [2, 2], [5], [2, 1, 2, 1], [5, 2], [3, 1], [6, 2], [1, 5, 1], [8], [2, 4]];\n    this.#columns = [[1, 2], [4, 1, 1], [3, 6], [7], [3, 6], [4, 4], [1, 3], [2], [3, 1], [2, 3]];\n\n    this.#maxRows = Math.max(...this.#rows.map(row => row.length));\n    this.#maxColumns = Math.max(...this.#columns.map(column => column.length));\n\n    this.#w = this.#columns.length + this.#maxRows;\n    this.#h = this.#rows.length + this.#maxColumns;\n\n    const spacing = 2;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / this.#w - (spacing * (this.#w - 1) / this.#w), (game.renderer.h - 110) / this.#h - (spacing * (this.#h - 1) / this.#h)));\n\n    this.#grid = new Grid(game, CENTER, 100, this.#w, this.#h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    for (let x = 0; x < this.#w; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (x < this.#maxRows || y < this.#maxColumns - this.#columns[x - this.#maxRows].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(game.text, this.#columns[x - this.#maxRows][y - (this.#maxColumns - this.#columns[x - this.#maxRows].length)], s * 2 / 3, HIGHLIGHT_COLOR);\n          cell.activate(false);\n        }\n      }\n    }\n\n    for (let y = 0; y < this.#w; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (y < this.#maxColumns || x < this.#maxRows - this.#rows[y - this.#maxColumns].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(game.text, this.#rows[y - this.#maxColumns][x - (this.#maxRows - this.#rows[y - this.#maxColumns].length)], this.#grid.s * 2 / 3, HIGHLIGHT_COLOR);\n          cell.activate(false);\n        }\n      }\n    }\n\n    this.#buttons = new Grid(game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#markButton = this.#buttons.sprites[0];\n    this.#markButton.write(game.text, 'O', 30, ACTIVE_COLOR);\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(game.text, 'X', 30, ACTIVE_COLOR);\n\n    this.#setMode(MARK);\n\n    this.#grid.changed();\n  }\n\n  update() {\n    if (this.#game.input.left()) {\n      this.#setMode(MARK);\n    }\n\n    if (this.#game.input.right()) {\n      this.#setMode(FLAG);\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    (cell.content || {}).enabled = false;\n\n    switch (this.#mode) {\n    case MARK:\n      if (cell.state !== MARKED) {\n        cell.state = MARKED;\n        cell.setBaseColor(ACTIVE_COLOR);\n      } else {\n        cell.state = null;\n        cell.setBaseColor(PRIMARY_COLOR);\n      }\n      break;\n\n    case FLAG:\n      cell.setBaseColor(PRIMARY_COLOR);\n      if (cell.state !== FLAGGED) {\n        cell.state = FLAGGED;\n        cell.write(this.#game.text, 'X', this.#grid.s * 2 / 3, HIGHLIGHT_COLOR);\n      } else {\n        cell.state = null;\n      }\n      break;\n    }\n\n    this.#game.text.changed();\n\n    this.#checkGrid();\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode(FLAG);\n    } else if (button === this.#markButton) {\n      this.#setMode(MARK);\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#markButton.activate(this.#mode !== MARK);\n    this.#flagButton.activate(this.#mode !== FLAG);\n\n    this.#buttons.changed();\n  }\n\n  #checkGrid() {\n    let gridCorrect = 0;\n\n    for (let x = this.#maxRows; x < this.#w; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        this.#grid.cellAt(x, y).setBaseColor(INACTIVE_COLOR);\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let y = this.#maxColumns; y < this.#h; y++) {\n        if (this.#grid.cellAt(x, y).state === MARKED) {\n          current++;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== MARKED || y === this.#h - 1) {\n          if ((current > 0 || y === this.#h - 1) && index < this.#columns[x - this.#maxRows].length) {\n            if (current > this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor(HIGHLIGHT_COLOR);\n            } else if (current === this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor(INACTIVE1_COLOR);\n              correct++;\n            }\n\n            index++;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#columns[x - this.#maxRows].length) {\n        gridCorrect++;\n      }\n    }\n\n    for (let y = this.#maxColumns; y < this.#h; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        this.#grid.cellAt(x, y).setBaseColor(INACTIVE_COLOR);\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let x = this.#maxRows; x < this.#w; x++) {\n        if (this.#grid.cellAt(x, y).state === MARKED) {\n          current++;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== MARKED || x === this.#w - 1) {\n          if ((current > 0 || x === this.#w - 1) && index < this.#rows[y - this.#maxColumns].length) {\n            if (current > this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor(HIGHLIGHT_COLOR);\n            } else if (current === this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor(INACTIVE1_COLOR);\n              correct++;\n            }\n\n            index++;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#rows[y - this.#maxColumns].length) {\n        gridCorrect++;\n      }\n    }\n\n    if (gridCorrect === (this.#w - this.#maxRows) + (this.#h - this.#maxColumns)) {\n      this.#game.shake(200);\n      this.#onwin();\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nimport Minigame from './Minigame';\nimport Meowsweeper from '../minigames/Meowsweeper';\nimport PawPawToe from '../minigames/PawPawToe';\nimport Sudocat from '../minigames/Sudocat';\nimport Meowmory from '../minigames/Meowmory';\nimport Meowjong from '../minigames/Meowjong';\nimport Meowsterpiece from '../minigames/Meowsterpiece';\n\nimport Matrix3 from '../Matrix3';\n\nexport default class {\n  #game;\n  #firstStart;\n  #grid;\n  #buttons;\n  #spriteBatch;\n  #minigameState;\n  #camY;\n  #startBlackCat;\n  #blackCat;\n  #blackCatArrived;\n  #titleShown;\n  #introOver;\n  #introText;\n\n  init(game) {\n    this.#game = game;\n    this.#firstStart = game.firstStart;\n    game.firstStart = false;\n\n    const won = game.minigamesWon.size === 6;\n\n    this.#grid = new Grid(game, CENTER, won ? 200 : 100, 6, 15, 128, 0, 0, null, '', 2);\n    this.#grid.disabled = true;\n\n    this.#buttons = new Grid(game, CENTER, won ? 232 : 132, 3, 7, 128, 64, 64, (button) => this.#buttonClick(button), '', 1);\n\n    if (this.#firstStart) {\n      this.#buttons.disabled = true;\n      this.#camY = -game.renderer.h;\n      this.#introText = game.text.write('THIS IS A TRUE STORY.\\n\\n\\nTHE CATS DEPICTED HERE\\nALL LIVE IN DUBLIN.', CENTER, CENTER, 32, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n      game.scheduleTimer(9000, () => {\n        this.#startBlackCat = true;\n        this.#introText.enabled = false;\n        game.text.changed();\n      });\n    } else if (!won) {\n      game.text.write('HELP THE OTHER CATS\\nIN THE BUILDING!!', CENTER, 10, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n    } else {\n      game.text.write('CONGRATULATIONS!!', CENTER, 10, 48, HIGHLIGHT_COLOR, [SINE_ANIMATION]);\n      game.text.write(\"YOU'VE HELPED ALL THE CATS\\nAND YOU'VE BEEN ACCEPTED BY\", CENTER, 75, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n      game.text.write('QUEEN KARA', CENTER, 150, 32, TABBYCAT_COLOR, [TYPING_ANIMATION, SINE_ANIMATION], 7000);\n      game.text.write('THANKS FOR PLAYING!!', CENTER, 200, 32, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 10000);\n\n      game.scheduleTimer(400, () => game.particles.emit(Math.random() * game.renderer.w, Math.random() * game.renderer.h, true, 256, 1000), true);\n    }\n\n    this.#spriteBatch = new SpriteBatch(game);\n\n    const minigameClasses = [PawPawToe, Meowmory, Meowjong, Sudocat, Meowsterpiece, Meowsweeper];\n\n    for (let i = 0; i < 21; i++) {\n      if (minigameClasses[i] && (i == 0 || !this.#firstStart)) {\n        let [_, color, sx, type, ..._rest] = minigameClasses[i].meta;\n        this.#buttons.sprites[i].minigameClass = minigameClasses[i];\n        let sy = 73;\n        if (game.minigamesWon.has(minigameClasses[i])) {\n          this.#buttons.sprites[i].activate(false);\n          sx = 39;\n          sy = 39;\n          type = 1;\n        }\n        this.#spriteBatch.add(this.#buttons.sprites[i].x + sx, this.#buttons.sprites[i].y + sy, 50, type, color);\n      } else {\n        this.#buttons.sprites[i].activate(false);\n      }\n    }\n\n    this.#blackCat = this.#spriteBatch.add(CENTER, game.renderer.h, 900, 1, VOID_COLOR);\n\n    for (let i = 0; i < this.#buttons.sprites.length; i++) {\n      const button = this.#buttons.sprites[i];\n      if (game.minigamesWon.has(button.minigameClass)) {\n        button.activate(false);\n      }\n    }\n  }\n\n  update() {\n    if (this.#firstStart) {\n      if (this.#camY < 0) {\n        this.#camY += 3;\n        if (this.#camY >= 0) {\n          this.#camY = 0;\n          this.#game.shake(200);\n        }\n        this.#game.renderer.projection = Matrix3.ortho(0, this.#game.renderer.w, this.#game.renderer.h + this.#camY, this.#camY);\n      } else if (this.#startBlackCat && !this.#blackCatArrived) {\n        this.#blackCat.y -= 3;\n        if (this.#blackCat.y <= this.#game.renderer.h / 2 - this.#blackCat.s / 2) {\n          this.#blackCatArrived = true;\n          this.#blackCat.y = this.#game.renderer.h / 2 - this.#blackCat.s / 2;\n          const title = this.#game.text.write('  A VOIDING\\nYOUR PROBLEMS', CENTER, CENTER, 48, null, [SINE_ANIMATION]);\n          this.#game.text.write('  A GAME BY\\nATTILA HORVATH', CENTER, title.y + 180, 36, WHITECAT_COLOR, [SHAKE_ANIMATION]);\n          this.#game.text.write('TAP TO BEGIN', CENTER, title.y + 280, 36, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 1200);\n          this.#game.shake(500);\n        }\n        this.#blackCat.x = this.#game.renderer.w / 2 - this.#blackCat.s / 2;\n        this.#spriteBatch.changed();\n      } else if (!this.#titleShown) {\n        if (this.#game.input.click()) {\n          this.#game.input.clickRead = true;\n          this.#game.text.clear();\n          const firstLine = this.#game.text.write('SO, I HEARD THIS\\nIS THE DOMAIN OF', CENTER,  CENTER, 28, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n          this.#game.text.write('QUEEN KARA', CENTER, firstLine.y + 60, 32, TABBYCAT_COLOR, [TYPING_ANIMATION, SINE_ANIMATION], 4000);\n          this.#game.text.write(\"I HOPE SHE'LL ACCEPT ME\\nIF I HELP THE OTHER CATS...\", CENTER, firstLine.y + 120, 28, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 6000);\n          this.#titleShown = true;\n        }\n      } else if (!this.#introOver) {\n        if (this.#game.input.click()) {\n          this.#game.input.clickRead = true;\n          this.#blackCat.hidden = true;\n          this.#spriteBatch.changed();\n          this.#game.text.clear();\n          this.#introOver = true;\n          this.#game.text.write(\"LET'S START WITH THIS\\nGENIUS ORANGE CAT HERE!\", CENTER, 10, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n        }\n      } else {\n        this.#buttons.disabled = false;\n      }\n    }\n\n    this.#grid.update();\n    this.#spriteBatch.update();\n\n    if (this.#minigameState) {\n      return this.#minigameState;\n    } else {\n      this.#buttons.update();\n    }\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#minigameState = new Minigame(button.minigameClass);\n    }\n  }\n}\n","import Game from \"./Game\";\n\nconst game = new Game();\n\nfunction step(timestamp) {\n  requestAnimationFrame(step);\n  game.step(timestamp);\n}\n\nrequestAnimationFrame(step);\n","import Renderer from './Renderer';\nimport Input from './Input';\n\nimport Text from './Text';\nimport Particles from './Particles';\nimport SpriteBatch from './SpriteBatch';\nimport Select from './states/Select';\nimport Minigame from './states/Minigame';\nimport Matrix3 from './Matrix3';\nimport PawPawToe from './minigames/PawPawToe';\nimport Meowmory from './minigames/Meowmory';\nimport Meowjong from './minigames/Meowjong';\nimport Meowsweeper from './minigames/Meowsweeper';\nimport Sudocat from './minigames/Sudocat';\n\nexport default class {\n  #started;\n  #timers;\n  #backgroundBatch;\n  #spriteBatch;\n  #cursor;\n  #state;\n  #nextState;\n  #shakeScreen;\n\n  constructor() {\n    this.renderer = new Renderer(() => {\n      if (!this.#started) {\n        for (let i = 0; i < 128; i++) {\n          const type = Math.floor(Math.random() * 15);\n          let color = null;\n          if (type < 5) {\n            color = BLACKCAT_COLOR + Math.floor(Math.random() * 5);\n          }\n          const sprite = this.#backgroundBatch.add(Math.random() * this.renderer.w, Math.random() * this.renderer.h, 16 + Math.random() * 100, type, color);\n          sprite.a = 0.33;\n          sprite.dx = -0.5 + Math.random();\n          sprite.dy = -0.5 + Math.random();\n          sprite.ds = -0.1 + Math.random() * 0.2;\n        }\n\n        this.#state = new Select();\n        // this.#state = new Minigame(Sudocat);\n        this.#state.init(this);\n        this.#started = true;\n      }\n    });\n\n    this.input = new Input(this);\n    this.#timers = [];\n\n    this.#backgroundBatch = new SpriteBatch(this, true);\n\n    this.text = new Text(this);\n    this.particles = new Particles(this);\n    this.#spriteBatch = new SpriteBatch(this);\n    this.#cursor = this.#spriteBatch.add(0, 0, 26, 0, BLACKCAT_COLOR);\n    this.#cursor.hidden = true;\n\n    this.minigamesWon = new Set();\n\n    this.firstStart = true;\n  }\n\n  step(timestamp) {\n    this.timestamp = timestamp;\n    this.#update(timestamp);\n    this.#draw();\n\n    if (this.#nextState) {\n      this.text.clear();\n      this.particles.clear();\n\n      this.#state = this.#nextState;\n      this.#state.init(this);\n      this.#nextState = null;\n    }\n  }\n\n  scheduleTimer(delay, onexpire, repeat) {\n    const timer = { start: this.timestamp ?? 0, delay: delay, onexpire: onexpire, repeat: repeat };\n    this.#timers.push(timer);\n    return timer;\n  }\n\n  shake(duration) {\n    if (navigator.vibrate) {\n      navigator.vibrate(duration);\n    }\n\n    this.#shakeScreen = true;\n    this.scheduleTimer(duration, () => this.#shakeScreen = false);\n  }\n\n  #update(timestamp) {\n    if (this.#shakeScreen) {\n      this.renderer.view[6] = Math.random() * 7;\n      this.renderer.view[7] = Math.random() * 7;\n    } else {\n      this.renderer.view[6] = 0;\n      this.renderer.view[7] = 0;\n    }\n\n    this.input.update();\n\n    if (this.input.mouse && this.#cursor.hidden) {\n      this.#cursor.hidden = false;\n      this.#spriteBatch.changed();\n    }\n\n    if (this.input.moved) {\n      this.#cursor.x = this.input.x - 6;\n      this.#cursor.y = this.input.y - 6;\n\n      this.#spriteBatch.changed();\n    }\n\n    for (const sprite of this.#backgroundBatch.sprites) {\n      sprite.x += sprite.dx;\n      sprite.y += sprite.dy;\n      sprite.s += sprite.ds;\n\n      if (sprite.x < 0) {\n        sprite.dx = -sprite.dx;\n        sprite.x = 0;\n      }\n\n      if (sprite.y < 0) {\n        sprite.dy = -sprite.dy;\n        sprite.y = 0;\n      }\n\n      if (sprite.x > this.renderer.w) {\n        sprite.dx = -sprite.dx;\n        sprite.x = this.renderer.w;\n      }\n\n      if (sprite.y > this.renderer.h) {\n        sprite.dy = -sprite.dy;\n        sprite.y = this.renderer.h;\n      }\n\n      if (sprite.s < 16) {\n        sprite.ds = -sprite.ds;\n        sprite.s = 16;\n      }\n\n      if (sprite.s > 116) {\n        sprite.ds = -sprite.ds;\n        sprite.s = 116;\n      }\n    }\n\n    this.#backgroundBatch.changed();\n    this.#backgroundBatch.update();\n\n    this.#updateTimers(timestamp);\n\n    if (this.#state) {\n      this.#nextState = this.#state.update();\n    }\n\n    this.text.update(timestamp);\n    this.particles.update(timestamp);\n    this.#spriteBatch.update();\n  }\n\n  #updateTimers(timestamp) {\n    for (const timer of this.#timers) {\n      if (timestamp >= timer.start + timer.delay && !timer.disabled) {\n        if (timer.repeat) {\n          timer.start = timestamp;\n        } else {\n          timer.expired = true;\n        }\n\n        if (timer.onexpire) {\n          timer.onexpire();\n        }\n      }\n    }\n\n    if (this.#timers.some(timer => timer.expired || timer.disabled)) {\n      this.#timers = this.#timers.filter(timer => !timer.expired && !timer.disabled);\n    }\n  }\n\n  #draw() {\n    this.renderer.clear();\n\n    const currProjection = this.renderer.projection;\n\n    this.renderer.projection = Matrix3.ortho(0, this.renderer.w, this.renderer.h, 0);\n    this.#backgroundBatch.draw();\n    this.renderer.projection = currProjection;\n\n    if (this.#state) {\n      this.#state.draw();\n    }\n\n    this.renderer.projection = Matrix3.ortho(0, this.renderer.w, this.renderer.h, 0);\n    this.text.draw();\n    this.#spriteBatch.draw();\n    this.renderer.projection = currProjection;\n\n    this.particles.draw();\n  }\n}\n"],"names":["Matrix3","Float32Array","identity","ortho","l","r","bottom","top","Shader","program","viewUniformLocation","projectionUniformLocation","texUniformLocation","imageSizeUniformLocation","constructor","gl","vertexShaderSource","fragmentShaderSource","vertexShader","this","compileShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","bind","bindAttribLocation","getUniformLocation","linkProgram","use","v","p","useProgram","setup","uniformMatrix3fv","uniform1i","uniform1f","type","source","shader","createShader","shaderSource","Renderer","onresize","shaders","textures","images","currentShader","currentVao","currentTexture","document","body","style","margin","padding","canvas","createElement","display","width","height","cursor","touchAction","ResizeObserver","w","clientWidth","h","clientHeight","o","viewport","observe","box","appendChild","getContext","clearColor","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","quadBuffer","createQuadBuffer","Map","name","cachedShader","get","set","createVao","vao","createVertexArray","bindVertexArray","createBuffer","data","dynamic","buffer","updateBuffer","useBuffer","bufferData","ARRAY_BUFFER","DYNAMIC_DRAW","STATIC_DRAW","bindBuffer","a","location","size","stride","offset","divisor","vertexAttribPointer","FLOAT","enableVertexAttribArray","vertexAttribDivisor","fetchTexture","filename","smooth","path","cachedTexture","texture","createTexture","prepareTexture","imageIndex","length","image","Image","src","onload","clear","COLOR_BUFFER_BIT","d","vertexCount","instanceCount","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","drawArraysInstanced","TRIANGLES","drawArrays","texture0","texture2d","texImage2D","texParameteri","rgba","RGBA","unsignedByte","UNSIGNED_BYTE","filter","LINEAR","NEAREST","Uint8Array","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","Input","newKeyPresses","newKeyReleases","newPress","newRelease","lastX","lastY","game","renderer","addEventListener","event","mouse","pointerType","x","offsetX","y","offsetY","code","u","moved","press","release","keyPresses","newKeyPress","newKeyPressValue","Object","entries","keyReleases","newKeyRelease","newKeyReleaseValue","clickRead","click","c","Sprite","s","color","e","cc","attributes","g","b","cb","baseColor","index","activate","active","inactive","text","content","animations","delay","toString","spriteBatch","add","SpriteBatch","instanceBuffer","spritesChanged","textureFilename","sprites","sprite","push","map","flat","TextSegment","time","begin","timestamp","updated","animation","i","baseY","Math","sin","baseX","random","Text","segments","super","floor","max","split","segment","currX","currY","charCodeAt","Particles","colorful","count","t","particle","angle","PI","dx","cos","dy","Grid","spacingX","spacingY","onclick","pressed","gridY","gridX","cell","fullW","fullH","grid","pressHandled","input","newActive","cellAtPosition","cellAt","indexAtPosition","relX","relY","indexX","trunc","indexY","Minigame","minigameClass","minigame","buttons","cat","leftPaw","rightPaw","catNameText","catTextText","exitButton","exit","catMet","started","won","lost","lostText","lostTextInfo","timer","init","button","buttonClick","_title","_sx","_type","cn","ct","_response","meta","title","_color","_catName","_catText","cr","Select","win","lose","minigamesWon","texts","tt","particles","Meowsweeper","onwin","onlose","mines","fontSize","digButton","flagButton","mode","static","min","setMode","start","open","mine","flagged","available","availableCell","abs","mineCell","splice","shake","opened","every","PawPawToe","over","m","mark","checkGrid","symbolCounts","Sudocat","grids","cellSize","activeButtons","digit","gridSpacing","gridSize","spacing","startX","buttonSize","buttonSpacing","setGrid","selectDigit","gridAt","checkCells","valid","resetCells","checkRow","checkColumn","digitCounts","digitCount","Meowmory","showingA","showingB","slice","indexA","cellA","indexB","cellB","secret","cancelShowing","found","Meowjong","selected","ceil","baseGrid","gridA","gridB","gridC","leftCell","rightCell","freeCell","checkGrids","Meowsterpiece","rows","columns","maxRows","maxColumns","markButton","row","column","state","gridCorrect","current","correct","firstStart","minigameState","camY","startBlackCat","blackCat","blackCatArrived","titleShown","introOver","introText","minigameClasses","_","sx","_rest","sy","has","firstLine","timers","backgroundBatch","nextState","shakeScreen","ds","Set","step","onexpire","repeat","duration","navigator","vibrate","updateTimers","expired","some","currProjection","requestAnimationFrame"],"mappings":"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"}