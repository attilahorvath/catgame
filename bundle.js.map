{"version":3,"file":"bundle.js","sources":["src/Matrix3.js","src/Shader.js","src/Renderer.js","src/Input.js","src/Sprite.js","src/SpriteBatch.js","shaders/sprite.vert","shaders/sprite.frag","src/TextSegment.js","src/Text.js","src/Grid.js","src/states/Minigame.js","src/minigames/Meowsweeper.js","src/minigames/PawPawToe.js","src/minigames/Sudocat.js","src/minigames/Meowmory.js","src/minigames/Meowsterpiece.js","src/states/Select.js","src/index.js","src/Game.js"],"sourcesContent":["export default class Matrix3 extends Float32Array {\n  static identity() {\n    return new Matrix3([\n      1.0, 0.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 0.0, 1.0,\n    ]);\n  }\n\n  static ortho(left, right, bottom, top) {\n    return new Matrix3([\n      2.0 / (right - left), 0.0, 0.0,\n      0.0, 2.0 / (top - bottom), 0.0,\n      -(right + left) / (right - left), -(top + bottom) / (top - bottom), 1.0,\n    ]);\n  }\n}\n","export default class {\n  #program;\n  #viewUniformLocation;\n  #projectionUniformLocation;\n  #texUniformLocation;\n  #imageSizeUniformLocation;\n\n  constructor(gl, vertexShaderSource, fragmentShaderSource) {\n    const vertexShader = this.#compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource)\n    const fragmentShader = this.#compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n    this.#program = gl.createProgram();\n\n    gl.attachShader(this.#program, vertexShader);\n    gl.attachShader(this.#program, fragmentShader);\n\n    gl.bindAttribLocation(this.#program, POSITION_ATTRIBUTE_LOCATION, 'vertexPosition');\n    gl.bindAttribLocation(this.#program, COLOR_ATTRIBUTE_LOCATION, 'vertexColor');\n    gl.bindAttribLocation(this.#program, TEX_COORD_ATTRIBUTE_LOCATION, 'vertexTexCoord');\n\n    gl.bindAttribLocation(this.#program, SPRITE_POSITION_ATTRIBUTE_LOCATION, 'spritePosition');\n    gl.bindAttribLocation(this.#program, SPRITE_SIZE_ATTRIBUTE_LOCATION, 'spriteSize');\n    gl.bindAttribLocation(this.#program, SPRITE_TYPE_ATTRIBUTE_LOCATION, 'spriteType');\n    gl.bindAttribLocation(this.#program, SPRITE_COLOR_ATTRIBUTE_LOCATION, 'spriteColor');\n    gl.bindAttribLocation(this.#program, SPRITE_ANGLE_ATTRIBUTE_LOCATION, 'spriteAngle');\n\n    gl.linkProgram(this.#program);\n\n    this.#viewUniformLocation = gl.getUniformLocation(this.#program, 'view');\n    this.#projectionUniformLocation = gl.getUniformLocation(this.#program, 'projection');\n    this.#texUniformLocation = gl.getUniformLocation(this.#program, 'tex');\n    this.#imageSizeUniformLocation = gl.getUniformLocation(this.#program, 'imageSize');\n\n    console.log(gl.getProgramInfoLog(this.#program));\n  }\n\n  use(gl, view, projection) {\n    gl.useProgram(this.#program);\n\n    this.setUniforms(gl, view, projection);\n  }\n\n  setUniforms(gl, view, projection) {\n    if (this.#viewUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#viewUniformLocation, false, view);\n    }\n\n    if (this.#projectionUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#projectionUniformLocation, false, projection);\n    }\n\n    if (this.#texUniformLocation != null) {\n      gl.uniform1i(this.#texUniformLocation, 0);\n    }\n\n    if (this.#imageSizeUniformLocation != null) {\n      gl.uniform1f(this.#imageSizeUniformLocation, IMAGE_SIZE);\n    }\n  }\n\n  #compileShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    console.log(gl.getShaderInfoLog(shader));\n\n    return shader;\n  }\n}\n","import Matrix3 from './Matrix3';\n\nimport Shader from './Shader';\n\nexport default class {\n  #onresize;\n  #gl;\n  #shaders;\n  #textures;\n  #images;\n  // projection;\n  #currentShader;\n  #currentVao;\n  #currentTexture;\n\n  constructor(onresize) {\n    this.#onresize = onresize;\n\n    document.body.style.margin = '0';\n    document.body.style.padding = '0';\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.style.display = 'block';\n    this.canvas.style.width = '100dvw';\n    this.canvas.style.height = '100dvh';\n    this.canvas.style.cursor = 'none';\n    this.canvas.style.touchAction = 'none';\n\n    new ResizeObserver(() => {\n      this.w = this.canvas.clientWidth;\n      this.h = this.canvas.clientHeight;\n\n      this.canvas.width = this.w;\n      this.canvas.height = this.h;\n\n      this.horizontal = this.w > this.h;\n\n      this.#gl.viewport(0, 0, this.w, this.h);\n      this.projection = Matrix3.ortho(0, this.w, this.h, 0);\n\n      if (this.#onresize) {\n        this.#onresize();\n      }\n    }).observe(this.canvas, { box: 'content-box' });\n\n    document.body.appendChild(this.canvas);\n\n    this.#gl = this.canvas.getContext('webgl2');\n\n    this.#gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    this.#gl.clearColor(0.68, 0.68, 0.94, 1.0);\n\n    this.#gl.pixelStorei(this.#gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n    this.#gl.enable(this.#gl.BLEND);\n    this.#gl.blendFunc(this.#gl.ONE, this.#gl.ONE_MINUS_SRC_ALPHA);\n\n    this.quadBuffer = this.#createQuadBuffer();\n\n    this.#shaders = new Map();\n    this.#textures = new Map();\n    this.#images = [];\n\n    this.view = Matrix3.identity();\n    this.projection = Matrix3.ortho(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  createShader(name, vertexShaderSource, fragmentShaderSource) {\n    const cachedShader = this.#shaders.get(name);\n\n    if (cachedShader) {\n      return cachedShader;\n    }\n\n    const shader = new Shader(this.#gl, vertexShaderSource, fragmentShaderSource);\n    this.#shaders.set(name, shader);\n\n    return shader;\n  }\n\n  createVao() {\n    const vao = this.#gl.createVertexArray();\n\n    this.#gl.bindVertexArray(vao);\n\n    return vao;\n  }\n\n  createBuffer(data, dynamic) {\n    const buffer = this.#gl.createBuffer();\n\n    this.updateBuffer(buffer, data, dynamic);\n\n    return buffer;\n  }\n\n  updateBuffer(buffer, data, dynamic) {\n    this.useBuffer(buffer);\n\n    this.#gl.bufferData(this.#gl.ARRAY_BUFFER, data, dynamic ? this.#gl.DYNAMIC_DRAW : this.#gl.STATIC_DRAW);\n  }\n\n  useBuffer(buffer) {\n    this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, buffer);\n  }\n\n  setAttribute(location, size, stride, offset, divisor) {\n    this.#gl.vertexAttribPointer(location, size, this.#gl.FLOAT, false, stride, offset);\n    this.#gl.enableVertexAttribArray(location);\n\n    if (divisor != null) {\n      this.#gl.vertexAttribDivisor(location, divisor);\n    }\n  }\n\n  loadTexture(path, smooth) {\n    const cachedTexture = this.#textures.get(`${path}_${smooth}`);\n\n    if (cachedTexture) {\n      return cachedTexture;\n    }\n\n    const texture = this.#gl.createTexture();\n    this.#prepareTexture(texture, null, smooth);\n\n    const imageIndex = this.#images.length;\n    const image = new Image();\n\n    image.src = path;\n    image.onload = () => this.#prepareTexture(texture, imageIndex, smooth);\n\n    this.#textures.set(`${path}_${smooth}`, texture);\n    this.#images[imageIndex] = image;\n\n    return texture;\n  }\n\n  clear() {\n    this.#gl.clear(this.#gl.COLOR_BUFFER_BIT);\n  }\n\n  draw(shader, vao, texture, vertexCount, instanceCount) {\n    if (shader !== this.#currentShader) {\n      shader.use(this.#gl, this.view, this.projection);\n      this.#currentShader = shader;\n    } else {\n      this.#currentShader.setUniforms(this.#gl, this.view, this.projection);\n    }\n\n    if (vao !== this.#currentVao) {\n      this.#gl.bindVertexArray(vao);\n      this.#currentVao = vao;\n    }\n\n    if (texture !== this.#currentTexture) {\n      this.#gl.activeTexture(this.#gl.TEXTURE0);\n      this.#gl.bindTexture(this.#gl.TEXTURE_2D, texture);\n      this.#currentTexture = texture;\n    }\n\n    if (instanceCount != null) {\n      this.#gl.drawArraysInstanced(this.#gl.TRIANGLES, 0, vertexCount, instanceCount);\n    } else {\n      this.#gl.drawArrays(this.#gl.TRIANGLES, 0, vertexCount);\n    }\n  }\n\n  #createQuadBuffer() {\n    return this.createBuffer(new Float32Array([\n      0.0, 0.0, 0.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 0.0, 1.0, 0.0,\n\n      1.0, 0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 1.0, 1.0, 1.0,\n    ]), false);\n  }\n\n  #prepareTexture(texture, imageIndex, smooth) {\n    this.#gl.activeTexture(this.#gl.TEXTURE0);\n    this.#gl.bindTexture(this.#gl.TEXTURE_2D, texture);\n\n    if (imageIndex != null) {\n      this.#gl.texImage2D(this.#gl.TEXTURE_2D, 0, this.#gl.RGBA, this.#gl.RGBA, this.#gl.UNSIGNED_BYTE, this.#images[imageIndex]);\n    } else {\n      this.#gl.texImage2D(this.#gl.TEXTURE_2D, 0, this.#gl.RGBA, 1, 1, 0, this.#gl.RGBA, this.#gl.UNSIGNED_BYTE, new Uint8Array([255, 0, 255, 255,]));\n    }\n\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_WRAP_S, this.#gl.CLAMP_TO_EDGE);\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_WRAP_T, this.#gl.CLAMP_TO_EDGE);\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_MIN_FILTER, smooth ? this.#gl.LINEAR : this.#gl.NEAREST);\n    this.#gl.texParameteri(this.#gl.TEXTURE_2D, this.#gl.TEXTURE_MAG_FILTER, smooth ? this.#gl.LINEAR : this.#gl.NEAREST);\n  }\n}\n","export default class {\n  #newKeyPresses;\n  #newKeyReleases;\n  #newPress;\n  #newRelease;\n  #lastX;\n  #lastY;\n\n  constructor(game) {\n    this.#newKeyPresses = {};\n    this.#newKeyReleases = {};\n\n    game.renderer.canvas.addEventListener('pointermove', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n    });\n\n    game.renderer.canvas.addEventListener('pointerdown', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newPress = true;\n    });\n\n    game.renderer.canvas.addEventListener('pointerup', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX;\n      this.y = event.offsetY;\n\n      this.#newRelease = true;\n    });\n\n    addEventListener('keydown', event => {\n      this.#newKeyPresses[event.code] = true;\n    });\n\n    addEventListener('keyup', event => {\n      this.#newKeyReleases[event.code] = true;\n    });\n  }\n\n  update() {\n    if (this.x !== this.#lastX || this.y !== this.#lastY) {\n      this.#lastX = this.x;\n      this.#lastY = this.y;\n      this.moved = true;\n    }\n\n    this.press = false;\n\n    if (this.#newPress) {\n      this.press = true;\n      this.#newPress = false;\n    }\n\n    this.release = false;\n\n    if (this.#newRelease) {\n      this.release = true;\n      this.#newRelease = false;\n    }\n\n    this.keyPresses = {};\n\n    for (const [newKeyPress, newKeyPressValue] of Object.entries(this.#newKeyPresses)) {\n      if (newKeyPressValue) {\n        this.keyPresses[newKeyPress] = true;\n        this.#newKeyPresses[newKeyPress] = false;\n      }\n    }\n\n    this.keyReleases = {};\n\n    for (const [newKeyRelease, newKeyReleaseValue] of Object.entries(this.#newKeyReleases)) {\n      if (newKeyReleaseValue) {\n        this.keyReleases[newKeyRelease] = true;\n        this.#newKeyReleases[newKeyRelease] = false;\n      }\n    }\n\n    this.clickRead = false;\n  }\n\n  click() {\n    return !this.clickRead && ((this.mouse && this.release) || (!this.mouse && this.press));\n  }\n}\n","export default class {\n  constructor(x, y, size, type, color) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.type = type;\n    this.angle = 0.0;\n    this.enabled = true;\n    this.hidden = false;\n    this.a = 1.0;\n\n    this.setColor(color);\n  }\n\n  attributes() {\n    return [this.x, this.y, this.size, this.type, this.r, this.g, this.b, this.hidden ? 0 : this.a, this.angle];\n  }\n\n  setBaseColor(color) {\n    this.baseColor = color;\n    this.setColor(color);\n  }\n\n  setColor(color) {\n    switch (color) {\n    case 'primary':\n      this.r = 0.85;\n      this.g = 0.86;\n      this.b = 1.0;\n      break;\n    case 'background':\n      this.r = 0.68;\n      this.g = 0.68;\n      this.b = 0.94;\n    case 'highlight':\n      this.r = 0.76;\n      this.g = 0.55;\n      this.b = 0.58;\n      break;\n    case 'active':\n      this.r = 0.65;\n      this.g = 0.4;\n      this.b = 0.44;\n      break;\n    case 'inactive':\n      this.r = 0.34;\n      this.g = 0.34;\n      this.b = 0.46;\n      break;\n\n    case 'blackcat':\n      this.r = 0.33;\n      this.g = 0.33;\n      this.b = 0.33;\n      break;\n    case 'orangecat':\n      this.r = 0.7;\n      this.g = 0.45;\n      this.b = 0.08;\n      break;\n    case 'whitecat':\n      this.r = 0.9;\n      this.g = 0.9;\n      this.b = 0.9;\n      break;\n    case 'tabbycat':\n      this.r = 0.64;\n      this.g = 0.56;\n      this.b = 0.38;\n      break;\n    case 'silvercat':\n      this.r = 0.6;\n      this.g = 0.6;\n      this.b = 0.6;\n      break;\n\n    case 'black':\n      this.r = 0.0;\n      this.g = 0.0;\n      this.b = 0.0;\n      break;\n\n    // TODO: Choose darker primary colors that are easily readable on the primary background\n    case 'primary1':\n      this.#fromRGB(144, 168, 195);\n      break;\n    case 'primary2':\n      this.#fromRGB(70, 157, 137);\n      break;\n    case 'primary3':\n      this.#fromRGB(181, 201, 154);\n      break;\n    case 'primary4':\n      this.#fromRGB(0, 166, 251);\n      break;\n    case 'primary5':\n      this.#fromRGB(76, 201, 240);\n      break;\n    case 'primary6':\n      this.#fromRGB(244, 202, 224);\n      break;\n    case 'primary7':\n      this.#fromRGB(229, 0, 164);\n      break;\n    case 'primary8':\n      this.#fromRGB(242, 0, 137);\n      break;\n    case 'primary9':\n      this.#fromRGB(255, 255, 255);\n      break;\n    case 'primary10':\n      this.r = 1.0;\n      this.g = 0.8;\n      this.b = 0.94;\n      break;\n\n    case 'inactive1':\n      this.#fromRGB(144, 168, 195);\n      break;\n    case 'inactive2':\n      this.#fromRGB(70, 157, 137);\n      break;\n    case 'inactive3':\n      this.#fromRGB(181, 201, 154);\n      break;\n    case 'inactive4':\n      this.#fromRGB(0, 166, 251);\n      break;\n    case 'inactive5':\n      this.#fromRGB(76, 201, 240);\n      break;\n    case 'inactive6':\n      this.#fromRGB(244, 202, 224);\n      break;\n    case 'inactive7':\n      this.#fromRGB(229, 0, 164);\n      break;\n    case 'inactive8':\n      this.#fromRGB(242, 0, 137);\n      break;\n    case 'inactive9':\n      this.#fromRGB(255, 255, 255);\n      break;\n    case 'inactive10':\n      this.r = 1.0;\n      this.g = 0.8;\n      this.b = 0.94;\n      break;\n\n    default:\n      this.r = 1.0;\n      this.g = 1.0;\n      this.b = 1.0;\n      break;\n    }\n  }\n\n  activate(active) {\n    this.inactive = !active;\n    this.setColor(active ? (this.baseColor || 'primary') : 'inactive');\n  }\n\n  write(text, content, size, color = 'active', animations = null, delay = null) {\n    (this.content || {}).enabled = false;\n    this.content = text.write(content.toString(), this.x + (this.size - size) / 2, this.y + (this.size - size) / 2, size, color, animations, delay);\n  }\n\n  draw(spriteBatch, size, type, color) {\n    (this.content || {}).enabled = false;\n    this.content = spriteBatch.add(this.x + (this.size - size) / 2, this.y + (this.size - size) / 2, size, type, color);\n  }\n\n  #fromRGB(r, g, b) {\n    this.r = r / 255.0;\n    this.g = g / 255.0;\n    this.b = b / 255.0;\n  }\n}\n","import vertexShaderSource from '../shaders/sprite.vert';\nimport fragmentShaderSource from '../shaders/sprite.frag';\n\nimport Sprite from './Sprite';\n\nexport default class {\n  #game;\n  #shader;\n  #vao;\n  #instanceBuffer;\n  #texture;\n  #spritesChanged;\n\n  constructor(game, smooth = false, texturePath = 'textures/sprites.png') {\n    this.#game = game;\n\n    this.#shader = this.#game.renderer.createShader('sprite', vertexShaderSource, fragmentShaderSource);\n\n    this.#vao = this.#game.renderer.createVao();\n\n    this.#game.renderer.useBuffer(this.#game.renderer.quadBuffer);\n\n    this.#game.renderer.setAttribute(POSITION_ATTRIBUTE_LOCATION, 2, 16, 0);\n    this.#game.renderer.setAttribute(TEX_COORD_ATTRIBUTE_LOCATION, 2, 16, 8);\n\n    this.#instanceBuffer = this.#game.renderer.createBuffer(new Float32Array(), true);\n\n    this.#game.renderer.setAttribute(SPRITE_POSITION_ATTRIBUTE_LOCATION, 2, 36, 0, 1);\n    this.#game.renderer.setAttribute(SPRITE_SIZE_ATTRIBUTE_LOCATION, 1, 36, 8, 1);\n    this.#game.renderer.setAttribute(SPRITE_TYPE_ATTRIBUTE_LOCATION, 1, 36, 12, 1);\n    this.#game.renderer.setAttribute(SPRITE_COLOR_ATTRIBUTE_LOCATION, 4, 36, 16, 1);\n    this.#game.renderer.setAttribute(SPRITE_ANGLE_ATTRIBUTE_LOCATION, 1, 36, 32, 1);\n\n    this.#texture = this.#game.renderer.loadTexture(texturePath, smooth);\n\n    this.sprites = [];\n    this.changed();\n  }\n\n  add(x, y, size, type, color) {\n    if (x === 'center') {\n      x = this.#game.renderer.w / 2 - size / 2;\n    }\n\n    if (y === 'center') {\n      y = this.#game.renderer.h / 2 - size / 2;\n    }\n\n    const sprite = new Sprite(x, y, size, type, color);\n\n    this.sprites.push(sprite);\n    this.changed();\n\n    return sprite;\n  }\n\n  changed() {\n    this.#spritesChanged = true;\n  }\n\n  update() {\n    if (this.#spritesChanged) {\n      this.sprites = this.sprites.filter(sprite => sprite.enabled);\n\n      this.#game.renderer.updateBuffer(this.#instanceBuffer, new Float32Array(\n        this.sprites\n            .map(sprite => sprite.attributes())\n            .flat()\n      ), true);\n\n      this.#spritesChanged = false;\n    }\n  }\n\n  draw() {\n    this.#game.renderer.draw(this.#shader, this.#vao, this.#texture, 6, this.sprites.length);\n  }\n}\n","#version 300 es\n\nuniform mat3 view;\nuniform mat3 projection;\nuniform float imageSize;\n\nuniform sampler2D tex;\n\nin vec2 vertexPosition;\nin vec2 vertexTexCoord;\n\nin vec2 spritePosition;\nin float spriteSize;\nin float spriteType;\nin vec4 spriteColor;\nin float spriteAngle;\n\nout vec2 texCoord;\nout vec4 tint;\n\nvoid main() {\n  vec2 texOffset = vec2(imageSize / float(textureSize(tex, 0)),\n                        imageSize / float(textureSize(tex, 0).y));\n\n  texCoord = vec2(texOffset.x, 0.0) * spriteType + vertexTexCoord * texOffset;\n  tint = spriteColor;\n  tint.rgb *= tint.a;\n  // TODO: Calculate rotation based on spriteAngle\n  gl_Position = vec4(projection * view * vec3(vertexPosition * spriteSize + spritePosition, 1.0), 1.0);\n}\n","#version 300 es\n\nprecision highp float;\n\nuniform sampler2D tex;\n\nin vec2 texCoord;\nin vec4 tint;\n\nout vec4 fragmentColor;\n\nvoid main() {\n  fragmentColor = texture(tex, texCoord) * tint;\n\n  // if (fragmentColor.a == 0.0) discard;\n}\n","export default class {\n  constructor(text, x, y, size, color, animations, delay) {\n    this.text = text;\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.color = color;\n    this.animations = animations ?? [];\n    this.delay = delay ?? 0;\n\n    this.sprites = [];\n    this.enabled = true;\n\n    this.time = 0;\n    this.begin = null;\n  }\n\n  setColor(color) {\n    for (const sprite of this.sprites) {\n      sprite.setColor(color);\n    }\n  }\n\n  update(timestamp) {\n    let updated = false;\n\n    for (const animation of this.animations) {\n      switch (animation) {\n      case 'sine':\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.y = sprite.baseY + Math.sin(i + timestamp / 200) * 10;\n        }\n        updated = true;\n        break;\n      case 'shake':\n        this.time += 1;\n\n        if (this.time === 7) {\n          this.time = 0;\n          for (let i = 0; i < this.sprites.length; i++) {\n            const sprite = this.sprites[i];\n            sprite.x = sprite.baseX + Math.random() * 5;\n            sprite.y = sprite.baseY + Math.random() * 5;\n          }\n        }\n        updated = true;\n        break;\n      case 'typing':\n        if (!this.begin) {\n          this.begin = timestamp;\n        }\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.hidden = (timestamp - this.begin - this.delay) / 150 < i;\n        }\n        updated = true;\n        break;\n      }\n    }\n\n    return updated;\n  }\n}\n","import SpriteBatch from './SpriteBatch';\nimport TextSegment from './TextSegment';\n\nexport default class extends SpriteBatch {\n  #game;\n  #segments;\n\n  constructor(game) {\n    super(game, false, 'textures/font.png');\n\n    this.#game = game;\n    this.#segments = [];\n  }\n\n  write(text, x, y, size, color = 'active', animations = null, delay = null) {\n    if (x === 'center') {\n      x = Math.floor(this.#game.renderer.w / 2 - (Math.max(...text.split('\\n').map(s => s.length)) * size) / 2);\n    }\n\n    if (y === 'center') {\n      y = Math.floor(this.#game.renderer.h / 2 - (text.split('\\n').length * size) / 2);\n    }\n\n    const segment = new TextSegment(text, x, y, size, color, animations, delay);\n\n    let currX = x;\n    let currY = y;\n\n    for (const c of text) {\n      let type;\n\n      if (c === '\\n') {\n        currY += size;\n        currX = x;\n\n        continue;\n      }\n\n      if (c >= 'A' && c <= 'Z') {\n        type = c.charCodeAt(0) - 'A'.charCodeAt(0);\n      } else if (c >= '0' && c <= '9') {\n        type = 26 + c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if (c === '?') {\n        type = 36;\n      } else if (c === '!') {\n        type = 37;\n      } else if (c === ',') {\n        type = 38;\n      } else if (c === '.') {\n        type = 39;\n      } else if (c === \"'\") {\n        type = 40;\n      }\n\n      if (type != null) {\n        const sprite = this.add(currX, currY, size, type, color);\n        sprite.baseX = currX;\n        sprite.baseY = currY;\n        segment.sprites.push(sprite);\n      }\n\n      currX += size;\n    }\n\n    this.#segments.push(segment);\n    this.changed();\n\n    return segment;\n  }\n\n  clear() {\n    for (const segment of this.#segments) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = [];\n    this.changed();\n  }\n\n  update(timestamp) {\n    for (const segment of this.#segments.filter(segment => !segment.enabled)) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = this.#segments.filter(segment => segment.enabled);\n\n    for (const segment of this.#segments) {\n      if (segment.update(timestamp)) {\n        this.changed();\n      }\n    }\n\n    super.update();\n  }\n}\n","import SpriteBatch from './SpriteBatch';\n\nexport default class extends SpriteBatch {\n  #game;\n  #spacingX;\n  #spacingY;\n  #onclick;\n  #color;\n  #active;\n  #pressed;\n\n  constructor(game, x, y, w, h, s, spacingX, spacingY, onclick, color = 'primary', type = 0) {\n    super(game, false, 'textures/cells.png');\n\n    this.#game = game;\n\n    if (x === 'center') {\n      x = this.#game.renderer.w / 2 - w * (s + (spacingX ?? 0) * (w - 1) / w) / 2;\n    }\n\n    if (y === 'center') {\n      y = this.#game.renderer.h / 2 - h * (s + (spacingY ?? 0) * (h - 1) / h) / 2;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h\n    this.s = s;\n    this.#spacingX = spacingX ?? 0;\n    this.#spacingY = spacingY ?? 0;\n    this.#onclick = onclick;\n    this.#color = color;\n\n    for (let gridY = 0; gridY < h; gridY++) {\n      for (let gridX = 0; gridX < w; gridX++) {\n        const cell = this.add(this.x + gridX * this.#fullW, this.y + gridY * this.#fullH, s, type, color);\n        cell.setColor(color);\n        cell.gridX = gridX;\n        cell.gridY = gridY;\n      }\n    }\n  }\n\n  update() {\n    if (!this.disabled) {\n      if (this.#game.input.moved) {\n        let newActive = this.#cellAtPosition(this.#game.input.x, this.#game.input.y);\n        if (newActive?.inactive) {\n          newActive = null;\n        }\n\n        if (newActive !== this.#active && !this.#pressed) {\n          if (this.onactivate || this.#onclick) {\n            if (this.#game.input.mouse) {\n              if (!this.#active?.inactive) {\n                this.#active?.setColor(this.#active?.baseColor || this.#color);\n              }\n\n              newActive?.setColor('highlight');\n              this.changed();\n            }\n          }\n\n          // if (this.onactivate) {\n          //   this.onactivate(newActive, this.#active);\n          //   this.changed();\n          // }\n        }\n\n        this.#active = newActive;\n      }\n\n      if (this.#game.input.press) {\n        this.#pressed = this.#active;\n\n        if (this.onpress || this.#onclick) {\n          if (this.#game.input.mouse) {\n            this.#pressed?.setColor('active');\n            this.changed();\n          }\n        }\n\n        // if (this.onpress) {\n        //   this.onpress(this.#pressed);\n        //   this.changed();\n        // }\n      }\n\n      if (this.#game.input.click()) {\n        if (this.#onclick) {\n          this.#pressed?.setColor(this.#pressed?.baseColor || this.#color);\n          if (this.#active && this.#active === this.#pressed) {\n            this.#game.input.clickRead = true;\n            this.#onclick(this.#pressed);\n          }\n          this.changed();\n        }\n\n        this.#pressed = null;\n      }\n    }\n\n    super.update();\n  }\n\n  cellAt(x, y) {\n    if (x >= 0 && x < this.w && y >= 0 && y < this.h) {\n      return this.sprites[this.w * y + x];\n    }\n  }\n\n  #cellAtPosition(x, y) {\n    const index = this.#indexAtPosition(x, y);\n\n    if (index) {\n      return this.cellAt(index[0], index[1]);\n    }\n  }\n\n  #indexAtPosition(x, y) {\n    const relX = x - this.x;\n    const relY = y - this.y;\n    const indexX = Math.trunc(relX / this.#fullW);\n    const indexY = Math.trunc(relY / this.#fullH);\n\n    if (relX >= 0 && relY >= 0 &&\n        relX - indexX * this.#fullW < this.s &&\n        relY - indexY * this.#fullH < this.s &&\n        indexX >= 0 && indexX < this.w && indexY >= 0 && indexY < this.h) {\n      return [indexX, indexY];\n    }\n  }\n\n  get #fullW() {\n    return this.s + this.#spacingX;\n  }\n\n  get #fullH() {\n    return this.s + this.#spacingY;\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\nimport Select from './Select';\n\nexport default class {\n  #minigameClass;\n  #game;\n  #minigame;\n  #buttons;\n  #spriteBatch;\n  #cat;\n  #leftPaw;\n  #rightPaw;\n  #catName;\n  #catText;\n  #exitButton;\n  #exit;\n  #catMet;\n  #started;\n\n  constructor(minigameClass) {\n    this.#minigameClass = minigameClass;\n  }\n\n  init(game) {\n    this.#game = game;\n\n    this.#buttons = new Grid(this.#game, this.#game.renderer.w - 74, 10, 1, 1, 64, 0, 0, (button) => this.#buttonClick(button));\n\n    this.#exitButton = this.#buttons.sprites[0];\n\n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(this.#game.text, 'X', 32, 'active');\n\n    this.#spriteBatch = new SpriteBatch(game);\n\n    this.#cat = this.#spriteBatch.add('center', 100, 64, 1, this.#minigameClass.color);\n    this.#leftPaw = this.#spriteBatch.add(this.#cat.x - 12, this.#cat.y + 60, 24, 0, this.#minigameClass.color);\n    this.#rightPaw = this.#spriteBatch.add(this.#cat.x + 46, this.#cat.y + 60, 24, 0, this.#minigameClass.color);\n\n    this.#catName = this.#game.text.write(this.#minigameClass.catName, 'center', 10, 24, this.#minigameClass.color, ['sine']);\n    this.#catText = this.#game.text.write(this.#minigameClass.catText, 'center', this.#cat.y + 100, 32, this.#minigameClass.color, ['typing', 'shake']);\n  }\n\n  update() {\n    if (this.#exit) {\n      return new Select(this.#game);\n    }\n\n    this.#buttons.update();\n\n    if (!this.#catMet && this.#game.input.click()) {\n      this.#game.input.clickRead = true;\n      this.#cat.setColor('blackcat');\n      this.#leftPaw.setColor('blackcat');\n      this.#rightPaw.setColor('blackcat');\n      this.#spriteBatch.changed();\n      this.#catName.enabled = false;\n      this.#catText.enabled = false;\n      this.#catName = this.#game.text.write('VICKI', 'center', 10, 24, 'blackcat', ['sine']);\n      this.#catText = this.#game.text.write(this.#minigameClass.response, 'center', this.#cat.y + 100, 32, 'blackcat', ['typing', 'shake']);\n      this.#catMet = true;\n    } else if (!this.#started && this.#game.input.click()) {\n      this.#game.input.clickRead = true;\n      this.#cat.enabled = false;\n      this.#leftPaw.enabled = false;\n      this.#rightPaw.enabled = false;\n      this.#catName.enabled = false;\n      this.#catText.enabled = false;\n      this.#spriteBatch.changed();\n      this.#game.text.write(this.#minigameClass.title, 'center', 10, 48, 'inactive', ['sine']);\n      this.#setup();\n      this.#started = true;\n    }\n\n    if (this.#started) {\n      this.#minigame.update();\n    }\n\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    if (this.#started && !this.#exit) {\n      this.#minigame.draw();\n    }\n\n    this.#spriteBatch.draw();\n    this.#buttons.draw();\n  }\n\n  #setup() {\n    this.#minigame = new this.#minigameClass(this.#game, () => this.#win(), () => this.#lose());\n\n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(this.#game.text, 'X', 32, 'active');\n  }\n\n  #win() {\n    this.#game.scheduleTimer(500, () => {\n      this.#game.minigamesWon.add(this.#minigameClass);\n      this.#exit = true;\n    });\n  }\n\n  #lose() {\n    this.#game.scheduleTimer(500, () => { this.#setup(); });\n  }\n\n  #buttonClick(button) {\n    if (button === this.#exitButton) {\n      this.#exit = true;\n    }\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #w;\n  #h;\n  #mines;\n  #fontSize;\n  #grid;\n  #buttons;\n  #digButton;\n  #flagButton;\n  #mode;\n  #started;\n\n  static title = 'MEOWSWEEPER';\n  static color = 'tabbycat';\n  static sx = 73;\n  static type = 2;\n  static catName = 'QUEEN KARA';\n  static catText = \"YOU, NEW CAT!!\\nI NEED YOU TO SCRATCH MY BACK\\nIMMEDIATELY BUT ONLY WHERE\\nI LIKE IT!\\n\\n\\nSINCE YOU'RE NEW I WILL TELL\\nYOU HOW MANY DANGER ZONES\\nARE AROUND WHERE YOU'RE\\nSCRATCHING!\";\n  static response = 'OOOH, THE QUEEN HERSELF!!\\n\\n\\nI NEED TO MAKE A GOOD\\nFIRST IMPRESSION!';\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#w = this.#game.renderer.horizontal ? 20 : 10;\n    this.#h = this.#game.renderer.horizontal ? 10 : 20;\n    this.#mines = 10;\n\n    this.#fontSize = 26;\n\n    const spacing = 4;\n\n    const s = Math.floor(Math.min((this.#game.renderer.w - 20) / this.#w - (spacing * (this.#w - 1) / this.#w), (this.#game.renderer.h - 110) / this.#h - (spacing * (this.#h - 1) / this.#h)));\n\n    this.#grid = new Grid(this.#game, 'center', 100, this.#w, this.#h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#buttons = new Grid(this.#game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#digButton = this.#buttons.sprites[0];\n    this.#digButton.write(this.#game.text, 'O', 30, 'active');\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(this.#game.text, 'X', 30, 'active');\n\n    this.#setMode('dig');\n\n    this.#game.text.write('MEOWSWEEPER', 'center', 10, 48, 'inactive', ['sine']);\n    // this.#game.text.write('SCRATCH MY BACK, BUT\\nONLY WHERE I LIKE IT!', 50, 525, 32, 'active', ['typing', 'shake']);\n  }\n\n  update() {\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      this.#setMode('dig');\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      this.#setMode('flag');\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    switch (this.#mode) {\n    case 'dig':\n      if (!this.#started) {\n        this.#start(cell);\n      }\n\n      this.#open(cell.gridX, cell.gridY);\n\n      if (cell.mine) {\n        this.#grid.disabled = true;\n\n        this.#game.scheduleTimer(2000, () => {\n          for (const cell of this.#grid.sprites) {\n            (cell.content || {}).enabled = false;\n          }\n\n          this.#game.text.changed();\n\n          this.#onlose();\n        });\n      }\n\n      break;\n    case 'flag':\n      if (cell.flagged) {\n        cell.flagged = false;\n        cell.content.enabled = false;\n        this.#game.text.changed();\n      } else {\n        cell.flagged = true;\n        cell.write(this.#game.text, 'X', this.#fontSize, 'highlight');\n      }\n      break;\n    }\n  }\n\n  #start(cell) {\n    const available = this.#grid.sprites.filter(availableCell => availableCell !== cell && (Math.abs(availableCell.gridX - cell.gridX) > 1 || Math.abs(availableCell.gridY - cell.gridY) > 1));\n\n    for (let i = 0; i < this.#mines; i++) {\n      const index = Math.floor(Math.random() * available.length);\n      const mineCell = available[index];\n      available.splice(index, 1);\n\n      mineCell.mine = true;\n    }\n\n    for (let y = 0; y < this.#grid.h; y++) {\n      for (let x = 0; x < this.#grid.w; x++) {\n        let cell = this.#grid.cellAt(x, y);\n        if (!cell.mine) {\n          cell.mines = 0;\n          for (let dy = -1; dy <= 1; dy++) {\n            for (let dx = -1; dx <= 1; dx++) {\n              if (this.#grid.cellAt(x + dx, y + dy)?.mine) {\n                cell.mines += 1;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.#started = true;\n  }\n\n  #open(x, y) {\n    this.#game.shake(200);\n    const cell = this.#grid.cellAt(x, y);\n\n    if (cell?.flagged) {\n      cell.flagged = false;\n      cell.content.enabled = false;\n    }\n\n    if (cell?.enabled && !cell?.opened) {\n      cell.opened = true;\n\n      cell.activate(false);\n\n      if (cell.mines === 0) {\n        cell.hidden = true;\n\n        this.#open(x, y - 1);\n        this.#open(x, y + 1);\n        this.#open(x - 1, y);\n        this.#open(x + 1, y);\n      } else {\n        if (cell.mine) {\n          for (const mineCell of this.#grid.sprites.filter(cell => cell.mine)) {\n            mineCell.activate(false);\n            mineCell.write(this.#game.text, 'X', this.#fontSize, 'inactive10');\n          }\n        } else {\n          cell.write(this.#game.text, cell.mines, this.#fontSize, `inactive${cell.mines}`);\n        }\n      }\n    }\n\n    if (this.#grid.sprites.filter(cell => !cell.opened).every(cell => cell.mine)) {\n      this.#onwin();\n    }\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode('flag');\n    } else if (button === this.#digButton) {\n      this.#setMode('dig');\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#digButton.activate(this.#mode !== 'dig');\n    this.#flagButton.activate(this.#mode !== 'flag');\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #grid;\n  #spriteBatch;\n  #timer;\n  #over;\n\n  static title = 'PAW PAW TOE';\n  static color = 'orangecat';\n  static sx = 73;\n  static type = 2;\n  static catName = 'ORANGE CAT, THE USELESS BOYFRIEND';\n  static catText = \"BET YOU CAN'T BEAT ME\\nIN PAW PAW TOE!\\n\\n\\nI'M THE SMARTEST\\nORANGE CAT EVER!!!\";\n  static response = \"WELL, THAT'S\\nNOT SAYING MUCH...\\n\\n\\nLET'S SEE!\"\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#grid = new Grid(this.#game, 'center', 'center', 3, 3, 96, 20, 20, (cell) => this.#click(cell));\n    this.#spriteBatch = new SpriteBatch(this.#game);\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (!cell.symbol) {\n      this.#mark(cell, 'X');\n\n      this.#grid.disabled = true;\n\n      this.#timer = this.#game.scheduleTimer(1000, () => {\n        if (!this.#over) {\n          const available = this.#grid.sprites.filter(sprite => !sprite.symbol);\n\n          if (available.length > 0) {\n            this.#mark(available[Math.floor(Math.random() * available.length)], 'O');\n\n            this.#grid.disabled = false;\n            this.#grid.changed();\n          }\n        }\n      });\n    }\n  }\n\n  #mark(cell, symbol) {\n    if (!this.#over) {\n      this.#game.shake(200);\n\n      cell.symbol = symbol;\n\n      cell.activate(false);\n\n      cell.draw(this.#spriteBatch, 64, 0, symbol === 'X' ? 'blackcat' : 'orangecat');\n\n      this.#checkGrid();\n    }\n  }\n\n  #checkGrid() {\n    for (let y = 0; y < 3; y++) {\n      const symbolCounts = new Map();\n\n      for (let x = 0; x < 3; x++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    for (let x = 0; x < 3; x++) {\n      const symbolCounts = new Map();\n\n      for (let y = 0; y < 3; y++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get('X') === 3) {\n        return this.#win('X');\n      }\n\n      if (symbolCounts.get('O') === 3) {\n        return this.#win('O');\n      }\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(2, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(2, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'X' && this.#grid.cellAt(1, 1).symbol === 'X' && this.#grid.cellAt(0, 2).symbol === 'X') {\n      return this.#win('X');\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === 'O' && this.#grid.cellAt(1, 1).symbol === 'O' && this.#grid.cellAt(0, 2).symbol === 'O') {\n      return this.#win('O');\n    }\n  }\n\n  #win(symbol) {\n    this.#over = true;\n    this.#grid.disabled = true;\n    (this.#timer || {}).disabled = true;\n\n    if (symbol === 'X') {\n      this.#onwin();\n    } else if (symbol === 'O') {\n      this.#onlose();\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #spriteBatch;\n  #grids;\n  #cellSize;\n  #buttons;\n  #digit;\n\n  static title = 'SUDOCAT';\n  static color = 'blackcat';\n  static sx = 73;\n  static type = 4;\n  static catName = 'KUMBA';\n  static catText = \"I NEED ALL MY TREATS AND\\nTOYS NEATLY ORGANISED!!\\n\\n\\nTHERE SHOULD BE ONLY ONE\\nTYPE IN EACH ROW, EACH\\nCOLUMN AND IN EACH BOX!!\";\n  static response = 'KITTY MUST HAVE OCD...';\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#spriteBatch = new SpriteBatch(this.#game, true);\n\n    this.#grids = [];\n\n    const gridSpacing = 16;\n\n    const gridSize = Math.floor(Math.min((this.#game.renderer.w - 20) / 3 - (gridSpacing * (3 - 1) / 3), (this.#game.renderer.h - 200) / 3 - (gridSpacing * (3 - 1) / 3)));\n\n    const spacing = 5;\n\n    this.#cellSize = Math.floor(Math.min((gridSize - 0) / 3 - (spacing * (3 - 1) / 3), (gridSize - 0) / 3 - (spacing * (3 - 1) / 3)));\n\n    const startX = this.#game.renderer.w / 2 - 3 * (gridSize + gridSpacing * (3 - 1) / 3) / 2;\n\n    for (let y = 0; y < 3; y++) {\n      for (let x = 0; x < 3; x++) {\n        const grid = new Grid(this.#game, startX + x * (gridSize + gridSpacing), 100 + y * (gridSize + gridSpacing), 3, 3, this.#cellSize, spacing, spacing, (cell) => this.#click(cell));\n        this.#grids.push(grid);\n      }\n    }\n\n    this.#buttons = new Grid(this.#game, 'center', this.#game.renderer.h - 74, 10, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    for (let digit = 1; digit <= 10; digit++) {\n      const button = this.#buttons.sprites[digit - 1];\n      button.draw(this.#spriteBatch, 64 * 2 / 3, digit + 5);\n      button.digit = digit <= 9 ? digit : null;\n    }\n\n    this.#setGrid();\n    this.#selectDigit(1);\n\n    this.#game.text.write('SUDOCAT', 'center', 10, 48, 'inactive', ['sine']);\n  }\n\n  update() {\n    for (let digit = 1; digit <= 9; digit++) {\n      if (this.#game.input.keyPresses[`Digit${digit}`]) {\n        this.#selectDigit(digit);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      if (this.#digit > 1) {\n        this.#selectDigit(this.#digit - 1);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      if (this.#digit < 9) {\n        this.#selectDigit(this.#digit + 1);\n      }\n    }\n\n    if (this.#game.input.keyPresses['KeyX'] || this.#game.input.keyPresses['Digit0']) {\n      this.#selectDigit(null);\n    }\n\n    this.#spriteBatch.update();\n\n    for (const grid of this.#grids) {\n      grid.update();\n    }\n\n    this.#buttons.update();\n  }\n\n  draw() {\n    for (const grid of this.#grids) {\n      grid.draw();\n    }\n\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #gridAt(x, y) {\n    return this.#grids[Math.floor(y / 3) * 3 + Math.floor(x / 3)];\n  }\n\n  #cellAt(x, y) {\n    return this.#gridAt(x, y).cellAt(x % 3, y % 3);\n  }\n\n  #setGrid() {\n    const starts = [\n      [\n        6, 8, 0, 1, 0, 0, 0, 9, 0,\n        0, 3, 4, 5, 0, 8, 0, 2, 0,\n        2, 1, 0, 0, 6, 0, 3, 0, 0,\n        5, 0, 0, 4, 0, 7, 0, 0, 9,\n        3, 4, 2, 9, 0, 0, 0, 0, 6,\n        0, 0, 7, 0, 8, 0, 5, 0, 0,\n        9, 2, 0, 8, 0, 0, 0, 5, 3,\n        0, 0, 3, 2, 0, 0, 9, 1, 8,\n        0, 0, 0, 3, 0, 0, 0, 6, 7,\n      ]\n    ];\n\n    const start = starts[Math.floor(Math.random() * starts.length)];\n\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const digit = start[y * 9 + x];\n        if (digit !== 0) {\n          const cell = this.#cellAt(x, y);\n          cell.activate(false);\n          cell.digit = digit;\n          cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, digit + 5);\n        }\n      }\n    }\n  }\n\n  #click(cell) {\n    cell.digit = this.#digit;\n    (cell.content || {}).enabled = false;\n\n    if (this.#digit) {\n      cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, this.#digit + 5);\n    }\n\n    if (this.#checkCells()) {\n      this.#onwin();\n    }\n\n    this.#game.text.changed();\n    this.#spriteBatch.changed();\n  }\n\n  #checkCells() {\n    let valid = true;\n\n    this.#resetCells();\n\n    for (let i = 0; i < 9; i++) {\n      valid &= this.#checkRow(i);\n      valid &= this.#checkColumn(i);\n      valid &= this.#checkGrid(i);\n    }\n\n    return valid;\n  }\n\n  #resetCells() {\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const cell = this.#cellAt(x, y);\n        if (!cell.inactive) {\n          cell.setBaseColor('primary');\n        }\n      }\n    }\n\n    for (let i = 0; i < 9; i++) {\n      this.#grids[i].changed();\n    }\n  }\n\n  #checkRow(x) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let y = 0; y < 9; y++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let y = 0; y < 9; y++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor('active');\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkColumn(y) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let x = 0; x < 9; x++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let x = 0; x < 9; x++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor('active');\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkGrid(index) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    const grid = this.#grids[index];\n\n    for (let i = 0; i < 9; i++) {\n      const cell = grid.sprites[i];\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let i = 0; i < 9; i++) {\n          const cell = grid.sprites[i];\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor('active');\n            grid.changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#selectDigit(button.digit);\n    }\n  }\n\n  #selectDigit(digit) {\n    this.#digit = digit;\n\n    for (const button of this.#buttons.sprites) {\n      button.activate(true);\n    }\n\n    this.#buttons.sprites[digit != null ? digit - 1 : 9].activate(false);\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #grid;\n  #spriteBatch;\n  #opened;\n  #showingA;\n  #showingB;\n  #timer;\n\n  static title = 'MEOWMORY';\n  static color = 'silvercat';\n  static sx = 8;\n  static type = 3;\n  static catName = 'MOLLY';\n  static catText = \"THEY SAY I HAVE THE\\nMEMORY OF A GOLDFISH...\\n\\n\\nCAN YOU SHOW ME HOW\\nTO REMEMBER THINGS??\";\n  static response = 'SOMEONE SAID FISHIE?!\\n\\n\\nYUM!!!';\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    const w = this.#game.renderer.horizontal ? 6 : 5;\n    const h = this.#game.renderer.horizontal ? 5 : 6;\n\n    const spacing = 16;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / w - (spacing * (w - 1) / w), (game.renderer.h - 110) / h - (spacing * (h - 1) / h)));\n\n    this.#grid = new Grid(game, 'center', 100, w, h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#spriteBatch = new SpriteBatch(game, true);\n\n    const available = this.#grid.sprites.slice();\n\n    for (let i = 0; i < (w * h) / 2; i++) {\n      const indexA = Math.floor(Math.random() * available.length);\n      const cellA = available[indexA];\n      available.splice(indexA, 1);\n\n      const indexB = Math.floor(Math.random() * available.length);\n      const cellB = available[indexB];\n      available.splice(indexB, 1);\n\n      cellA.secret = i;\n      cellB.secret = i;\n    }\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (!cell.open) {\n      if (this.#showingA && this.#showingB) {\n        this.#cancelShowing();\n      }\n\n      cell.open = true;\n      cell.draw(this.#spriteBatch, this.#grid.s * 2 / 3, cell.secret, cell.secret < 5 ? 'tabbycat' : null);\n      cell.setBaseColor('active');\n\n      if (this.#opened) {\n        if (cell.secret === this.#opened.secret) {\n          cell.found = true;\n          cell.activate(false);\n\n          this.#opened.found = true;\n          this.#opened.activate(false);\n\n          if (this.#grid.sprites.every(cell => cell.found)) {\n            this.#onwin();\n          }\n        } else {\n          this.#showingA = this.#opened;\n          this.#showingB = cell;\n\n          this.#timer = this.#game.scheduleTimer(1000, () => this.#cancelShowing());\n        }\n\n        this.#opened = false;\n      } else {\n        this.#opened = cell;\n      }\n    }\n  }\n\n  #cancelShowing() {\n    (this.#timer || {}).disabled = true;\n\n    this.#showingA.open = false;\n    this.#showingA.content.enabled = false;\n    this.#showingA.setBaseColor('primary');\n\n    this.#showingB.open = false;\n    this.#showingB.content.enabled = false;\n    this.#showingB.setBaseColor('primary');\n\n    this.#grid.changed();\n    this.#game.text.changed();\n    this.#spriteBatch.changed();\n\n    this.#showingA = null;\n    this.#showingB = null;\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #rows;\n  #columns;\n  #maxRows;\n  #maxColumns;\n  #w;\n  #h;\n  #grid;\n  #buttons;\n  #markButton;\n  #flagButton;\n  #mode;\n\n  static title = 'MEOWSTERPIECE';\n  static color = 'whitecat';\n  static sx = 8;\n  static type = 3;\n  static catName = 'CHA CHA';\n  static catText = 'TODAY I DECIDED TO BE\\nAN ARTIST!!\\nHELP ME WITH THIS\\nPAINT BY NUMBER!\\n\\n\\nTHE CLUES WILL TELL YOU\\nHOW MANY BLOCKS SHOULD\\nBE PAINTED IN EACH ROW\\nAND IN EACH COLUMN!';\n  static response = 'SURE SURE, ARTIST TODAY,\\nSOMETHING ELSE TOMORROW!\\n\\n\\nTYPICAL KITTY...';\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#rows = [[0], [1, 1], [2, 2], [5], [2, 1, 2, 1], [5, 2], [3, 1], [6, 2], [1, 5, 1], [8], [2, 4]];\n    this.#columns = [[1, 2], [4, 1, 1], [3, 6], [7], [3, 6], [4, 4], [1, 3], [2], [3, 1], [2, 3]];\n\n    this.#maxRows = Math.max(...this.#rows.map(row => row.length));\n    this.#maxColumns = Math.max(...this.#columns.map(column => column.length));\n\n    this.#w = this.#columns.length + this.#maxRows;\n    this.#h = this.#rows.length + this.#maxColumns;\n\n    const spacing = 2;\n\n    const s = Math.floor(Math.min((this.#game.renderer.w - 20) / this.#w - (spacing * (this.#w - 1) / this.#w), (this.#game.renderer.h - 110) / this.#h - (spacing * (this.#h - 1) / this.#h)));\n\n    this.#grid = new Grid(this.#game, 'center', 100, this.#w, this.#h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    for (let x = 0; x < this.#w; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (x < this.#maxRows || y < this.#maxColumns - this.#columns[x - this.#maxRows].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(this.#game.text, this.#columns[x - this.#maxRows][y - (this.#maxColumns - this.#columns[x - this.#maxRows].length)], s * 2 / 3, 'highlight');\n          cell.activate(false);\n        }\n      }\n    }\n\n    for (let y = 0; y < this.#w; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (y < this.#maxColumns || x < this.#maxRows - this.#rows[y - this.#maxColumns].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(this.#game.text, this.#rows[y - this.#maxColumns][x - (this.#maxRows - this.#rows[y - this.#maxColumns].length)], this.#grid.s * 2 / 3, 'highlight');\n          cell.activate(false);\n        }\n      }\n    }\n\n    this.#buttons = new Grid(this.#game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#markButton = this.#buttons.sprites[0];\n    this.#markButton.write(this.#game.text, 'O', 30, 'active');\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(this.#game.text, 'X', 30, 'active');\n\n    this.#setMode('mark');\n\n    this.#grid.changed();\n\n    this.#game.text.write('MEOWSTERPIECE', 'center', 10, 48, 'inactive', ['sine']);\n  }\n\n  update() {\n    if (this.#game.input.keyPresses['KeyA'] || this.#game.input.keyPresses['ArrowLeft']) {\n      this.#setMode('mark');\n    }\n\n    if (this.#game.input.keyPresses['KeyD'] || this.#game.input.keyPresses['ArrowRight']) {\n      this.#setMode('flag');\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    (cell.content || {}).enabled = false;\n\n    switch (this.#mode) {\n    case 'mark':\n      if (cell.state !== 'marked') {\n        cell.state = 'marked';\n        cell.setBaseColor('active');\n      } else {\n        cell.state = null;\n        cell.setBaseColor('primary');\n      }\n      break;\n\n    case 'flag':\n      cell.setBaseColor('primary');\n      if (cell.state !== 'flagged') {\n        cell.state = 'flagged';\n        cell.write(this.#game.text, 'X', this.#grid.s * 2 / 3, 'highlight');\n      } else {\n        cell.state = null;\n      }\n      break;\n    }\n\n    this.#game.text.changed();\n\n    this.#checkGrid();\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode('flag');\n    } else if (button === this.#markButton) {\n      this.#setMode('mark');\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#markButton.activate(this.#mode !== 'mark');\n    this.#flagButton.activate(this.#mode !== 'flag');\n\n    this.#buttons.changed();\n  }\n\n  #checkGrid() {\n    let gridCorrect = 0;\n\n    for (let x = this.#maxRows; x < this.#w; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        this.#grid.cellAt(x, y).setBaseColor('inactive');\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let y = this.#maxColumns; y < this.#h; y++) {\n        if (this.#grid.cellAt(x, y).state === 'marked') {\n          current += 1;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== 'marked' || y === this.#h - 1) {\n          if ((current > 0 || y === this.#h - 1) && index < this.#columns[x - this.#maxRows].length) {\n            if (current > this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor('highlight');\n            } else if (current === this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor('primary3');\n              correct += 1;\n            }\n\n            index += 1;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#columns[x - this.#maxRows].length) {\n        gridCorrect += 1;\n      }\n    }\n\n    for (let y = this.#maxColumns; y < this.#h; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        this.#grid.cellAt(x, y).setBaseColor('inactive');\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let x = this.#maxRows; x < this.#w; x++) {\n        if (this.#grid.cellAt(x, y).state === 'marked') {\n          current += 1;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== 'marked' || x === this.#w - 1) {\n          if ((current > 0 || x === this.#w - 1) && index < this.#rows[y - this.#maxColumns].length) {\n            if (current > this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor('highlight');\n            } else if (current === this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor('primary3');\n              correct += 1;\n            }\n\n            index += 1;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#rows[y - this.#maxColumns].length) {\n        gridCorrect += 1;\n      }\n    }\n\n    if (gridCorrect === (this.#w - this.#maxRows) + (this.#h - this.#maxColumns)) {\n      this.#onwin();\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nimport Minigame from './Minigame';\nimport Meowsweeper from '../minigames/Meowsweeper';\nimport PawPawToe from '../minigames/PawPawToe';\nimport Sudocat from '../minigames/Sudocat';\nimport Meowmory from '../minigames/Meowmory';\nimport Meowsterpiece from '../minigames/Meowsterpiece';\n\nimport Matrix3 from '../Matrix3';\n\nexport default class {\n  #game;\n  #firstStart;\n  #grid;\n  #buttons;\n  #spriteBatch;\n  #minigameState;\n  #camY;\n  #startBlackCat;\n  #blackCat;\n  #blackCatArrived;\n  #titleShown;\n  #introOver;\n\n  init(game) {\n    this.#game = game;\n    this.#firstStart = game.firstStart;\n    game.firstStart = false;\n\n    this.#grid = new Grid(this.#game, 'center', 100, 6, 15, 128, 0, 0, null, '', 2);\n    this.#grid.disabled = true;\n\n    this.#buttons = new Grid(this.#game, 'center', 132, 3, 7, 128, 64, 64, (button) => this.#buttonClick(button), '', 1);\n\n    if (this.#firstStart) {\n      this.#buttons.disabled = true;\n      this.#camY = -this.#game.renderer.h;\n      this.#game.text.write('THIS IS A TRUE STORY\\n\\n\\nTHE CATS DEPICTED HERE\\nALL LIVE IN DUBLIN', 'center', 'center', 32, 'inactive', ['typing', 'shake']);\n      this.#game.scheduleTimer(9000, () => {\n        this.#startBlackCat = true;\n        this.#game.text.clear();\n      });\n    } else {\n      this.#game.text.write('HELP THE OTHER CATS\\nIN THE BUILDING!!', 'center', 10, 32, 'active', ['typing', 'shake']);\n    }\n\n    this.#spriteBatch = new SpriteBatch(this.#game);\n\n    const minigames = [PawPawToe, Meowmory, Meowsweeper, Sudocat, Meowsterpiece];\n\n    for (let i = 0; i < 21; i++) {\n      if (minigames[i] && (i == 0 || !this.#firstStart)) {\n        this.#buttons.sprites[i].minigame = minigames[i];\n        let sx = minigames[i].sx;\n        let sy = 73;\n        let type = minigames[i].type;\n        if (this.#game.minigamesWon.has(minigames[i])) {\n          this.#buttons.sprites[i].activate(false);\n          sx = 39;\n          sy = 39;\n          type = 1;\n        }\n        this.#spriteBatch.add(this.#buttons.sprites[i].x + sx, this.#buttons.sprites[i].y + sy, 50, type, minigames[i].color);\n      } else {\n        this.#buttons.sprites[i].activate(false);\n      }\n    }\n\n    this.#blackCat = this.#spriteBatch.add('center', game.renderer.h, 900, 1, 'black');\n\n    for (let i = 0; i < this.#buttons.sprites.length; i++) {\n      const button = this.#buttons.sprites[i];\n      if (this.#game.minigamesWon.has(button.minigame)) {\n        button.activate(false);\n      }\n    }\n  }\n\n  update() {\n    if (this.#firstStart) {\n      if (this.#camY < 0) {\n        this.#camY += 3;\n        if (this.#camY >= 0) {\n          this.#camY = 0;\n          this.#game.shake(200);\n        }\n        this.#game.renderer.projection = Matrix3.ortho(0, this.#game.renderer.w, this.#game.renderer.h + this.#camY, this.#camY);\n      } else if (this.#startBlackCat && !this.#blackCatArrived) {\n        this.#blackCat.y -= 3;\n        if (this.#blackCat.y <= this.#game.renderer.h / 2 - this.#blackCat.size / 2) {\n          this.#blackCatArrived = true;\n          this.#blackCat.y = this.#game.renderer.h / 2 - this.#blackCat.size / 2;\n          const title = this.#game.text.write('  A VOIDING\\nYOUR PROBLEMS', 'center', 'center', 48, null, ['sine']);\n          this.#game.text.write('  A GAME BY\\nATTILA HORVATH', 'center', title.y + 180, 36, 'whitecat', ['shake']);\n          this.#game.text.write('TAP TO BEGIN', 'center', title.y + 280, 36, 'inactive', ['typing', 'shake'], 1200);\n          this.#game.shake(500);\n        }\n        this.#blackCat.x = this.#game.renderer.w / 2 - this.#blackCat.size / 2;\n        this.#spriteBatch.changed();\n      } else if (!this.#titleShown) {\n        if (this.#game.input.click()) {\n          this.#game.input.clickRead = true;\n          this.#game.text.clear();\n          const firstLine = this.#game.text.write('SO, I HEARD THIS\\nIS THE DOMAIN OF', 'center',  'center', 28, 'inactive', ['typing', 'shake']);\n          this.#game.text.write('QUEEN KARA', 'center', firstLine.y + 60, 32, 'tabbycat', ['typing', 'sine'], 4000);\n          this.#game.text.write(\"I HOPE SHE'LL ACCEPT ME\\nIF I HELP THE OTHER CATS...\", 'center', firstLine.y + 120, 28, 'inactive', ['typing', 'shake'], 6000);\n          this.#titleShown = true;\n        }\n      } else if (!this.#introOver) {\n        if (this.#game.input.click()) {\n          this.#game.input.clickRead = true;\n          this.#blackCat.hidden = true;\n          this.#spriteBatch.changed();\n          this.#game.text.clear();\n          this.#introOver = true;\n          this.#game.text.write(\"LET'S START WITH THIS\\nGENIUS ORANGE CAT!\", 'center', 10, 32, 'active', ['typing', 'shake']);\n        }\n      } else {\n        this.#buttons.disabled = false;\n      }\n    }\n\n    this.#grid.update();\n    this.#spriteBatch.update();\n\n    if (this.#minigameState) {\n      return this.#minigameState;\n    } else {\n      this.#buttons.update();\n    }\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#minigameState = new Minigame(button.minigame);\n    }\n  }\n}\n","import Game from \"./Game\";\n\nconst game = new Game();\n\nfunction step(timestamp) {\n  requestAnimationFrame(step);\n  game.step(timestamp);\n}\n\nrequestAnimationFrame(step);\n","import Renderer from './Renderer';\nimport Input from './Input';\n\nimport Text from './Text';\nimport SpriteBatch from './SpriteBatch';\nimport Select from './states/Select';\nimport Minigame from './states/Minigame';\nimport Matrix3 from './Matrix3';\nimport PawPawToe from './minigames/PawPawToe';\nimport Meowmory from './minigames/Meowmory';\n\nexport default class {\n  #started;\n  #timers;\n  #backgroundBatch;\n  #spriteBatch;\n  #cursor;\n  #state;\n  #nextState;\n  #shakeScreen;\n\n  constructor() {\n    this.renderer = new Renderer(() => {\n      if (!this.#started) {\n        for (let i = 0; i < 128; i++) {\n          const type = Math.floor(Math.random() * 15);\n          let color = null;\n          if (type < 5) {\n            color = ['blackcat', 'orangecat', 'whitecat', 'tabbycat', 'silvercat'][Math.floor(Math.random() * 5)];\n          }\n          const sprite = this.#backgroundBatch.add(Math.random() * this.renderer.w, Math.random() * this.renderer.h, 16 + Math.random() * 100, type, color);\n          sprite.a = 0.33;\n          sprite.dx = -0.5 + Math.random();\n          sprite.dy = -0.5 + Math.random();\n          sprite.ds = -0.1 + Math.random() * 0.2;\n        }\n\n        this.#state = new Select();\n        // this.#state = new Minigame(Meowmory);\n        this.#state.init(this);\n        this.#started = true;\n      }\n    });\n\n    this.input = new Input(this);\n    this.#timers = [];\n\n    this.#backgroundBatch = new SpriteBatch(this, true);\n\n    this.text = new Text(this);\n    this.#spriteBatch = new SpriteBatch(this);\n    this.#cursor = this.#spriteBatch.add(0, 0, 26, 0, 'blackcat');\n    this.#cursor.hidden = true;\n\n    this.minigamesWon = new Set();\n\n    this.firstStart = true;\n  }\n\n  step(timestamp) {\n    this.timestamp = timestamp;\n    this.#update(timestamp);\n    this.#draw();\n\n    if (this.#nextState) {\n      this.text.clear();\n      this.#state = this.#nextState;\n      this.#state.init(this);\n      this.#nextState = null;\n    }\n  }\n\n  scheduleTimer(delay, onexpire, repeat) {\n    const timer = { start: this.timestamp ?? 0, delay: delay, onexpire: onexpire, repeat: repeat };\n    this.#timers.push(timer);\n    return timer;\n  }\n\n  shake(duration) {\n    navigator.vibrate(duration);\n    this.#shakeScreen = true;\n    this.scheduleTimer(duration, () => this.#shakeScreen = false);\n  }\n\n  #update(timestamp) {\n    if (this.#shakeScreen) {\n      this.renderer.view[6] = Math.random() * 7;\n      this.renderer.view[7] = Math.random() * 7;\n    } else {\n      this.renderer.view[6] = 0;\n      this.renderer.view[7] = 0;\n    }\n\n    // this.renderer.view[0] += 0.005;\n    // this.renderer.view[4] += 0.005;\n\n    // this.renderer.view[6] -= 1;\n    // this.renderer.view[7] -= 1;\n\n    // this.w ||= 1000;\n    // this.h ||= 1000;\n\n    // this.w -= 1;\n    // this.h -= 1;\n\n    // this.renderer.projection = Matrix3.ortho(100, this.renderer.w - 100, this.renderer.h - 100, 100);\n\n    this.input.update();\n\n    if (this.input.mouse && this.#cursor.hidden) {\n      this.#cursor.hidden = false;\n      this.#spriteBatch.changed();\n    }\n\n    if (this.input.moved) {\n      this.#cursor.x = this.input.x - 6;\n      this.#cursor.y = this.input.y - 6;\n\n      this.#spriteBatch.changed();\n    }\n\n    for (const sprite of this.#backgroundBatch.sprites) {\n      sprite.x += sprite.dx;\n      sprite.y += sprite.dy;\n      sprite.size += sprite.ds;\n\n      if (sprite.x < 0) {\n        sprite.dx = -sprite.dx;\n        sprite.x = 0;\n      }\n\n      if (sprite.y < 0) {\n        sprite.dy = -sprite.dy;\n        sprite.y = 0;\n      }\n\n      if (sprite.x > this.renderer.w) {\n        sprite.dx = -sprite.dx;\n        sprite.x = this.renderer.w;\n      }\n\n      if (sprite.y > this.renderer.h) {\n        sprite.dy = -sprite.dy;\n        sprite.y = this.renderer.h;\n      }\n\n      if (sprite.size < 16) {\n        sprite.ds = -sprite.ds;\n        sprite.size = 16;\n      }\n\n      if (sprite.size > 116) {\n        sprite.ds = -sprite.ds;\n        sprite.size = 116;\n      }\n    }\n\n    this.#backgroundBatch.changed();\n    this.#backgroundBatch.update();\n\n    this.#updateTimers(timestamp);\n\n    if (this.#state) {\n      this.#nextState = this.#state.update();\n    }\n\n    this.text.update(timestamp);\n    this.#spriteBatch.update();\n  }\n\n  #updateTimers(timestamp) {\n    for (const timer of this.#timers) {\n      if (timestamp >= timer.start + timer.delay && !timer.disabled) {\n        if (timer.repeat) {\n          timer.start = timestamp;\n        } else {\n          timer.expired = true;\n        }\n\n        if (timer.onexpire) {\n          timer.onexpire();\n        }\n      }\n    }\n\n    if (this.#timers.some(timer => timer.expired || timer.disabled)) {\n      this.#timers = this.#timers.filter(timer => !timer.expired && !timer.disabled);\n    }\n  }\n\n  #draw() {\n    this.renderer.clear();\n\n    const currProjection = this.renderer.projection;\n\n    this.renderer.projection = Matrix3.ortho(0, this.renderer.w, this.renderer.h, 0);\n    this.#backgroundBatch.draw();\n    this.renderer.projection = currProjection;\n\n    if (this.#state) {\n      this.#state.draw();\n    }\n\n    this.renderer.projection = Matrix3.ortho(0, this.renderer.w, this.renderer.h, 0);\n    this.text.draw();\n    this.#spriteBatch.draw();\n    this.renderer.projection = currProjection;\n  }\n}\n"],"names":["Matrix3","Float32Array","identity","ortho","left","right","bottom","top","Shader","program","viewUniformLocation","projectionUniformLocation","texUniformLocation","imageSizeUniformLocation","constructor","gl","vertexShaderSource","fragmentShaderSource","vertexShader","this","compileShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","bindAttribLocation","linkProgram","getUniformLocation","console","log","getProgramInfoLog","use","view","projection","useProgram","setUniforms","uniformMatrix3fv","uniform1i","uniform1f","type","source","shader","createShader","shaderSource","getShaderInfoLog","Renderer","onresize","shaders","textures","images","currentShader","currentVao","currentTexture","document","body","style","margin","padding","canvas","createElement","display","width","height","cursor","touchAction","ResizeObserver","w","clientWidth","h","clientHeight","horizontal","viewport","observe","box","appendChild","getContext","clearColor","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","quadBuffer","createQuadBuffer","Map","name","cachedShader","get","set","createVao","vao","createVertexArray","bindVertexArray","createBuffer","data","dynamic","buffer","updateBuffer","useBuffer","bufferData","ARRAY_BUFFER","DYNAMIC_DRAW","STATIC_DRAW","bindBuffer","setAttribute","location","size","stride","offset","divisor","vertexAttribPointer","FLOAT","enableVertexAttribArray","vertexAttribDivisor","loadTexture","path","smooth","cachedTexture","texture","createTexture","prepareTexture","imageIndex","length","image","Image","src","onload","clear","COLOR_BUFFER_BIT","draw","vertexCount","instanceCount","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","drawArraysInstanced","TRIANGLES","drawArrays","texImage2D","RGBA","UNSIGNED_BYTE","Uint8Array","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","NEAREST","TEXTURE_MAG_FILTER","Input","newKeyPresses","newKeyReleases","newPress","newRelease","lastX","lastY","game","renderer","addEventListener","event","mouse","pointerType","x","offsetX","y","offsetY","code","update","moved","press","release","keyPresses","newKeyPress","newKeyPressValue","Object","entries","keyReleases","newKeyRelease","newKeyReleaseValue","clickRead","click","Sprite","color","angle","enabled","hidden","a","setColor","attributes","r","g","b","setBaseColor","baseColor","fromRGB","activate","active","inactive","write","text","content","animations","delay","toString","spriteBatch","add","SpriteBatch","instanceBuffer","spritesChanged","texturePath","sprites","changed","sprite","push","filter","map","flat","TextSegment","time","begin","timestamp","updated","animation","i","baseY","Math","sin","baseX","random","Text","segments","super","floor","max","split","s","segment","currX","currY","c","charCodeAt","Grid","spacingX","spacingY","onclick","pressed","gridY","gridX","cell","fullW","fullH","disabled","input","newActive","cellAtPosition","onactivate","onpress","cellAt","index","indexAtPosition","relX","relY","indexX","trunc","indexY","Minigame","minigameClass","minigame","buttons","cat","leftPaw","rightPaw","catName","catText","exitButton","exit","catMet","started","init","button","buttonClick","Select","response","title","setup","win","lose","scheduleTimer","minigamesWon","Meowsweeper","onwin","onlose","mines","fontSize","grid","digButton","flagButton","mode","static","min","setMode","start","open","mine","flagged","available","availableCell","abs","mineCell","splice","dy","dx","shake","opened","every","PawPawToe","timer","over","symbol","mark","checkGrid","symbolCounts","Sudocat","grids","cellSize","digit","gridSize","gridSpacing","spacing","startX","setGrid","selectDigit","gridAt","starts","checkCells","valid","resetCells","checkRow","checkColumn","digitCounts","digitCount","Meowmory","showingA","showingB","slice","indexA","cellA","indexB","cellB","secret","cancelShowing","found","Meowsterpiece","rows","columns","maxRows","maxColumns","markButton","row","column","state","gridCorrect","current","correct","firstStart","minigameState","camY","startBlackCat","blackCat","blackCatArrived","titleShown","introOver","minigames","sx","sy","has","firstLine","timers","backgroundBatch","nextState","shakeScreen","ds","Set","step","onexpire","repeat","duration","navigator","vibrate","updateTimers","expired","some","currProjection","requestAnimationFrame"],"mappings":"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"}