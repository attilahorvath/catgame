{"version":3,"file":"bundle.js","sources":["src/Matrix3.js","src/Shader.js","src/Renderer.js","src/Input.js","src/Sprite.js","src/SpriteBatch.js","shaders/sprite.vert","shaders/sprite.frag","src/TextSegment.js","src/Text.js","src/Particles.js","src/Grid.js","src/states/Minigame.js","src/minigames/Meowsweeper.js","src/minigames/PawPawToe.js","src/minigames/Sudocat.js","src/minigames/Meowmory.js","src/minigames/Meowjong.js","src/minigames/Meowsterpiece.js","src/states/Select.js","src/index.js","src/Game.js"],"sourcesContent":["export default class Matrix3 extends Float32Array {\n  static identity() {\n    return new Matrix3([\n      1.0, 0.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 0.0, 1.0,\n    ]);\n  }\n\n  static ortho(left, right, bottom, top) {\n    return new Matrix3([\n      2.0 / (right - left), 0.0, 0.0,\n      0.0, 2.0 / (top - bottom), 0.0,\n      -(right + left) / (right - left), -(top + bottom) / (top - bottom), 1.0,\n    ]);\n  }\n}\n","export default class {\n  #program;\n  #viewUniformLocation;\n  #projectionUniformLocation;\n  #texUniformLocation;\n  #imageSizeUniformLocation;\n\n  constructor(gl, vertexShaderSource, fragmentShaderSource) {\n    const vertexShader = this.#compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource)\n    const fragmentShader = this.#compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n    const program = gl.createProgram();\n\n    const attachShader = gl.attachShader.bind(gl);\n    const bindAttribLocation = gl.bindAttribLocation.bind(gl);\n    const getUniformLocation = gl.getUniformLocation.bind(gl);\n\n    attachShader(program, vertexShader);\n    attachShader(program, fragmentShader);\n\n    bindAttribLocation(program, POSITION_ATTRIBUTE_LOCATION, 'vertexPosition');\n    bindAttribLocation(program, COLOR_ATTRIBUTE_LOCATION, 'vertexColor');\n    bindAttribLocation(program, TEX_COORD_ATTRIBUTE_LOCATION, 'vertexTexCoord');\n\n    bindAttribLocation(program, SPRITE_POSITION_ATTRIBUTE_LOCATION, 'spritePosition');\n    bindAttribLocation(program, SPRITE_SIZE_ATTRIBUTE_LOCATION, 'spriteSize');\n    bindAttribLocation(program, SPRITE_TYPE_ATTRIBUTE_LOCATION, 'spriteType');\n    bindAttribLocation(program, SPRITE_COLOR_ATTRIBUTE_LOCATION, 'spriteColor');\n\n    gl.linkProgram(program);\n\n    this.#viewUniformLocation = getUniformLocation(program, 'view');\n    this.#projectionUniformLocation = getUniformLocation(program, 'projection');\n    this.#texUniformLocation = getUniformLocation(program, 'tex');\n    this.#imageSizeUniformLocation = getUniformLocation(program, 'imageSize');\n\n    this.#program = program;\n  }\n\n  use(gl, view, projection) {\n    gl.useProgram(this.#program);\n\n    this.setup(gl, view, projection);\n  }\n\n  setup(gl, view, projection) {\n    if (this.#viewUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#viewUniformLocation, false, view);\n    }\n\n    if (this.#projectionUniformLocation != null) {\n      gl.uniformMatrix3fv(this.#projectionUniformLocation, false, projection);\n    }\n\n    if (this.#texUniformLocation != null) {\n      gl.uniform1i(this.#texUniformLocation, 0);\n    }\n\n    if (this.#imageSizeUniformLocation != null) {\n      gl.uniform1f(this.#imageSizeUniformLocation, IMAGE_SIZE);\n    }\n  }\n\n  #compileShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    return shader;\n  }\n}\n","import Matrix3 from './Matrix3';\n\nimport Shader from './Shader';\n\nexport default class {\n  #onresize;\n  #gl;\n  #shaders;\n  #textures;\n  #images;\n  #currentShader;\n  #currentVao;\n  #currentTexture;\n\n  constructor(onresize) {\n    this.#onresize = onresize;\n\n    document.body.style.margin = '0';\n    document.body.style.padding = '0';\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.style.display = 'block';\n    this.canvas.style.width = '100dvw';\n    this.canvas.style.height = '100dvh';\n    this.canvas.style.cursor = 'none';\n    this.canvas.style.touchAction = 'none';\n\n    new ResizeObserver(() => {\n      this.multiplier = Math.max(this.canvas.clientWidth, this.canvas.clientHeight) < 1000 ? 2 : 1;\n\n      this.w = this.canvas.clientWidth * this.multiplier;\n      this.h = this.canvas.clientHeight * this.multiplier;\n\n      this.canvas.width = this.w;\n      this.canvas.height = this.h;\n\n      this.horizontal = this.w > this.h;\n\n      this.#gl.viewport(0, 0, this.w, this.h);\n      this.projection = Matrix3.ortho(0, this.w, this.h, 0);\n\n      this.#onresize();\n    }).observe(this.canvas, { box: 'content-box' });\n\n    document.body.appendChild(this.canvas);\n\n    this.#gl = this.canvas.getContext('webgl2');\n\n    this.#gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    this.#gl.clearColor(0.68, 0.68, 0.94, 1.0);\n\n    this.#gl.pixelStorei(this.#gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n    this.#gl.enable(this.#gl.BLEND);\n    this.#gl.blendFunc(this.#gl.ONE, this.#gl.ONE_MINUS_SRC_ALPHA);\n\n    this.quadBuffer = this.#createQuadBuffer();\n\n    this.#shaders = new Map();\n    this.#textures = new Map();\n    this.#images = [];\n\n    this.view = Matrix3.identity();\n    this.projection = Matrix3.ortho(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  createShader(name, vertexShaderSource, fragmentShaderSource) {\n    const cachedShader = this.#shaders.get(name);\n\n    if (cachedShader) {\n      return cachedShader;\n    }\n\n    const shader = new Shader(this.#gl, vertexShaderSource, fragmentShaderSource);\n    this.#shaders.set(name, shader);\n\n    return shader;\n  }\n\n  createVao() {\n    const vao = this.#gl.createVertexArray();\n\n    this.#gl.bindVertexArray(vao);\n\n    return vao;\n  }\n\n  createBuffer(data, dynamic) {\n    const buffer = this.#gl.createBuffer();\n\n    this.updateBuffer(buffer, data, dynamic);\n\n    return buffer;\n  }\n\n  updateBuffer(buffer, data, dynamic) {\n    this.useBuffer(buffer);\n\n    this.#gl.bufferData(this.#gl.ARRAY_BUFFER, data, dynamic ? this.#gl.DYNAMIC_DRAW : this.#gl.STATIC_DRAW);\n  }\n\n  useBuffer(buffer) {\n    this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, buffer);\n  }\n\n  setAttribute(location, size, stride, offset, divisor) {\n    this.#gl.vertexAttribPointer(location, size, this.#gl.FLOAT, false, stride, offset);\n    this.#gl.enableVertexAttribArray(location);\n\n    if (divisor != null) {\n      this.#gl.vertexAttribDivisor(location, divisor);\n    }\n  }\n\n  fetchTexture(filename, smooth) {\n    const path = filename ? `textures/${filename}.png` : 'blank';\n    const cachedTexture = this.#textures.get(`${path}_${smooth}`);\n\n    if (cachedTexture) {\n      return cachedTexture;\n    }\n\n    const texture = this.#gl.createTexture();\n    this.#prepareTexture(texture, null, smooth);\n\n    if (filename) {\n      const imageIndex = this.#images.length;\n      const image = new Image();\n\n      image.src = path;\n      image.onload = () => this.#prepareTexture(texture, imageIndex, smooth);\n\n      this.#images[imageIndex] = image;\n    }\n\n    this.#textures.set(`${path}_${smooth}`, texture);\n\n    return texture;\n  }\n\n  clear() {\n    this.#gl.clear(this.#gl.COLOR_BUFFER_BIT);\n  }\n\n  draw(shader, vao, texture, vertexCount, instanceCount) {\n    if (shader !== this.#currentShader) {\n      shader.use(this.#gl, this.view, this.projection);\n      this.#currentShader = shader;\n    } else {\n      this.#currentShader.setup(this.#gl, this.view, this.projection);\n    }\n\n    if (vao !== this.#currentVao) {\n      this.#gl.bindVertexArray(vao);\n      this.#currentVao = vao;\n    }\n\n    if (texture !== this.#currentTexture) {\n      this.#gl.activeTexture(this.#gl.TEXTURE0);\n      this.#gl.bindTexture(this.#gl.TEXTURE_2D, texture);\n      this.#currentTexture = texture;\n    }\n\n    if (instanceCount != null) {\n      this.#gl.drawArraysInstanced(this.#gl.TRIANGLES, 0, vertexCount, instanceCount);\n    } else {\n      this.#gl.drawArrays(this.#gl.TRIANGLES, 0, vertexCount);\n    }\n  }\n\n  #createQuadBuffer() {\n    return this.createBuffer(new Float32Array([\n      0.0, 0.0, 0.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 0.0, 1.0, 0.0,\n\n      1.0, 0.0, 1.0, 0.0,\n      0.0, 1.0, 0.0, 1.0,\n      1.0, 1.0, 1.0, 1.0,\n    ]), false);\n  }\n\n  #prepareTexture(texture, imageIndex, smooth) {\n    const gl = this.#gl;\n    const texture0 = gl.TEXTURE0;\n    const texture2d = gl.TEXTURE_2D;\n    const texImage2D = gl.texImage2D.bind(gl);\n    const texParameteri = gl.texParameteri.bind(gl);\n    const rgba = gl.RGBA;\n    const unsignedByte = gl.UNSIGNED_BYTE;\n    const filter = smooth ? gl.LINEAR : gl.NEAREST;\n\n    gl.activeTexture(texture0);\n    gl.bindTexture(texture2d, texture);\n\n    if (imageIndex != null) {\n      texImage2D(texture2d, 0, rgba, rgba, unsignedByte, this.#images[imageIndex]);\n    } else {\n      texImage2D(texture2d, 0, rgba, 1, 1, 0, rgba, unsignedByte, new Uint8Array([255, 255, 255, 255,]));\n    }\n\n    texParameteri(texture2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    texParameteri(texture2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    texParameteri(texture2d, gl.TEXTURE_MIN_FILTER, filter);\n    texParameteri(texture2d, gl.TEXTURE_MAG_FILTER, filter);\n  }\n}\n","export default class {\n  #newKeyPresses;\n  #newKeyReleases;\n  #newPress;\n  #newRelease;\n  #lastX;\n  #lastY;\n\n  constructor(game) {\n    this.#newKeyPresses = {};\n    this.#newKeyReleases = {};\n\n    game.renderer.canvas.addEventListener('pointermove', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX * game.renderer.multiplier;\n      this.y = event.offsetY * game.renderer.multiplier;\n    });\n\n    game.renderer.canvas.addEventListener('pointerdown', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX * game.renderer.multiplier;\n      this.y = event.offsetY * game.renderer.multiplier;\n\n      this.#newPress = true;\n    });\n\n    game.renderer.canvas.addEventListener('pointerup', event => {\n      this.mouse = event.pointerType === 'mouse';\n\n      this.x = event.offsetX * game.renderer.multiplier;\n      this.y = event.offsetY * game.renderer.multiplier;\n\n      this.#newRelease = true;\n    });\n\n    addEventListener('keydown', event => {\n      this.#newKeyPresses[event.code] = true;\n    });\n\n    addEventListener('keyup', event => {\n      this.#newKeyReleases[event.code] = true;\n    });\n  }\n\n  update() {\n    if (this.x !== this.#lastX || this.y !== this.#lastY) {\n      this.#lastX = this.x;\n      this.#lastY = this.y;\n      this.moved = true;\n    }\n\n    this.press = false;\n\n    if (this.#newPress) {\n      this.press = true;\n      this.#newPress = false;\n    }\n\n    this.release = false;\n\n    if (this.#newRelease) {\n      this.release = true;\n      this.#newRelease = false;\n    }\n\n    this.keyPresses = {};\n\n    for (const [newKeyPress, newKeyPressValue] of Object.entries(this.#newKeyPresses)) {\n      if (newKeyPressValue) {\n        this.keyPresses[newKeyPress] = true;\n        this.#newKeyPresses[newKeyPress] = false;\n      }\n    }\n\n    this.keyReleases = {};\n\n    for (const [newKeyRelease, newKeyReleaseValue] of Object.entries(this.#newKeyReleases)) {\n      if (newKeyReleaseValue) {\n        this.keyReleases[newKeyRelease] = true;\n        this.#newKeyReleases[newKeyRelease] = false;\n      }\n    }\n\n    this.clickRead = false;\n  }\n\n  click() {\n    return !this.clickRead && ((this.mouse && this.release) || (!this.mouse && this.press));\n  }\n\n  left() {\n    return this.keyPresses['KeyA'] || this.keyPresses['ArrowLeft'];\n  }\n\n  right() {\n    return this.keyPresses['KeyD'] || this.keyPresses['ArrowRight'];\n  }\n\n  cancel() {\n    return this.keyPresses['KeyX'] || this.keyPresses['Digit0'];\n  }\n}\n","export default class {\n  constructor(x, y, s, type, color) {\n    this.x = x;\n    this.y = y;\n    this.s = s;\n    this.type = type;\n    this.enabled = true;\n    this.hidden = false;\n    this.a = 1.0;\n\n    this.setColor(color);\n  }\n\n  attributes() {\n    return [this.x, this.y, this.s, this.type, this.r, this.g, this.b, this.hidden ? 0 : this.a];\n  }\n\n  setBaseColor(color) {\n    this.baseColor = color;\n    this.setColor(color);\n  }\n\n  setColor(index) {\n    let color = [0xd9dcff, 0xadadf0, 0xc28c94, 0xa66670, 0x575775,\n                 0x545454, 0xb36e14, 0xe6e6e6, 0xa38f61, 0x999999,\n                 0x90a8c3, 0x469d89, 0xb5c99a, 0x00a6fb, 0x4cc9f0,\n                 0xf4cae0, 0xe500a4, 0xf20089, 0xffffff, 0xffccf0,\n                 0x000000][index];\n    if (color == null) {\n      color = 0xffffff;\n    }\n    this.r = ((color & 0xff0000) >> 16) / 255.0;\n    this.g = ((color & 0x00ff00) >> 8) / 255.0;\n    this.b = (color & 0x0000ff) / 255.0;\n  }\n\n  activate(active) {\n    this.inactive = !active;\n    this.setColor(active ? (this.baseColor || PRIMARY_COLOR) : INACTIVE_COLOR);\n  }\n\n  write(text, content, s, color = ACTIVE_COLOR, animations = null, delay = null) {\n    (this.content || {}).enabled = false;\n    this.content = text.write(content.toString(), this.x + (this.s - s) / 2, this.y + (this.s - s) / 2, s, color, animations, delay);\n  }\n\n  draw(spriteBatch, s, type, color) {\n    (this.content || {}).enabled = false;\n    this.content = spriteBatch.add(this.x + (this.s - s) / 2, this.y + (this.s - s) / 2, s, type, color);\n  }\n}\n","import vertexShaderSource from '../shaders/sprite.vert';\nimport fragmentShaderSource from '../shaders/sprite.frag';\n\nimport Sprite from './Sprite';\n\nexport default class {\n  #game;\n  #shader;\n  #vao;\n  #instanceBuffer;\n  #texture;\n  #spritesChanged;\n\n  constructor(game, smooth = false, textureFilename = 'sprites') {\n    this.#game = game;\n    const renderer = game.renderer;\n\n    this.#shader = renderer.createShader('sprite', vertexShaderSource, fragmentShaderSource);\n\n    this.#vao = renderer.createVao();\n\n    renderer.useBuffer(renderer.quadBuffer);\n\n    renderer.setAttribute(POSITION_ATTRIBUTE_LOCATION, 2, 16, 0);\n    renderer.setAttribute(TEX_COORD_ATTRIBUTE_LOCATION, 2, 16, 8);\n\n    this.#instanceBuffer = renderer.createBuffer(new Float32Array(), true);\n\n    renderer.setAttribute(SPRITE_POSITION_ATTRIBUTE_LOCATION, 2, 32, 0, 1);\n    renderer.setAttribute(SPRITE_SIZE_ATTRIBUTE_LOCATION, 1, 32, 8, 1);\n    renderer.setAttribute(SPRITE_TYPE_ATTRIBUTE_LOCATION, 1, 32, 12, 1);\n    renderer.setAttribute(SPRITE_COLOR_ATTRIBUTE_LOCATION, 4, 32, 16, 1);\n\n    this.#texture = renderer.fetchTexture(textureFilename, smooth);\n\n    this.sprites = [];\n    this.changed();\n  }\n\n  add(x, y, s, type, color) {\n    if (x === CENTER) {\n      x = this.#game.renderer.w / 2 - s / 2;\n    }\n\n    if (y === CENTER) {\n      y = this.#game.renderer.h / 2 - s / 2;\n    }\n\n    const sprite = new Sprite(x, y, s, type, color);\n\n    this.sprites.push(sprite);\n    this.changed();\n\n    return sprite;\n  }\n\n  changed() {\n    this.#spritesChanged = true;\n  }\n\n  update() {\n    if (this.#spritesChanged) {\n      this.sprites = this.sprites.filter(sprite => sprite.enabled);\n\n      this.#game.renderer.updateBuffer(this.#instanceBuffer, new Float32Array(\n        this.sprites\n            .map(sprite => sprite.attributes())\n            .flat()\n      ), true);\n\n      this.#spritesChanged = false;\n    }\n  }\n\n  draw() {\n    this.#game.renderer.draw(this.#shader, this.#vao, this.#texture, 6, this.sprites.length);\n  }\n}\n","#version 300 es\n\nuniform mat3 view;\nuniform mat3 projection;\nuniform float imageSize;\n\nuniform sampler2D tex;\n\nin vec2 vertexPosition;\nin vec2 vertexTexCoord;\n\nin vec2 spritePosition;\nin float spriteSize;\nin float spriteType;\nin vec4 spriteColor;\n\nout vec2 texCoord;\nout vec4 tint;\n\nvoid main() {\n  vec2 texOffset = vec2(imageSize / float(textureSize(tex, 0)),\n                        imageSize / float(textureSize(tex, 0).y));\n\n  texCoord = vec2(texOffset.x, 0.0) * spriteType + vertexTexCoord * texOffset;\n  tint = spriteColor;\n  tint.rgb *= tint.a;\n\n  gl_Position = vec4(projection * view * vec3(vertexPosition * spriteSize + spritePosition, 1.0), 1.0);\n}\n","#version 300 es\n\nprecision highp float;\n\nuniform sampler2D tex;\n\nin vec2 texCoord;\nin vec4 tint;\n\nout vec4 fragmentColor;\n\nvoid main() {\n  fragmentColor = texture(tex, texCoord) * tint;\n}\n","export default class {\n  constructor(text, x, y, s, color, animations, delay) {\n    this.text = text;\n    this.x = x;\n    this.y = y;\n    this.s = s;\n    this.color = color;\n    this.animations = animations ?? [];\n    this.delay = delay ?? 0;\n\n    this.sprites = [];\n    this.enabled = true;\n\n    this.time = 0;\n    this.begin = null;\n  }\n\n  setColor(color) {\n    for (const sprite of this.sprites) {\n      sprite.setColor(color);\n    }\n  }\n\n  update(timestamp) {\n    let updated = false;\n\n    for (const animation of this.animations) {\n      switch (animation) {\n      case SINE_ANIMATION:\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.y = sprite.baseY + Math.sin(i + timestamp / 200) * 10;\n        }\n        updated = true;\n        break;\n      case SHAKE_ANIMATION:\n        this.time++;\n\n        if (this.time === 7) {\n          this.time = 0;\n          for (let i = 0; i < this.sprites.length; i++) {\n            const sprite = this.sprites[i];\n            sprite.x = sprite.baseX + Math.random() * 5;\n            sprite.y = sprite.baseY + Math.random() * 5;\n          }\n        }\n        updated = true;\n        break;\n      case TYPING_ANIMATION:\n        if (!this.begin) {\n          this.begin = timestamp;\n        }\n        for (let i = 0; i < this.sprites.length; i++) {\n          const sprite = this.sprites[i];\n          sprite.hidden = (timestamp - this.begin - this.delay) / 150 < i;\n        }\n        updated = true;\n        break;\n      }\n    }\n\n    return updated;\n  }\n}\n","import SpriteBatch from './SpriteBatch';\nimport TextSegment from './TextSegment';\n\nexport default class extends SpriteBatch {\n  #game;\n  #segments;\n\n  constructor(game) {\n    super(game, false, 'font');\n\n    this.#game = game;\n    this.#segments = [];\n  }\n\n  write(text, x, y, s, color = ACTIVE_COLOR, animations = null, delay = null) {\n    if (x === CENTER) {\n      x = Math.floor(this.#game.renderer.w / 2 - (Math.max(...text.split('\\n').map(s => s.length)) * s) / 2);\n    }\n\n    if (y === CENTER) {\n      y = Math.floor(this.#game.renderer.h / 2 - (text.split('\\n').length * s) / 2);\n    }\n\n    const segment = new TextSegment(text, x, y, s, color, animations, delay);\n\n    let currX = x;\n    let currY = y;\n\n    for (const c of text) {\n      let type;\n\n      if (c === '\\n') {\n        currY += s;\n        currX = x;\n\n        continue;\n      }\n\n      if (c >= 'A' && c <= 'Z') {\n        type = c.charCodeAt(0) - 'A'.charCodeAt(0);\n      } else if (c >= '0' && c <= '9') {\n        type = 26 + c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if (c === '?') {\n        type = 36;\n      } else if (c === '!') {\n        type = 37;\n      } else if (c === ',') {\n        type = 38;\n      } else if (c === '.') {\n        type = 39;\n      } else if (c === \"'\") {\n        type = 40;\n      }\n\n      if (type != null) {\n        const sprite = this.add(currX, currY, s, type, color);\n        sprite.baseX = currX;\n        sprite.baseY = currY;\n        segment.sprites.push(sprite);\n      }\n\n      currX += s;\n    }\n\n    this.#segments.push(segment);\n    this.changed();\n\n    return segment;\n  }\n\n  clear() {\n    for (const segment of this.#segments) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = [];\n    this.changed();\n  }\n\n  update(timestamp) {\n    for (const segment of this.#segments.filter(segment => !segment.enabled)) {\n      for (const sprite of segment.sprites) {\n        sprite.enabled = false;\n      }\n    }\n\n    this.#segments = this.#segments.filter(segment => segment.enabled);\n\n    for (const segment of this.#segments) {\n      if (segment.update(timestamp)) {\n        this.changed();\n      }\n    }\n\n    super.update();\n  }\n}\n","import SpriteBatch from './SpriteBatch';\n\nexport default class extends SpriteBatch {\n  #game;\n\n  constructor(game) {\n    super(game, false, null);\n\n    this.#game = game;\n  }\n\n  emit(x, y, colorful = false, count = 128, t = 1000) {\n    for (let i = 0; i < count; i++) {\n      const particle = this.add(x, y, 5);\n\n      if (colorful) {\n        particle.r = Math.random();\n        particle.g = Math.random();\n        particle.b = Math.random();\n      } else {\n        const color = 0.5 + Math.random() * 0.5;\n        particle.r = color;\n        particle.g = color;\n        particle.b = color;\n      }\n\n      const angle = Math.random() * Math.PI * 2;\n      particle.dx = Math.cos(angle) * Math.random() * 5;\n      particle.dy = Math.sin(angle) * Math.random() * 5;\n      particle.t = t;\n    }\n\n    this.changed();\n  }\n\n  clear() {\n    for (const particle of this.sprites) {\n      particle.enabled = false;\n    }\n\n    this.changed();\n  }\n\n  update(timestamp) {\n    for (const particle of this.sprites) {\n      particle.x += particle.dx;\n      particle.y += particle.dy;\n\n      if (!particle.begin) {\n        particle.begin = timestamp;\n      }\n\n      if (particle.begin + particle.t <= timestamp) {\n        particle.enabled = false;\n      } else {\n        particle.a = 1.0 - (timestamp - particle.begin) / particle.t;\n      }\n    }\n\n    this.changed();\n\n    super.update();\n  }\n}\n","import SpriteBatch from './SpriteBatch';\n\nexport default class extends SpriteBatch {\n  #game;\n  #spacingX;\n  #spacingY;\n  #onclick;\n  #active;\n  #pressed;\n\n  constructor(game, x, y, w, h, s, spacingX, spacingY, onclick, color = PRIMARY_COLOR, type = 0) {\n    super(game, false, 'cells');\n\n    this.#game = game;\n\n    if (x === CENTER) {\n      x = game.renderer.w / 2 - w * (s + (spacingX ?? 0) * (w - 1) / w) / 2;\n    }\n\n    if (y === CENTER) {\n      y = game.renderer.h / 2 - h * (s + (spacingY ?? 0) * (h - 1) / h) / 2;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h\n    this.s = s;\n    this.#spacingX = spacingX ?? 0;\n    this.#spacingY = spacingY ?? 0;\n    this.#onclick = onclick;\n    this.color = color;\n\n    for (let gridY = 0; gridY < h; gridY++) {\n      for (let gridX = 0; gridX < w; gridX++) {\n        const cell = this.add(x + gridX * this.#fullW, y + gridY * this.#fullH, s, type, color);\n        cell.setColor(color);\n        cell.grid = this;\n        cell.gridX = gridX;\n        cell.gridY = gridY;\n      }\n    }\n  }\n\n  update(pressHandled = false) {\n    if (!this.disabled) {\n      if (this.#game.input.moved) {\n        let newActive = this.#cellAtPosition(this.#game.input.x, this.#game.input.y);\n        if (newActive?.inactive) {\n          newActive = null;\n        }\n\n        if (newActive !== this.#active && !this.#pressed) {\n          if (this.#onclick) {\n            if (this.#game.input.mouse) {\n              if (!this.#active?.inactive) {\n                this.#active?.setColor(this.#active?.baseColor || this.color);\n              }\n\n              newActive?.setColor(HIGHLIGHT_COLOR);\n              this.changed();\n            }\n          }\n        }\n\n        this.#active = newActive;\n      }\n\n      if (this.#game.input.press && !pressHandled) {\n        this.#pressed = this.#active;\n\n        if (this.#onclick) {\n          if (this.#game.input.mouse) {\n            this.#pressed?.setColor(ACTIVE_COLOR);\n            this.changed();\n          }\n        }\n      }\n\n      if (this.#game.input.click() && !pressHandled) {\n        if (this.#onclick) {\n          this.#pressed?.setColor(this.#pressed?.baseColor || this.color);\n          if (this.#active && this.#active === this.#pressed) {\n            this.#game.input.clickRead = true;\n            this.#onclick(this.#pressed);\n          }\n          this.changed();\n        }\n\n        this.#pressed = null;\n      }\n    }\n\n    super.update();\n\n    return this.#active != null;\n  }\n\n  cellAt(x, y) {\n    if (x >= 0 && x < this.w && y >= 0 && y < this.h) {\n      return this.sprites[this.w * y + x];\n    }\n  }\n\n  #cellAtPosition(x, y) {\n    const index = this.#indexAtPosition(x, y);\n\n    if (index) {\n      return this.cellAt(index[0], index[1]);\n    }\n  }\n\n  #indexAtPosition(x, y) {\n    const relX = x - this.x;\n    const relY = y - this.y;\n    const indexX = Math.trunc(relX / this.#fullW);\n    const indexY = Math.trunc(relY / this.#fullH);\n\n    if (relX >= 0 && relY >= 0 &&\n        relX - indexX * this.#fullW < this.s &&\n        relY - indexY * this.#fullH < this.s &&\n        indexX >= 0 && indexX < this.w && indexY >= 0 && indexY < this.h) {\n      return [indexX, indexY];\n    }\n  }\n\n  get #fullW() {\n    return this.s + this.#spacingX;\n  }\n\n  get #fullH() {\n    return this.s + this.#spacingY;\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\nimport Select from './Select';\n\nexport default class {\n  #minigameClass;\n  #game;\n  #minigame;\n  #buttons;\n  #spriteBatch;\n  #cat;\n  #leftPaw;\n  #rightPaw;\n  #catNameText;\n  #catTextText;\n  #exitButton;\n  #exit;\n  #catMet;\n  #started;\n  #won;\n  #lost;\n  #lostText;\n  #lostTextInfo;\n  #timer;\n\n  constructor(minigameClass) {\n    this.#minigameClass = minigameClass;\n  }\n\n  init(game) {\n    this.#game = game;\n\n    this.#buttons = new Grid(game, game.renderer.w - 74, 10, 1, 1, 64, 0, 0, (button) => this.#buttonClick(button));\n\n    this.#exitButton = this.#buttons.sprites[0];\n\n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(game.text, 'X', 32, ACTIVE_COLOR);\n\n    this.#spriteBatch = new SpriteBatch(game);\n\n    const [_title, color, _sx, _type, catName, catText, _response] = this.#minigameClass.meta;\n\n    this.#cat = this.#spriteBatch.add(CENTER, 100, 64, 1, color);\n    this.#leftPaw = this.#spriteBatch.add(this.#cat.x - 12, this.#cat.y + 60, 24, 0, color);\n    this.#rightPaw = this.#spriteBatch.add(this.#cat.x + 46, this.#cat.y + 60, 24, 0, color);\n\n    this.#catNameText = game.text.write(catName, CENTER, 10, 24, color, [SINE_ANIMATION]);\n    this.#catTextText = game.text.write(catText, CENTER, this.#cat.y + 100, 32, color, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n  }\n\n  update() {\n    const [title, _color, _sx, _type, _catName, _catText, response] = this.#minigameClass.meta;\n\n    if (this.#exit) {\n      (this.#timer || {}).disabled = true;\n      return new Select(this.#game);\n    }\n\n    this.#buttons.update();\n\n    if (!this.#catMet && this.#game.input.click()) {\n      this.#game.input.clickRead = true;\n      this.#cat.setColor(BLACKCAT_COLOR);\n      this.#leftPaw.setColor(BLACKCAT_COLOR);\n      this.#rightPaw.setColor(BLACKCAT_COLOR);\n      this.#spriteBatch.changed();\n      this.#catNameText.enabled = false;\n      this.#catTextText.enabled = false;\n      this.#catNameText = this.#game.text.write('VICKI', CENTER, 10, 24, BLACKCAT_COLOR, [SINE_ANIMATION]);\n      this.#catTextText = this.#game.text.write(response, CENTER, this.#cat.y + 100, 32, BLACKCAT_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n      this.#catMet = true;\n    } else if (!this.#started && this.#game.input.click()) {\n      this.#game.input.clickRead = true;\n      this.#cat.enabled = false;\n      this.#leftPaw.enabled = false;\n      this.#rightPaw.enabled = false;\n      this.#catNameText.enabled = false;\n      this.#catTextText.enabled = false;\n      this.#spriteBatch.changed();\n      this.#setup();\n      this.#started = true;\n    }\n\n    if (this.#started && !this.#won && !this.#lost) {\n      this.#minigame.update();\n    }\n\n    this.#spriteBatch.update();\n\n    if (this.#won && this.#game.input.click()) {\n      this.#exit = true;\n    }\n\n    if (this.#lost && this.#game.input.click()) {\n      this.#setup();\n    }\n  }\n\n  draw() {\n    if (this.#started && !this.#exit) {\n      this.#minigame.draw();\n    }\n\n    this.#spriteBatch.draw();\n    this.#buttons.draw();\n  }\n\n  #setup() {\n    this.#won = false;\n    this.#lost = false;\n\n    (this.#lostText || {}).enabled = false;\n    (this.#lostTextInfo || {}).enabled = false;\n\n    this.#game.text.clear();\n\n    this.#minigame = new this.#minigameClass(this.#game, () => this.#win(), () => this.#lose());\n\n    this.#game.text.write(this.#minigameClass.meta[0], CENTER, 10, 48, INACTIVE_COLOR, [SINE_ANIMATION]);\n\n    this.#exitButton = this.#buttons.sprites[0];\n    this.#exitButton.write(this.#game.text, 'X', 32, ACTIVE_COLOR);\n  }\n\n  #win() {\n    this.#won = true;\n    this.#game.minigamesWon.add(this.#minigameClass);\n\n    const texts = ['CONGRATS!!', 'WELL DONE!!', 'GOOD JOB!!', 'PAWSOME!!', 'AMEOWZING!!'];\n    const text = this.#game.text.write(texts[Math.floor(Math.random() * texts.length)], CENTER, CENTER, 48, HIGHLIGHT_COLOR, [SINE_ANIMATION]);\n    this.#game.text.write('GO HELP THE OTHER CATS!', CENTER, text.y + 75, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 1200);\n\n    this.#timer = this.#game.scheduleTimer(400, () => this.#game.particles.emit(Math.random() * this.#game.renderer.w, Math.random() * this.#game.renderer.h, true, 256, 1000), true);\n  }\n\n  #lose() {\n    this.#lost = true;\n\n    const texts = ['OOPS!!', 'CAT ASTROPHE!!', 'OH WELL!!'];\n    this.#lostText = this.#game.text.write(texts[Math.floor(Math.random() * texts.length)], CENTER, CENTER, 48, HIGHLIGHT_COLOR, [SINE_ANIMATION]);\n    this.#lostTextInfo = this.#game.text.write(\"LET'S TRY AGAIN!\", CENTER, this.#lostText.y + 75, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 1200);\n  }\n\n  #buttonClick(button) {\n    if (button === this.#exitButton) {\n      this.#exit = true;\n    }\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #w;\n  #h;\n  #mines;\n  #fontSize;\n  #grid;\n  #buttons;\n  #digButton;\n  #flagButton;\n  #mode;\n  #started;\n\n  static meta = [\n    'MEOWSWEEPER',\n    TABBYCAT_COLOR,\n    73,\n    2,\n    'QUEEN KARA III',\n    \"YOU, NEW CAT!!\\nI NEED YOU TO SCRATCH\\nMY BACK IMMEDIATELY\\nBUT ONLY WHERE I\\nLIKE IT!\\n\\n\\nSINCE YOU'RE NEW I WILL\\nTELL YOU HOW MANY\\nDANGER ZONES ARE\\nAROUND WHERE YOU'RE\\nSCRATCHING!\",\n    'OOH, THE QUEEN HERSELF!!\\n\\n\\nI NEED TO MAKE A GOOD\\nFIRST IMPRESSION!'\n  ];\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#w = game.renderer.horizontal ? 20 : 10;\n    this.#h = game.renderer.horizontal ? 10 : 20;\n    this.#mines = 30;\n\n    this.#fontSize = 26;\n\n    const spacing = 4;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / this.#w - (spacing * (this.#w - 1) / this.#w), (game.renderer.h - 110) / this.#h - (spacing * (this.#h - 1) / this.#h)));\n\n    this.#grid = new Grid(game, CENTER, 100, this.#w, this.#h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#buttons = new Grid(game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#digButton = this.#buttons.sprites[0];\n    this.#digButton.write(game.text, 'O', 30, ACTIVE_COLOR);\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(game.text, 'X', 30, ACTIVE_COLOR);\n\n    this.#setMode(DIG);\n  }\n\n  update() {\n    if (this.#game.input.left()) {\n      this.#setMode(DIG);\n    }\n\n    if (this.#game.input.right()) {\n      this.#setMode(FLAG);\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    switch (this.#mode) {\n    case DIG:\n      if (!this.#started) {\n        this.#start(cell);\n      }\n\n      this.#open(cell.gridX, cell.gridY);\n\n      if (cell.mine) {\n        this.#grid.disabled = true;\n\n        this.#game.scheduleTimer(2000, () => this.#onlose());\n      }\n\n      break;\n    case FLAG:\n      if (cell.flagged) {\n        cell.flagged = false;\n        cell.content.enabled = false;\n        this.#game.text.changed();\n      } else {\n        cell.flagged = true;\n        cell.write(this.#game.text, 'X', this.#fontSize, HIGHLIGHT_COLOR);\n      }\n      break;\n    }\n  }\n\n  #start(cell) {\n    const available = this.#grid.sprites.filter(availableCell => availableCell !== cell && (Math.abs(availableCell.gridX - cell.gridX) > 1 || Math.abs(availableCell.gridY - cell.gridY) > 1));\n\n    for (let i = 0; i < this.#mines; i++) {\n      const index = Math.floor(Math.random() * available.length);\n      const mineCell = available[index];\n      available.splice(index, 1);\n\n      mineCell.mine = true;\n    }\n\n    for (let y = 0; y < this.#grid.h; y++) {\n      for (let x = 0; x < this.#grid.w; x++) {\n        let cell = this.#grid.cellAt(x, y);\n        if (!cell.mine) {\n          cell.mines = 0;\n          for (let dy = -1; dy <= 1; dy++) {\n            for (let dx = -1; dx <= 1; dx++) {\n              if (this.#grid.cellAt(x + dx, y + dy)?.mine) {\n                cell.mines++;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.#started = true;\n  }\n\n  #open(x, y) {\n    this.#game.shake(200);\n    const cell = this.#grid.cellAt(x, y);\n\n    if (cell?.flagged) {\n      cell.flagged = false;\n      cell.content.enabled = false;\n    }\n\n    if (cell?.enabled && !cell?.opened) {\n      cell.opened = true;\n\n      cell.activate(false);\n\n      this.#game.particles.emit(cell.x + cell.grid.s / 2, cell.y + cell.grid.s / 2);\n\n      if (cell.mines === 0) {\n        cell.hidden = true;\n\n        this.#game.scheduleTimer(100, () => this.#open(x, y - 1));\n        this.#game.scheduleTimer(100, () => this.#open(x, y + 1));\n        this.#game.scheduleTimer(100, () => this.#open(x - 1, y));\n        this.#game.scheduleTimer(100, () => this.#open(x + 1, y));\n      } else {\n        if (cell.mine) {\n          for (const mineCell of this.#grid.sprites.filter(cell => cell.mine)) {\n            mineCell.activate(false);\n            mineCell.write(this.#game.text, 'X', this.#fontSize, INACTIVE10_COLOR);\n          }\n        } else {\n          cell.write(this.#game.text, cell.mines, this.#fontSize, INACTIVE1_COLOR + (cell.mines - 1));\n        }\n      }\n\n      this.#grid.changed();\n    }\n\n    if (this.#grid.sprites.filter(cell => !cell.opened).every(cell => cell.mine)) {\n      this.#onwin();\n    }\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode(FLAG);\n    } else if (button === this.#digButton) {\n      this.#setMode(DIG);\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#digButton.activate(this.#mode !== DIG);\n    this.#flagButton.activate(this.#mode !== FLAG);\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #onlose;\n  #grid;\n  #spriteBatch;\n  #timer;\n  #over;\n\n  static meta = [\n    'PAW PAW TOE',\n    ORANGECAT_COLOR,\n    73,\n    2,\n    '     ORANGE CAT,\\nTHE USELESS BOYFRIEND',\n    \"BET YOU CAN'T BEAT ME\\nIN PAW PAW TOE!\\n\\n\\nI'M THE SMARTEST\\nORANGE CAT EVER!!!\",\n    \"WELL, THAT'S\\nNOT SAYING MUCH...\\n\\n\\nLET'S SEE!\"\n  ];\n\n  constructor(game, onwin, onlose) {\n    this.#game = game;\n    this.#onwin = onwin;\n    this.#onlose = onlose;\n\n    this.#grid = new Grid(game, CENTER, CENTER, 3, 3, 96, 20, 20, (cell) => this.#click(cell));\n    this.#spriteBatch = new SpriteBatch(game);\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (!cell.symbol) {\n      this.#mark(cell, X_SYMBOL);\n\n      this.#grid.disabled = true;\n\n      this.#timer = this.#game.scheduleTimer(1000, () => {\n        if (!this.#over) {\n          const available = this.#grid.sprites.filter(sprite => !sprite.symbol);\n\n          if (available.length > 0) {\n            this.#mark(available[Math.floor(Math.random() * available.length)], O_SYMBOL);\n\n            this.#grid.disabled = false;\n            this.#grid.changed();\n          }\n        }\n      });\n    }\n  }\n\n  #mark(cell, symbol) {\n    if (!this.#over) {\n      this.#game.shake(200);\n\n      cell.symbol = symbol;\n\n      cell.activate(false);\n\n      cell.draw(this.#spriteBatch, 64, 0, symbol === X_SYMBOL ? BLACKCAT_COLOR : ORANGECAT_COLOR);\n\n      this.#checkGrid();\n    }\n  }\n\n  #checkGrid() {\n    for (let y = 0; y < 3; y++) {\n      const symbolCounts = new Map();\n\n      for (let x = 0; x < 3; x++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get(X_SYMBOL) === 3) {\n        return this.#win(X_SYMBOL);\n      }\n\n      if (symbolCounts.get(O_SYMBOL) === 3) {\n        return this.#win(O_SYMBOL);\n      }\n    }\n\n    for (let x = 0; x < 3; x++) {\n      const symbolCounts = new Map();\n\n      for (let y = 0; y < 3; y++) {\n        const cell = this.#grid.cellAt(x, y);\n\n        symbolCounts.set(cell.symbol, (symbolCounts.get(cell.symbol) || 0) + 1);\n      }\n\n      if (symbolCounts.get(X_SYMBOL) === 3) {\n        return this.#win(X_SYMBOL);\n      }\n\n      if (symbolCounts.get(O_SYMBOL) === 3) {\n        return this.#win(O_SYMBOL);\n      }\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === X_SYMBOL && this.#grid.cellAt(1, 1).symbol === X_SYMBOL && this.#grid.cellAt(2, 2).symbol === X_SYMBOL) {\n      return this.#win(X_SYMBOL);\n    }\n\n    if (this.#grid.cellAt(0, 0).symbol === O_SYMBOL && this.#grid.cellAt(1, 1).symbol === O_SYMBOL && this.#grid.cellAt(2, 2).symbol === O_SYMBOL) {\n      return this.#win(O_SYMBOL);\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === X_SYMBOL && this.#grid.cellAt(1, 1).symbol === X_SYMBOL && this.#grid.cellAt(0, 2).symbol === X_SYMBOL) {\n      return this.#win(X_SYMBOL);\n    }\n\n    if (this.#grid.cellAt(2, 0).symbol === O_SYMBOL && this.#grid.cellAt(1, 1).symbol === O_SYMBOL && this.#grid.cellAt(0, 2).symbol === O_SYMBOL) {\n      return this.#win(O_SYMBOL);\n    }\n  }\n\n  #win(symbol) {\n    this.#over = true;\n    this.#grid.disabled = true;\n    (this.#timer || {}).disabled = true;\n\n    if (symbol === X_SYMBOL) {\n      this.#onwin();\n    } else if (symbol === O_SYMBOL) {\n      this.#grid.disabled = true;\n      this.#game.scheduleTimer(2000, () => this.#onlose());\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #spriteBatch;\n  #grids;\n  #cellSize;\n  #buttons;\n  #activeButtons;\n  #digit;\n\n  static meta = [\n    'SUDOCAT',\n    BLACKCAT_COLOR,\n    73,\n    4,\n    'KUMBA',\n    \"I NEED ALL MY TREATS AND\\nTOYS NEATLY ORGANISED!!\\n\\n\\nTHERE SHOULD BE ONLY ONE\\nTYPE IN EACH ROW, EACH\\nCOLUMN AND IN EACH BOX!!\",\n    'KITTY MUST HAVE OCD...'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#spriteBatch = new SpriteBatch(game, true);\n\n    this.#grids = [];\n\n    const gridSpacing = 16;\n\n    const gridSize = Math.floor(Math.min((game.renderer.w - 20) / 3 - (gridSpacing * (3 - 1) / 3), (game.renderer.h - 200) / 3 - (gridSpacing * (3 - 1) / 3)));\n\n    const spacing = 5;\n\n    this.#cellSize = Math.floor(Math.min((gridSize - 0) / 3 - (spacing * (3 - 1) / 3), (gridSize - 0) / 3 - (spacing * (3 - 1) / 3)));\n\n    const startX = game.renderer.w / 2 - 3 * (gridSize + gridSpacing * (3 - 1) / 3) / 2;\n\n    for (let y = 0; y < 3; y++) {\n      for (let x = 0; x < 3; x++) {\n        const grid = new Grid(game, startX + x * (gridSize + gridSpacing), 100 + y * (gridSize + gridSpacing), 3, 3, this.#cellSize, spacing, spacing, (cell) => this.#click(cell));\n        this.#grids.push(grid);\n      }\n    }\n\n    let buttonSize = 64;\n    let buttonSpacing = 10;\n\n    if (game.renderer.h - (100 + 3 * (gridSize + gridSpacing) + 20) >= 256) {\n      buttonSize = Math.min(Math.floor(Math.min((game.renderer.w - 20) / 3 - (buttonSpacing * (3 - 1) / 3), (game.renderer.h - (100 + 3 * (gridSize + buttonSpacing) + 20)) / 4 - (buttonSpacing * (4 - 1) / 4))), 128);\n\n      this.#buttons = new Grid(game, CENTER, 100 + 3 * (gridSize + gridSpacing), 3, 4, buttonSize, buttonSpacing, buttonSpacing, (button) => this.#buttonClick(button));\n      this.#buttons.cellAt(0, 3).activate(false);\n      this.#buttons.cellAt(0, 3).hidden = true;\n\n      this.#buttons.cellAt(2, 3).activate(false);\n      this.#buttons.cellAt(2, 3).hidden = true;\n    } else {\n      this.#buttons = new Grid(game, CENTER, 100 + 3 * (gridSize + gridSpacing), 10, 1, buttonSize, buttonSpacing, 0, (button) => this.#buttonClick(button));\n    }\n\n    this.#activeButtons = this.#buttons.sprites.filter(button => !button.inactive);\n\n    for (let digit = 1; digit <= 10; digit++) {\n      const button = this.#activeButtons[digit - 1];\n      if (digit === 10) {\n        button.write(game.text, 'X', buttonSize * 2 / 3, ACTIVE_COLOR);\n      } else {\n        button.draw(this.#spriteBatch, buttonSize * 2 / 3, digit + 5);\n      }\n      button.digit = digit <= 9 ? digit : null;\n    }\n\n    this.#setGrid();\n    this.#selectDigit(1);\n  }\n\n  update() {\n    for (let digit = 1; digit <= 9; digit++) {\n      if (this.#game.input.keyPresses[`Digit${digit}`]) {\n        this.#selectDigit(digit);\n      }\n    }\n\n    if (this.#game.input.left()) {\n      if (this.#digit > 1) {\n        this.#selectDigit(this.#digit - 1);\n      }\n    }\n\n    if (this.#game.input.right()) {\n      if (this.#digit < 9) {\n        this.#selectDigit(this.#digit + 1);\n      }\n    }\n\n    if (this.#game.input.cancel()) {\n      this.#selectDigit(null);\n    }\n\n    this.#spriteBatch.update();\n\n    for (const grid of this.#grids) {\n      grid.update();\n    }\n\n    this.#buttons.update();\n  }\n\n  draw() {\n    for (const grid of this.#grids) {\n      grid.draw();\n    }\n\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #gridAt(x, y) {\n    return this.#grids[Math.floor(y / 3) * 3 + Math.floor(x / 3)];\n  }\n\n  #cellAt(x, y) {\n    return this.#gridAt(x, y).cellAt(x % 3, y % 3);\n  }\n\n  #setGrid() {\n    const start = [\n      6, 8, 0, 1, 0, 0, 0, 9, 0,\n      0, 3, 4, 5, 0, 8, 0, 2, 0,\n      2, 1, 0, 0, 6, 0, 3, 0, 0,\n      5, 0, 0, 4, 0, 7, 0, 0, 9,\n      3, 4, 2, 9, 0, 0, 0, 0, 6,\n      0, 0, 7, 0, 8, 0, 5, 0, 0,\n      9, 2, 0, 8, 0, 0, 0, 5, 3,\n      0, 0, 3, 2, 0, 0, 9, 1, 8,\n      0, 0, 0, 3, 0, 0, 0, 6, 7,\n    ];\n\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const digit = start[y * 9 + x];\n        if (digit !== 0) {\n          const cell = this.#cellAt(x, y);\n          cell.activate(false);\n          cell.digit = digit;\n          cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, digit + 5);\n        }\n      }\n    }\n  }\n\n  #click(cell) {\n    cell.digit = this.#digit;\n    (cell.content || {}).enabled = false;\n\n    if (this.#digit) {\n      cell.draw(this.#spriteBatch, this.#cellSize * 2 / 3, this.#digit + 5);\n    }\n\n    if (this.#checkCells()) {\n      this.#game.shake(200);\n      this.#onwin();\n    }\n\n    this.#game.text.changed();\n    this.#spriteBatch.changed();\n  }\n\n  #checkCells() {\n    let valid = true;\n\n    this.#resetCells();\n\n    for (let i = 0; i < 9; i++) {\n      valid &= this.#checkRow(i);\n      valid &= this.#checkColumn(i);\n      valid &= this.#checkGrid(i);\n    }\n\n    return valid;\n  }\n\n  #resetCells() {\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        const cell = this.#cellAt(x, y);\n        if (!cell.inactive) {\n          cell.setBaseColor(PRIMARY_COLOR);\n        }\n      }\n    }\n\n    for (let i = 0; i < 9; i++) {\n      this.#grids[i].changed();\n    }\n  }\n\n  #checkRow(x) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let y = 0; y < 9; y++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let y = 0; y < 9; y++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor(ACTIVE_COLOR);\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkColumn(y) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    for (let x = 0; x < 9; x++) {\n      const cell = this.#cellAt(x, y);\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let x = 0; x < 9; x++) {\n          const cell = this.#cellAt(x, y);\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor(ACTIVE_COLOR);\n            this.#gridAt(x, y).changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #checkGrid(index) {\n    let valid = true;\n    const digitCounts = new Map();\n\n    const grid = this.#grids[index];\n\n    for (let i = 0; i < 9; i++) {\n      const cell = grid.sprites[i];\n      digitCounts.set(cell.digit, (digitCounts.get(cell.digit) || 0) + 1);\n    }\n\n    for (const [digit, digitCount] of digitCounts.entries()) {\n      if (digit == null) {\n        valid = false;\n      } else if (digitCount > 1) {\n        valid = false;\n\n        for (let i = 0; i < 9; i++) {\n          const cell = grid.sprites[i];\n          if (!cell.inactive && cell.digit == digit) {\n            cell.setBaseColor(ACTIVE_COLOR);\n            grid.changed();\n          }\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#selectDigit(button.digit);\n    }\n  }\n\n  #selectDigit(digit) {\n    this.#digit = digit;\n\n    for (const button of this.#activeButtons) {\n      button.activate(true);\n    }\n\n    this.#activeButtons[digit != null ? digit - 1 : 9].activate(false);\n\n    this.#buttons.changed();\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #grid;\n  #spriteBatch;\n  #opened;\n  #showingA;\n  #showingB;\n  #timer;\n\n  static meta = [\n    'MEOWMORY',\n    SILVERCAT_COLOR,\n    8,\n    3,\n    'MOLLY',\n    \"THEY SAY I HAVE THE\\nMEMORY OF A GOLDFISH...\\n\\n\\nCAN YOU SHOW ME HOW\\nTO REMEMBER THINGS??\",\n    'SOMEONE SAID FISHIE?!\\n\\n\\nYUM!!!'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    const w = game.renderer.horizontal ? 6 : 5;\n    const h = game.renderer.horizontal ? 5 : 6;\n\n    const spacing = 16;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / w - (spacing * (w - 1) / w), (game.renderer.h - 110) / h - (spacing * (h - 1) / h)));\n\n    this.#grid = new Grid(game, CENTER, 100, w, h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    this.#spriteBatch = new SpriteBatch(game, true);\n\n    const available = this.#grid.sprites.slice();\n\n    for (let i = 0; i < (w * h) / 2; i++) {\n      const indexA = Math.floor(Math.random() * available.length);\n      const cellA = available[indexA];\n      available.splice(indexA, 1);\n\n      const indexB = Math.floor(Math.random() * available.length);\n      const cellB = available[indexB];\n      available.splice(indexB, 1);\n\n      cellA.secret = i;\n      cellB.secret = i;\n    }\n  }\n\n  update() {\n    this.#grid.update();\n    this.#spriteBatch.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #click(cell) {\n    if (!cell.open) {\n      if (this.#showingA && this.#showingB) {\n        this.#cancelShowing();\n      }\n\n      cell.open = true;\n      cell.draw(this.#spriteBatch, this.#grid.s * 2 / 3, cell.secret, cell.secret < 5 ? TABBYCAT_COLOR : null);\n      cell.setBaseColor(ACTIVE_COLOR);\n\n      if (this.#opened) {\n        if (cell.secret === this.#opened.secret) {\n          this.#game.shake(200);\n\n          cell.found = true;\n          cell.activate(false);\n\n          this.#opened.found = true;\n          this.#opened.activate(false);\n\n          if (this.#grid.sprites.every(cell => cell.found)) {\n            this.#onwin();\n          }\n        } else {\n          this.#showingA = this.#opened;\n          this.#showingB = cell;\n\n          this.#timer = this.#game.scheduleTimer(1000, () => this.#cancelShowing());\n        }\n\n        this.#opened = false;\n      } else {\n        this.#opened = cell;\n      }\n    }\n  }\n\n  #cancelShowing() {\n    (this.#timer || {}).disabled = true;\n\n    this.#showingA.open = false;\n    this.#showingA.content.enabled = false;\n    this.#showingA.setBaseColor(PRIMARY_COLOR);\n\n    this.#showingB.open = false;\n    this.#showingB.content.enabled = false;\n    this.#showingB.setBaseColor(PRIMARY_COLOR);\n\n    this.#grid.changed();\n    this.#game.text.changed();\n    this.#spriteBatch.changed();\n\n    this.#showingA = null;\n    this.#showingB = null;\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nexport default class {\n  #game;\n  #onwin;\n  #grids;\n  #selected;\n\n  static meta = [\n    'MEOWJONG',\n    SILVERCAT_COLOR,\n    73,\n    4,\n    'PABLO',\n    \"HOLA!! SOY PABLO!\\n\\n\\nLET'S PLAY MEOWJONG!\\nJUST MATCH THE SAME\\nTILES BUT ONLY WHEN\\nTHEY'RE FREE TO MOVE\\nLEFT OR RIGHT.\",\n    'OH, SI SENOR?!'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    const w = game.renderer.horizontal ? 12 : 8;\n    const h = game.renderer.horizontal ? 8 : 12;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / w, (game.renderer.h - 110) / h));\n    const offset = Math.ceil(s / 16);\n\n    this.#grids = [];\n\n    const baseGrid = new Grid(game, CENTER, 100, w, h, s, 0, 0, (cell) => this.#click(cell), INACTIVE3_COLOR);\n    baseGrid.spriteBatch = new SpriteBatch(game, true);\n\n    for (let [x, y] of [[0, 1], [1, 1], [0, 2], [0, 5], [0, 6], [1, 6], [10, 1], [11, 1], [11, 2], [11, 5], [10, 6], [11, 6]]) {\n      if (!game.renderer.horizontal) {\n        let i = x;\n        x = y;\n        y = i;\n      }\n\n      baseGrid.cellAt(x, y).activate(false);\n      baseGrid.cellAt(x, y).hidden = true;\n    }\n\n    this.#grids.push(baseGrid);\n\n    const gridA = new Grid(game, baseGrid.x + ((game.renderer.horizontal ? 3 : 1) * s - offset), baseGrid.y + ((game.renderer.horizontal ? 1 : 3) * s - offset), 6, 6, s, 0, 0, (cell) => this.#click(cell), INACTIVE4_COLOR);\n    gridA.spriteBatch = new SpriteBatch(game, true);\n\n    const gridB = new Grid(game, gridA.x + (s - offset), gridA.y + (s - offset), 4, 4, s, 0, 0, (cell) => this.#click(cell), INACTIVE5_COLOR);\n    gridB.spriteBatch = new SpriteBatch(game, true);\n\n    const gridC = new Grid(game, gridB.x + (s - offset), gridB.y + (s - offset), 2, 2, s, 0, 0, (cell) => this.#click(cell), INACTIVE6_COLOR);\n    gridC.spriteBatch = new SpriteBatch(game, true);\n\n    this.#grids.push(gridA);\n    this.#grids.push(gridB);\n    this.#grids.push(gridC);\n\n    const available = [];\n\n    for (let type = 0; type < 15; type++) {\n      for (let count = 0; count < 4; count++) {\n        if (type < 5) {\n          for (let color = BLACKCAT_COLOR; color <= SILVERCAT_COLOR; color++) {\n            available.push([type, color]);\n          }\n        } else {\n          available.push([type, null]);\n        }\n      }\n    }\n\n    for (let grid of this.#grids) {\n      for (let cell of grid.sprites) {\n        if (!cell.inactive) {\n          const index = Math.floor(Math.random() * available.length);\n          const [type, color] = available[index];\n          available.splice(index, 1);\n\n          cell.symbol = `${type}_${color}`;\n          cell.draw(grid.spriteBatch, s * 2 / 3, type, color);\n        }\n      }\n    }\n  }\n\n  update() {\n    let pressHandled = false;\n    for (let i = this.#grids.length - 1; i >= 0; i--) {\n      pressHandled = this.#grids[i].update(pressHandled);\n      this.#grids[i].spriteBatch.update();\n    }\n  }\n\n  draw() {\n    for (const grid of this.#grids) {\n      grid.draw();\n      grid.spriteBatch.draw();\n    }\n  }\n\n  #click(cell) {\n    const leftCell = cell.grid.cellAt(cell.gridX - 1, cell.gridY);\n    const rightCell = cell.grid.cellAt(cell.gridX + 1, cell.gridY);\n    const freeCell =!leftCell || leftCell.inactive || !rightCell || rightCell.inactive\n\n    if (!this.#selected && freeCell) {\n      this.#selected = cell;\n      cell.setBaseColor(ACTIVE_COLOR);\n    } else if (cell === this.#selected) {\n      cell.setBaseColor(cell.grid.color);\n      this.#selected = null;\n    } else if (this.#selected && freeCell && this.#selected.symbol === cell.symbol) {\n      this.#game.particles.emit(this.#selected.x + this.#selected.grid.s / 2, this.#selected.y + this.#selected.grid.s / 2);\n      this.#game.particles.emit(cell.x + cell.grid.s / 2, cell.y + cell.grid.s / 2);\n      this.#game.shake(200);\n\n      this.#selected.activate(false);\n      this.#selected.hidden = true;\n      this.#selected.content.enabled = false;\n\n      cell.activate(false);\n      cell.hidden = true;\n      cell.content.enabled = false;\n\n      this.#selected = null;\n      this.#checkGrids();\n    }\n\n    for (const grid of this.#grids) {\n      grid.changed();\n      grid.spriteBatch.changed();\n    }\n  }\n\n  #checkGrids() {\n    for (let grid of this.#grids) {\n      for (let cell of grid.sprites) {\n        if (!cell.inactive) {\n          return;\n        }\n      }\n    }\n\n    this.#onwin();\n  }\n}\n","import Grid from '../Grid';\n\nexport default class {\n  #game;\n  #onwin;\n  #rows;\n  #columns;\n  #maxRows;\n  #maxColumns;\n  #w;\n  #h;\n  #grid;\n  #buttons;\n  #markButton;\n  #flagButton;\n  #mode;\n\n  static meta = [\n    'MEOWSTERPIECE',\n    WHITECAT_COLOR,\n    8,\n    3,\n    'CHA CHA',\n    'TODAY I DECIDED TO BE\\nAN ARTIST!!\\nHELP ME WITH THIS\\nPAINT BY NUMBER!\\n\\n\\nTHE CLUES WILL TELL YOU\\nHOW MANY BLOCKS SHOULD\\nBE PAINTED IN EACH ROW\\nAND IN EACH COLUMN!',\n    'SURE SURE, ARTIST TODAY,\\nSOMETHING ELSE TOMORROW!\\n\\n\\nTYPICAL KITTY...'\n  ];\n\n  constructor(game, onwin) {\n    this.#game = game;\n    this.#onwin = onwin;\n\n    this.#rows = [[0], [1, 1], [2, 2], [5], [2, 1, 2, 1], [5, 2], [3, 1], [6, 2], [1, 5, 1], [8], [2, 4]];\n    this.#columns = [[1, 2], [4, 1, 1], [3, 6], [7], [3, 6], [4, 4], [1, 3], [2], [3, 1], [2, 3]];\n\n    this.#maxRows = Math.max(...this.#rows.map(row => row.length));\n    this.#maxColumns = Math.max(...this.#columns.map(column => column.length));\n\n    this.#w = this.#columns.length + this.#maxRows;\n    this.#h = this.#rows.length + this.#maxColumns;\n\n    const spacing = 2;\n\n    const s = Math.floor(Math.min((game.renderer.w - 20) / this.#w - (spacing * (this.#w - 1) / this.#w), (game.renderer.h - 110) / this.#h - (spacing * (this.#h - 1) / this.#h)));\n\n    this.#grid = new Grid(game, CENTER, 100, this.#w, this.#h, s, spacing, spacing, (cell) => this.#click(cell));\n\n    for (let x = 0; x < this.#w; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (x < this.#maxRows || y < this.#maxColumns - this.#columns[x - this.#maxRows].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(game.text, this.#columns[x - this.#maxRows][y - (this.#maxColumns - this.#columns[x - this.#maxRows].length)], s * 2 / 3, HIGHLIGHT_COLOR);\n          cell.activate(false);\n        }\n      }\n    }\n\n    for (let y = 0; y < this.#w; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        const cell = this.#grid.cellAt(x, y);\n        if (y < this.#maxColumns || x < this.#maxRows - this.#rows[y - this.#maxColumns].length) {\n          cell.hidden = true;\n        } else {\n          cell.write(game.text, this.#rows[y - this.#maxColumns][x - (this.#maxRows - this.#rows[y - this.#maxColumns].length)], this.#grid.s * 2 / 3, HIGHLIGHT_COLOR);\n          cell.activate(false);\n        }\n      }\n    }\n\n    this.#buttons = new Grid(game, 10, 10, 2, 1, 64, 10, 0, (button) => this.#buttonClick(button));\n\n    this.#markButton = this.#buttons.sprites[0];\n    this.#markButton.write(game.text, 'O', 30, ACTIVE_COLOR);\n\n    this.#flagButton = this.#buttons.sprites[1];\n    this.#flagButton.write(game.text, 'X', 30, ACTIVE_COLOR);\n\n    this.#setMode(MARK);\n\n    this.#grid.changed();\n  }\n\n  update() {\n    if (this.#game.input.left()) {\n      this.#setMode(MARK);\n    }\n\n    if (this.#game.input.right()) {\n      this.#setMode(FLAG);\n    }\n\n    this.#grid.update();\n    this.#buttons.update();\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n  }\n\n  #click(cell) {\n    (cell.content || {}).enabled = false;\n\n    switch (this.#mode) {\n    case MARK:\n      if (cell.state !== MARKED) {\n        cell.state = MARKED;\n        cell.setBaseColor(ACTIVE_COLOR);\n      } else {\n        cell.state = null;\n        cell.setBaseColor(PRIMARY_COLOR);\n      }\n      break;\n\n    case FLAG:\n      cell.setBaseColor(PRIMARY_COLOR);\n      if (cell.state !== FLAGGED) {\n        cell.state = FLAGGED;\n        cell.write(this.#game.text, 'X', this.#grid.s * 2 / 3, HIGHLIGHT_COLOR);\n      } else {\n        cell.state = null;\n      }\n      break;\n    }\n\n    this.#game.text.changed();\n\n    this.#checkGrid();\n  }\n\n  #buttonClick(button) {\n    if (button === this.#flagButton) {\n      this.#setMode(FLAG);\n    } else if (button === this.#markButton) {\n      this.#setMode(MARK);\n    }\n  }\n\n  #setMode(mode) {\n    this.#mode = mode;\n\n    this.#markButton.activate(this.#mode !== MARK);\n    this.#flagButton.activate(this.#mode !== FLAG);\n\n    this.#buttons.changed();\n  }\n\n  #checkGrid() {\n    let gridCorrect = 0;\n\n    for (let x = this.#maxRows; x < this.#w; x++) {\n      for (let y = 0; y < this.#maxColumns; y++) {\n        this.#grid.cellAt(x, y).setBaseColor(INACTIVE_COLOR);\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let y = this.#maxColumns; y < this.#h; y++) {\n        if (this.#grid.cellAt(x, y).state === MARKED) {\n          current++;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== MARKED || y === this.#h - 1) {\n          if ((current > 0 || y === this.#h - 1) && index < this.#columns[x - this.#maxRows].length) {\n            if (current > this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor(HIGHLIGHT_COLOR);\n            } else if (current === this.#columns[x - this.#maxRows][index]) {\n              this.#grid.cellAt(x, index + (this.#maxColumns - this.#columns[x - this.#maxRows].length)).setBaseColor(INACTIVE1_COLOR);\n              correct++;\n            }\n\n            index++;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#columns[x - this.#maxRows].length) {\n        gridCorrect++;\n      }\n    }\n\n    for (let y = this.#maxColumns; y < this.#h; y++) {\n      for (let x = 0; x < this.#maxRows; x++) {\n        this.#grid.cellAt(x, y).setBaseColor(INACTIVE_COLOR);\n      }\n\n      let current = 0;\n      let index = 0;\n      let correct = 0;\n\n      for (let x = this.#maxRows; x < this.#w; x++) {\n        if (this.#grid.cellAt(x, y).state === MARKED) {\n          current++;\n        }\n\n        if (this.#grid.cellAt(x, y).state !== MARKED || x === this.#w - 1) {\n          if ((current > 0 || x === this.#w - 1) && index < this.#rows[y - this.#maxColumns].length) {\n            if (current > this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor(HIGHLIGHT_COLOR);\n            } else if (current === this.#rows[y - this.#maxColumns][index]) {\n              this.#grid.cellAt(index + (this.#maxRows - this.#rows[y - this.#maxColumns].length), y).setBaseColor(INACTIVE1_COLOR);\n              correct++;\n            }\n\n            index++;\n          }\n\n          current = 0;\n        }\n      }\n\n      if (correct === this.#rows[y - this.#maxColumns].length) {\n        gridCorrect++;\n      }\n    }\n\n    if (gridCorrect === (this.#w - this.#maxRows) + (this.#h - this.#maxColumns)) {\n      this.#game.shake(200);\n      this.#onwin();\n    }\n  }\n}\n","import Grid from '../Grid';\nimport SpriteBatch from '../SpriteBatch';\n\nimport Minigame from './Minigame';\nimport Meowsweeper from '../minigames/Meowsweeper';\nimport PawPawToe from '../minigames/PawPawToe';\nimport Sudocat from '../minigames/Sudocat';\nimport Meowmory from '../minigames/Meowmory';\nimport Meowjong from '../minigames/Meowjong';\nimport Meowsterpiece from '../minigames/Meowsterpiece';\n\nimport Matrix3 from '../Matrix3';\n\nexport default class {\n  #game;\n  #firstStart;\n  #grid;\n  #buttons;\n  #spriteBatch;\n  #minigameState;\n  #camY;\n  #startBlackCat;\n  #blackCat;\n  #blackCatArrived;\n  #titleShown;\n  #introOver;\n  #introText;\n\n  init(game) {\n    this.#game = game;\n    this.#firstStart = game.firstStart;\n    game.firstStart = false;\n\n    const won = game.minigamesWon.size === 6;\n\n    this.#grid = new Grid(game, CENTER, won ? 200 : 100, 6, 15, 128, 0, 0, null, '', 2);\n    this.#grid.disabled = true;\n\n    this.#buttons = new Grid(game, CENTER, won ? 232 : 132, 3, 7, 128, 64, 64, (button) => this.#buttonClick(button), '', 1);\n\n    if (this.#firstStart) {\n      this.#buttons.disabled = true;\n      this.#camY = -game.renderer.h;\n      this.#introText = game.text.write('THIS IS A TRUE STORY.\\n\\n\\nTHE CATS DEPICTED HERE\\nALL LIVE IN DUBLIN.', CENTER, CENTER, 32, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n      game.scheduleTimer(9000, () => {\n        this.#startBlackCat = true;\n        this.#introText.enabled = false;\n        game.text.changed();\n      });\n    } else if (!won) {\n      game.text.write('HELP THE OTHER CATS\\nIN THE BUILDING!!', CENTER, 10, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n    } else {\n      game.text.write('CONGRATULATIONS!!', CENTER, 10, 48, HIGHLIGHT_COLOR, [SINE_ANIMATION]);\n      game.text.write(\"YOU HELPED ALL THE CATS!\\nYOU'VE BEEN ACCEPTED BY\", CENTER, 75, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n      game.text.write('QUEEN KARA', CENTER, 150, 32, TABBYCAT_COLOR, [TYPING_ANIMATION, SINE_ANIMATION], 7000);\n      game.text.write('THANKS FOR PLAYING!!', CENTER, 200, 32, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 10000);\n\n      game.scheduleTimer(400, () => game.particles.emit(Math.random() * game.renderer.w, Math.random() * game.renderer.h, true, 256, 1000), true);\n    }\n\n    this.#spriteBatch = new SpriteBatch(game);\n\n    const minigameClasses = [PawPawToe, Meowmory, Meowjong, Sudocat, Meowsterpiece, Meowsweeper];\n\n    for (let i = 0; i < 21; i++) {\n      if (minigameClasses[i] && (i == 0 || !this.#firstStart)) {\n        let [_, color, sx, type, ..._rest] = minigameClasses[i].meta;\n        this.#buttons.sprites[i].minigameClass = minigameClasses[i];\n        let sy = 73;\n        if (game.minigamesWon.has(minigameClasses[i])) {\n          this.#buttons.sprites[i].activate(false);\n          sx = 39;\n          sy = 39;\n          type = 1;\n        }\n        this.#spriteBatch.add(this.#buttons.sprites[i].x + sx, this.#buttons.sprites[i].y + sy, 50, type, color);\n      } else {\n        this.#buttons.sprites[i].activate(false);\n      }\n    }\n\n    this.#blackCat = this.#spriteBatch.add(CENTER, game.renderer.h, 900, 1, VOID_COLOR);\n\n    for (let i = 0; i < this.#buttons.sprites.length; i++) {\n      const button = this.#buttons.sprites[i];\n      if (game.minigamesWon.has(button.minigameClass)) {\n        button.activate(false);\n      }\n    }\n  }\n\n  update() {\n    if (this.#firstStart) {\n      if (this.#camY < 0) {\n        this.#camY += 3;\n        if (this.#camY >= 0) {\n          this.#camY = 0;\n          this.#game.shake(200);\n        }\n        this.#game.renderer.projection = Matrix3.ortho(0, this.#game.renderer.w, this.#game.renderer.h + this.#camY, this.#camY);\n      } else if (this.#startBlackCat && !this.#blackCatArrived) {\n        this.#blackCat.y -= 3;\n        if (this.#blackCat.y <= this.#game.renderer.h / 2 - this.#blackCat.s / 2) {\n          this.#blackCatArrived = true;\n          this.#blackCat.y = this.#game.renderer.h / 2 - this.#blackCat.s / 2;\n          const title = this.#game.text.write('  A VOIDING\\nYOUR PROBLEMS', CENTER, CENTER, 48, null, [SINE_ANIMATION]);\n          this.#game.text.write('  A GAME BY\\nATTILA HORVATH', CENTER, title.y + 180, 36, WHITECAT_COLOR, [SHAKE_ANIMATION]);\n          this.#game.text.write('TAP TO BEGIN', CENTER, title.y + 280, 36, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 1200);\n          this.#game.shake(500);\n        }\n        this.#blackCat.x = this.#game.renderer.w / 2 - this.#blackCat.s / 2;\n        this.#spriteBatch.changed();\n      } else if (!this.#titleShown) {\n        if (this.#game.input.click()) {\n          this.#game.input.clickRead = true;\n          this.#game.text.clear();\n          const firstLine = this.#game.text.write('SO, I HEARD THIS\\nIS THE DOMAIN OF', CENTER,  CENTER, 28, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n          this.#game.text.write('QUEEN KARA', CENTER, firstLine.y + 60, 32, TABBYCAT_COLOR, [TYPING_ANIMATION, SINE_ANIMATION], 4000);\n          this.#game.text.write(\"I HOPE SHE'LL ACCEPT ME\\nIF I HELP THE OTHER CATS...\", CENTER, firstLine.y + 120, 28, INACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION], 6000);\n          this.#titleShown = true;\n        }\n      } else if (!this.#introOver) {\n        if (this.#game.input.click()) {\n          this.#game.input.clickRead = true;\n          this.#blackCat.hidden = true;\n          this.#spriteBatch.changed();\n          this.#game.text.clear();\n          this.#introOver = true;\n          this.#game.text.write(\"LET'S START WITH THIS\\nGENIUS ORANGE CAT HERE!\", CENTER, 10, 32, ACTIVE_COLOR, [TYPING_ANIMATION, SHAKE_ANIMATION]);\n        }\n      } else {\n        this.#buttons.disabled = false;\n      }\n    }\n\n    this.#grid.update();\n    this.#spriteBatch.update();\n\n    if (this.#minigameState) {\n      return this.#minigameState;\n    } else {\n      this.#buttons.update();\n    }\n  }\n\n  draw() {\n    this.#grid.draw();\n    this.#buttons.draw();\n    this.#spriteBatch.draw();\n  }\n\n  #buttonClick(button) {\n    if (button) {\n      this.#minigameState = new Minigame(button.minigameClass);\n    }\n  }\n}\n","import Game from \"./Game\";\n\nconst game = new Game();\n\nfunction step(timestamp) {\n  requestAnimationFrame(step);\n  game.step(timestamp);\n}\n\nrequestAnimationFrame(step);\n","import Renderer from './Renderer';\nimport Input from './Input';\n\nimport Text from './Text';\nimport Particles from './Particles';\nimport SpriteBatch from './SpriteBatch';\nimport Select from './states/Select';\nimport Minigame from './states/Minigame';\nimport Matrix3 from './Matrix3';\nimport PawPawToe from './minigames/PawPawToe';\nimport Meowmory from './minigames/Meowmory';\nimport Meowjong from './minigames/Meowjong';\nimport Meowsweeper from './minigames/Meowsweeper';\nimport Sudocat from './minigames/Sudocat';\n\nexport default class {\n  #started;\n  #timers;\n  #backgroundBatch;\n  #spriteBatch;\n  #cursor;\n  #state;\n  #nextState;\n  #shakeScreen;\n\n  constructor() {\n    this.renderer = new Renderer(() => {\n      if (!this.#started) {\n        for (let i = 0; i < 128; i++) {\n          const type = Math.floor(Math.random() * 15);\n          let color = null;\n          if (type < 5) {\n            color = BLACKCAT_COLOR + Math.floor(Math.random() * 5);\n          }\n          const sprite = this.#backgroundBatch.add(Math.random() * this.renderer.w, Math.random() * this.renderer.h, 16 + Math.random() * 100, type, color);\n          sprite.a = 0.33;\n          sprite.dx = -0.5 + Math.random();\n          sprite.dy = -0.5 + Math.random();\n          sprite.ds = -0.1 + Math.random() * 0.2;\n        }\n\n        this.#state = new Select();\n        // this.#state = new Minigame(Sudocat);\n        this.#state.init(this);\n        this.#started = true;\n      }\n    });\n\n    this.input = new Input(this);\n    this.#timers = [];\n\n    this.#backgroundBatch = new SpriteBatch(this, true);\n\n    this.text = new Text(this);\n    this.particles = new Particles(this);\n    this.#spriteBatch = new SpriteBatch(this);\n    this.#cursor = this.#spriteBatch.add(0, 0, 26, 0, BLACKCAT_COLOR);\n    this.#cursor.hidden = true;\n\n    this.minigamesWon = new Set();\n\n    this.firstStart = true;\n  }\n\n  step(timestamp) {\n    this.timestamp = timestamp;\n    this.#update(timestamp);\n    this.#draw();\n\n    if (this.#nextState) {\n      this.text.clear();\n      this.particles.clear();\n\n      this.#state = this.#nextState;\n      this.#state.init(this);\n      this.#nextState = null;\n    }\n  }\n\n  scheduleTimer(delay, onexpire, repeat) {\n    const timer = { start: this.timestamp ?? 0, delay: delay, onexpire: onexpire, repeat: repeat };\n    this.#timers.push(timer);\n    return timer;\n  }\n\n  shake(duration) {\n    if (navigator.vibrate) {\n      navigator.vibrate(duration);\n    }\n\n    this.#shakeScreen = true;\n    this.scheduleTimer(duration, () => this.#shakeScreen = false);\n  }\n\n  #update(timestamp) {\n    if (this.#shakeScreen) {\n      this.renderer.view[6] = Math.random() * 7;\n      this.renderer.view[7] = Math.random() * 7;\n    } else {\n      this.renderer.view[6] = 0;\n      this.renderer.view[7] = 0;\n    }\n\n    this.input.update();\n\n    if (this.input.mouse && this.#cursor.hidden) {\n      this.#cursor.hidden = false;\n      this.#spriteBatch.changed();\n    }\n\n    if (this.input.moved) {\n      this.#cursor.x = this.input.x - 6;\n      this.#cursor.y = this.input.y - 6;\n\n      this.#spriteBatch.changed();\n    }\n\n    for (const sprite of this.#backgroundBatch.sprites) {\n      sprite.x += sprite.dx;\n      sprite.y += sprite.dy;\n      sprite.s += sprite.ds;\n\n      if (sprite.x < 0) {\n        sprite.dx = -sprite.dx;\n        sprite.x = 0;\n      }\n\n      if (sprite.y < 0) {\n        sprite.dy = -sprite.dy;\n        sprite.y = 0;\n      }\n\n      if (sprite.x > this.renderer.w) {\n        sprite.dx = -sprite.dx;\n        sprite.x = this.renderer.w;\n      }\n\n      if (sprite.y > this.renderer.h) {\n        sprite.dy = -sprite.dy;\n        sprite.y = this.renderer.h;\n      }\n\n      if (sprite.s < 16) {\n        sprite.ds = -sprite.ds;\n        sprite.s = 16;\n      }\n\n      if (sprite.s > 116) {\n        sprite.ds = -sprite.ds;\n        sprite.s = 116;\n      }\n    }\n\n    this.#backgroundBatch.changed();\n    this.#backgroundBatch.update();\n\n    this.#updateTimers(timestamp);\n\n    if (this.#state) {\n      this.#nextState = this.#state.update();\n    }\n\n    this.text.update(timestamp);\n    this.particles.update(timestamp);\n    this.#spriteBatch.update();\n  }\n\n  #updateTimers(timestamp) {\n    for (const timer of this.#timers) {\n      if (timestamp >= timer.start + timer.delay && !timer.disabled) {\n        if (timer.repeat) {\n          timer.start = timestamp;\n        } else {\n          timer.expired = true;\n        }\n\n        if (timer.onexpire) {\n          timer.onexpire();\n        }\n      }\n    }\n\n    if (this.#timers.some(timer => timer.expired || timer.disabled)) {\n      this.#timers = this.#timers.filter(timer => !timer.expired && !timer.disabled);\n    }\n  }\n\n  #draw() {\n    this.renderer.clear();\n\n    const currProjection = this.renderer.projection;\n\n    this.renderer.projection = Matrix3.ortho(0, this.renderer.w, this.renderer.h, 0);\n    this.#backgroundBatch.draw();\n    this.renderer.projection = currProjection;\n\n    if (this.#state) {\n      this.#state.draw();\n    }\n\n    this.renderer.projection = Matrix3.ortho(0, this.renderer.w, this.renderer.h, 0);\n    this.text.draw();\n    this.#spriteBatch.draw();\n    this.renderer.projection = currProjection;\n\n    this.particles.draw();\n  }\n}\n"],"names":["Matrix3","Float32Array","identity","or","l","r","bottom","top","Shader","program","viewUniformLocation","projectionUniformLocation","texUniformLocation","imageSizeUniformLocation","constructor","gl","vertexShaderSource","fragmentShaderSource","vertexShader","this","compileShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","bind","bindAttribLocation","getUniformLocation","linkProgram","use","v","p","useProgram","setup","uniformMatrix3fv","uniform1i","uniform1f","type","source","shader","createShader","shaderSource","Renderer","onresize","shaders","textures","images","currentShader","currentVao","currentTexture","document","body","style","margin","padding","canvas","createElement","display","width","height","cursor","touchAction","ResizeObserver","m","Math","max","clientWidth","clientHeight","w","h","o","viewport","observe","box","appendChild","getContext","clearColor","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","quadBuffer","createQuadBuffer","Map","name","cachedShader","get","set","createVao","vao","createVertexArray","bindVertexArray","createBuffer","data","dynamic","buffer","updateBuffer","useBuffer","bufferData","ARRAY_BUFFER","DYNAMIC_DRAW","STATIC_DRAW","bindBuffer","a","location","size","stride","offset","divisor","vertexAttribPointer","FLOAT","enableVertexAttribArray","vertexAttribDivisor","fetchTexture","filename","smooth","path","cachedTexture","texture","createTexture","prepareTexture","imageIndex","length","image","Image","src","onload","clear","COLOR_BUFFER_BIT","d","vertexCount","instanceCount","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","drawArraysInstanced","TRIANGLES","drawArrays","texture0","texture2d","texImage2D","texParameteri","rgba","RGBA","unsignedByte","UNSIGNED_BYTE","filter","LINEAR","NEAREST","Uint8Array","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","Input","newKeyPresses","newKeyReleases","newPress","newRelease","lastX","lastY","game","renderer","addEventListener","event","mouse","pointerType","x","offsetX","y","offsetY","code","u","moved","press","release","keyPresses","newKeyPress","newKeyPressValue","Object","entries","keyReleases","newKeyRelease","newKeyReleaseValue","cr","cl","c","Sprite","s","color","e","cc","attributes","g","b","cb","bc","index","i","active","in","text","content","animations","delay","toString","spriteBatch","add","SpriteBatch","instanceBuffer","spritesChanged","textureFilename","sprites","sprite","push","map","flat","TextSegment","time","begin","timestamp","updated","animation","baseY","sin","baseX","random","Text","segments","super","floor","split","segment","currX","currY","charCodeAt","Particles","colorful","count","t","particle","angle","PI","dx","cos","dy","Grid","spacingX","spacingY","onclick","pressed","gridY","gridX","cell","fullW","fullH","grid","pressHandled","input","newActive","cellAtPosition","ca","indexAtPosition","relX","relY","indexX","trunc","indexY","Minigame","minigameClass","minigame","buttons","cat","leftPaw","rightPaw","catNameText","catTextText","exitButton","exit","catMet","started","won","lost","lostText","lostTextInfo","timer","init","button","buttonClick","_title","_sx","_type","cn","ct","_response","mt","title","_color","_catName","_catText","Select","win","lose","minigamesWon","texts","tt","particles","Meowsweeper","onwin","onlose","mines","fontSize","digButton","flagButton","mode","static","min","setMode","start","open","mine","flagged","available","availableCell","abs","mineCell","splice","k","opened","every","PawPawToe","over","mark","checkGrid","symbolCounts","Sudocat","grids","cellSize","activeButtons","digit","gridSpacing","gridSize","spacing","startX","buttonSize","buttonSpacing","setGrid","selectDigit","gridAt","checkCells","valid","resetCells","checkRow","checkColumn","digitCounts","digitCount","Meowmory","showingA","showingB","slice","indexA","cellA","indexB","cellB","secret","cancelShowing","found","Meowjong","selected","ceil","baseGrid","gridA","gridB","gridC","leftCell","rightCell","freeCell","checkGrids","Meowsterpiece","rows","columns","maxRows","maxColumns","markButton","row","column","state","gridCorrect","current","correct","fs","minigameState","camY","startBlackCat","blackCat","blackCatArrived","titleShown","introOver","introText","minigameClasses","_","sx","_rest","sy","has","firstLine","timers","backgroundBatch","nextState","shakeScreen","ds","Set","step","onexpire","repeat","duration","navigator","vibrate","updateTimers","ex","some","currProjection","requestAnimationFrame"],"mappings":"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"}